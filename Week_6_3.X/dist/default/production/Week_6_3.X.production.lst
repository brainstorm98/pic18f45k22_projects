

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 24 23:18:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 06/04/2022 GMT
    21                           ; 
    22                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F45K22 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   00028A                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _seg_char
    60   00028A  3F                 	db	63
    61   00028B  06                 	db	6
    62   00028C  5B                 	db	91
    63   00028D  4F                 	db	79
    64   00028E  66                 	db	102
    65   00028F  6D                 	db	109
    66   000290  7D                 	db	125
    67   000291  07                 	db	7
    68   000292  7F                 	db	127
    69   000293  6F                 	db	111
    70   000000                     _ADRESL	set	4035
    71   000000                     _ADRESH	set	4036
    72   000000                     _T0CON	set	4053
    73   000000                     _ADCON0	set	4034
    74   000000                     _ADCON1	set	4033
    75   000000                     _TMR0IF	set	32658
    76   000000                     _GODONE	set	32273
    77   000000                     _GIE	set	32663
    78   000000                     _ANSELD	set	3899
    79   000000                     _PORTA	set	3968
    80   000000                     _TRISA	set	3986
    81   000000                     _ANSELA	set	3896
    82   000000                     _TRISD	set	3989
    83   000000                     _PORTD	set	3971
    84   000000                     _ANSELE	set	3900
    85   000000                     _ADCON2	set	4032
    86   000000                     _TRISE	set	3990
    87   000000                     _TMR0L	set	4054
    88   000000                     _TMR0IP	set	32650
    89   000000                     _TMR0IE	set	32661
    90                           
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94   000254                     __pcinit:
    95                           	callstack 0
    96   000254                     start_initialization:
    97                           	callstack 0
    98   000254                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (10 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103   000254  0E8A               	movlw	low __pidataCOMRAM
   104   000256  6EF6               	movwf	tblptrl,c
   105   000258  0E02               	movlw	high __pidataCOMRAM
   106   00025A  6EF7               	movwf	tblptrh,c
   107   00025C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108   00025E  6EF8               	movwf	tblptru,c
   109   000260  EE00  F020         	lfsr	0,__pdataCOMRAM
   110   000264  EE10 F00A          	lfsr	1,10
   111   000268                     copy_data0:
   112   000268  0009               	tblrd		*+
   113   00026A  CFF5 FFEE          	movff	tablat,postinc0
   114   00026E  50E5               	movf	postdec1,w,c
   115   000270  50E1               	movf	fsr1l,w,c
   116   000272  E1FA               	bnz	copy_data0
   117                           
   118                           ; Clear objects allocated to COMRAM (13 bytes)
   119   000274  EE00  F013         	lfsr	0,__pbssCOMRAM
   120   000278  0E0D               	movlw	13
   121   00027A                     clear_0:
   122   00027A  6AEE               	clrf	postinc0,c
   123   00027C  06E8               	decf	wreg,f,c
   124   00027E  E1FD               	bnz	clear_0
   125   000280                     end_of_initialization:
   126                           	callstack 0
   127   000280                     __end_of__initialization:
   128                           	callstack 0
   129   000280  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   130   000282  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   131   000284  0100               	movlb	0
   132   000286  EF47  F000         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	bssCOMRAM
   135   000013                     __pbssCOMRAM:
   136                           	callstack 0
   137   000013                     _digits:
   138                           	callstack 0
   139   000013                     	ds	10
   140   00001D                     _value:
   141                           	callstack 0
   142   00001D                     	ds	2
   143   00001F                     _digit_counter:
   144                           	callstack 0
   145   00001F                     	ds	1
   146                           
   147                           	psect	dataCOMRAM
   148   000020                     __pdataCOMRAM:
   149                           	callstack 0
   150   000020                     _seg_char:
   151                           	callstack 0
   152   000020                     	ds	10
   153                           
   154                           	psect	cstackCOMRAM
   155   000001                     __pcstackCOMRAM:
   156                           	callstack 0
   157   000001                     ??_isr:
   158                           
   159                           ; 1 bytes @ 0x0
   160   000001                     	ds	4
   161   000005                     ?___lwmod:
   162                           	callstack 0
   163   000005                     ___lwmod@dividend:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x4
   167   000005                     	ds	2
   168   000007                     ___lwmod@divisor:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x6
   172   000007                     	ds	2
   173   000009                     ___lwmod@counter:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x8
   177   000009                     	ds	1
   178   00000A                     ?___lwdiv:
   179                           	callstack 0
   180   00000A                     ___lwdiv@dividend:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x9
   184   00000A                     	ds	2
   185   00000C                     ___lwdiv@divisor:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0xB
   189   00000C                     	ds	2
   190   00000E                     ___lwdiv@quotient:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0xD
   194   00000E                     	ds	2
   195   000010                     ___lwdiv@counter:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0xF
   199   000010                     	ds	1
   200   000011                     ??_main:
   201                           
   202                           ; 1 bytes @ 0x10
   203   000011                     	ds	2
   204                           
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 23 in file "newmain.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   224 ;;      Params:         0       0       0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0       0       0
   226 ;;      Temps:          2       0       0       0       0       0       0
   227 ;;      Totals:         2       0       0       0       0       0       0
   228 ;;Total ram usage:        2 bytes
   229 ;; Hardware stack levels required when called: 2
   230 ;; This function calls:
   231 ;;		___lwdiv
   232 ;;		___lwmod
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text0
   239   00008E                     __ptext0:
   240                           	callstack 0
   241   00008E                     _main:
   242                           	callstack 29
   243   00008E                     
   244                           ;newmain.c: 24:     GIE = 1;
   245   00008E  0E00               	movlw	0
   246   000090  010F               	movlb	15	; () banked
   247   000092  6F38               	movwf	56,b	;volatile
   248                           
   249                           ;newmain.c: 25:     while (1) {
   250   000094  0EF0               	movlw	240
   251   000096  6E92               	movwf	146,c	;volatile
   252                           
   253                           ;newmain.c: 26:         if (!GODONE) {
   254   000098  0E00               	movlw	0
   255   00009A  6E80               	movwf	128,c	;volatile
   256                           
   257                           ;newmain.c: 28:             GODONE = 1;
   258   00009C  0E00               	movlw	0
   259   00009E  6F3B               	movwf	59,b	;volatile
   260                           
   261                           ;newmain.c: 29:         }
   262   0000A0  0E00               	movlw	0
   263   0000A2  6E95               	movwf	149,c	;volatile
   264                           
   265                           ;newmain.c: 30:         digits[3] = value / 1000;
   266   0000A4  0E00               	movlw	0
   267   0000A6  6E83               	movwf	131,c	;volatile
   268                           
   269                           ;newmain.c: 32:         digits[1] = (value % 100) / 10;
   270   0000A8  0E02               	movlw	2
   271   0000AA  6F3C               	movwf	60,b	;volatile
   272                           
   273                           ;newmain.c: 33:         digits[0] = value % 10;
   274   0000AC  0E07               	movlw	7
   275   0000AE  6E96               	movwf	150,c	;volatile
   276                           
   277                           ;newmain.c: 35:     return;
   278   0000B0  0EA1               	movlw	161
   279   0000B2  6EC0               	movwf	192,c	;volatile
   280                           
   281                           ;newmain.c: 36: }
   282   0000B4  0E00               	movlw	0
   283   0000B6  6EC1               	movwf	193,c	;volatile
   284                           
   285                           ;newmain.c: 37: 
   286   0000B8  0E1B               	movlw	27
   287   0000BA  6EC2               	movwf	194,c	;volatile
   288                           
   289                           ;newmain.c: 38: void __attribute__((picinterrupt(("high_priority")))) isr() {
   290   0000BC  0EC3               	movlw	195
   291   0000BE  6ED5               	movwf	213,c	;volatile
   292                           
   293                           ;newmain.c: 39:     if (TMR0IF) {
   294   0000C0  0E06               	movlw	6
   295   0000C2  6ED6               	movwf	214,c	;volatile
   296   0000C4                     
   297                           ; BSR set to: 15
   298                           ;newmain.c: 40:         TMR0IF = 0;
   299   0000C4  8AF2               	bsf	4082,5,c	;volatile
   300   0000C6                     
   301                           ; BSR set to: 15
   302                           ;newmain.c: 41:         TMR0L = 6;
   303   0000C6  84F1               	bsf	4081,2,c	;volatile
   304   0000C8                     
   305                           ; BSR set to: 15
   306                           ;newmain.c: 42:         PORTA = 0x00;
   307   0000C8  8EF2               	bsf	4082,7,c	;volatile
   308   0000CA                     l862:
   309                           
   310                           ;newmain.c: 44:         PORTA = 0x01 << digit_counter;
   311   0000CA  B2C2               	btfsc	4034,1,c	;volatile
   312   0000CC  EF6A  F000         	goto	u171
   313   0000D0  EF6C  F000         	goto	u170
   314   0000D4                     u171:
   315   0000D4  EF76  F000         	goto	l868
   316   0000D8                     u170:
   317   0000D8                     
   318                           ;newmain.c: 45:         digit_counter++;
   319   0000D8  50C4               	movf	196,w,c	;volatile
   320   0000DA  6E12               	movwf	(??_main+1)^0,c
   321   0000DC  6A11               	clrf	??_main^0,c
   322   0000DE  50C3               	movf	195,w,c	;volatile
   323   0000E0  2411               	addwf	??_main^0,w,c
   324   0000E2  6E1D               	movwf	_value^0,c
   325   0000E4  0E00               	movlw	0
   326   0000E6  2012               	addwfc	(??_main+1)^0,w,c
   327   0000E8  6E1E               	movwf	(_value+1)^0,c
   328   0000EA                     
   329                           ;newmain.c: 46:         if (digit_counter >= 4) {
   330   0000EA  82C2               	bsf	4034,1,c	;volatile
   331   0000EC                     l868:
   332                           
   333                           ;newmain.c: 48:         }
   334   0000EC  C01D  F00A         	movff	_value,___lwdiv@dividend
   335   0000F0  C01E  F00B         	movff	_value+1,___lwdiv@dividend+1
   336   0000F4  0E03               	movlw	3
   337   0000F6  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
   338   0000F8  0EE8               	movlw	232
   339   0000FA  6E0C               	movwf	___lwdiv@divisor^0,c
   340   0000FC  ECBE  F000         	call	___lwdiv	;wreg free
   341   000100  500A               	movf	?___lwdiv^0,w,c
   342   000102  6E16               	movwf	(_digits+3)^0,c
   343   000104                     
   344                           ;newmain.c: 49:     }
   345   000104  0E03               	movlw	3
   346   000106  6E08               	movwf	(___lwmod@divisor+1)^0,c
   347   000108  0EE8               	movlw	232
   348   00010A  6E07               	movwf	___lwmod@divisor^0,c
   349   00010C  C01D  F005         	movff	_value,___lwmod@dividend
   350   000110  C01E  F006         	movff	_value+1,___lwmod@dividend+1
   351   000114  ECF8  F000         	call	___lwmod	;wreg free
   352   000118  C005  F00A         	movff	?___lwmod,___lwdiv@dividend
   353   00011C  C006  F00B         	movff	?___lwmod+1,___lwdiv@dividend+1
   354   000120  0E00               	movlw	0
   355   000122  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
   356   000124  0E64               	movlw	100
   357   000126  6E0C               	movwf	___lwdiv@divisor^0,c
   358   000128  ECBE  F000         	call	___lwdiv	;wreg free
   359   00012C  500A               	movf	?___lwdiv^0,w,c
   360   00012E  6E15               	movwf	(_digits+2)^0,c
   361   000130                     
   362                           ;newmain.c: 50: }
   363   000130  0E00               	movlw	0
   364   000132  6E08               	movwf	(___lwmod@divisor+1)^0,c
   365   000134  0E64               	movlw	100
   366   000136  6E07               	movwf	___lwmod@divisor^0,c
   367   000138  C01D  F005         	movff	_value,___lwmod@dividend
   368   00013C  C01E  F006         	movff	_value+1,___lwmod@dividend+1
   369   000140  ECF8  F000         	call	___lwmod	;wreg free
   370   000144  C005  F00A         	movff	?___lwmod,___lwdiv@dividend
   371   000148  C006  F00B         	movff	?___lwmod+1,___lwdiv@dividend+1
   372   00014C  0E00               	movlw	0
   373   00014E  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
   374   000150  0E0A               	movlw	10
   375   000152  6E0C               	movwf	___lwdiv@divisor^0,c
   376   000154  ECBE  F000         	call	___lwdiv	;wreg free
   377   000158  500A               	movf	?___lwdiv^0,w,c
   378   00015A  6E14               	movwf	(_digits+1)^0,c
   379   00015C  C01D  F005         	movff	_value,___lwmod@dividend
   380   000160  C01E  F006         	movff	_value+1,___lwmod@dividend+1
   381   000164  0E00               	movlw	0
   382   000166  6E08               	movwf	(___lwmod@divisor+1)^0,c
   383   000168  0E0A               	movlw	10
   384   00016A  6E07               	movwf	___lwmod@divisor^0,c
   385   00016C  ECF8  F000         	call	___lwmod	;wreg free
   386   000170  5005               	movf	?___lwmod^0,w,c
   387   000172  6E13               	movwf	_digits^0,c
   388   000174  EF65  F000         	goto	l862
   389   000178  EF45  F000         	goto	start
   390   00017C                     __end_of_main:
   391                           	callstack 0
   392                           
   393 ;; *************** function ___lwmod *****************
   394 ;; Defined at:
   395 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  dividend        2    4[COMRAM] unsigned int 
   398 ;;  divisor         2    6[COMRAM] unsigned int 
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  counter         1    8[COMRAM] unsigned char 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  2    4[COMRAM] unsigned int 
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   410 ;;      Params:         4       0       0       0       0       0       0
   411 ;;      Locals:         1       0       0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0
   413 ;;      Totals:         5       0       0       0       0       0       0
   414 ;;Total ram usage:        5 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; Hardware stack levels required when called: 1
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text1
   425   0001F0                     __ptext1:
   426                           	callstack 0
   427   0001F0                     ___lwmod:
   428                           	callstack 29
   429   0001F0  5007               	movf	___lwmod@divisor^0,w,c
   430   0001F2  1008               	iorwf	(___lwmod@divisor+1)^0,w,c
   431   0001F4  B4D8               	btfsc	status,2,c
   432   0001F6  EFFF  F000         	goto	u141
   433   0001FA  EF01  F001         	goto	u140
   434   0001FE                     u141:
   435   0001FE  EF25  F001         	goto	l568
   436   000202                     u140:
   437   000202  0E01               	movlw	1
   438   000204  6E09               	movwf	___lwmod@counter^0,c
   439   000206  EF09  F001         	goto	l844
   440   00020A                     l842:
   441   00020A  90D8               	bcf	status,0,c
   442   00020C  3607               	rlcf	___lwmod@divisor^0,f,c
   443   00020E  3608               	rlcf	(___lwmod@divisor+1)^0,f,c
   444   000210  2A09               	incf	___lwmod@counter^0,f,c
   445   000212                     l844:
   446   000212  AE08               	btfss	(___lwmod@divisor+1)^0,7,c
   447   000214  EF0E  F001         	goto	u151
   448   000218  EF10  F001         	goto	u150
   449   00021C                     u151:
   450   00021C  EF05  F001         	goto	l842
   451   000220                     u150:
   452   000220                     l846:
   453   000220  5007               	movf	___lwmod@divisor^0,w,c
   454   000222  5C05               	subwf	___lwmod@dividend^0,w,c
   455   000224  5008               	movf	(___lwmod@divisor+1)^0,w,c
   456   000226  5806               	subwfb	(___lwmod@dividend+1)^0,w,c
   457   000228  A0D8               	btfss	status,0,c
   458   00022A  EF19  F001         	goto	u161
   459   00022E  EF1B  F001         	goto	u160
   460   000232                     u161:
   461   000232  EF1F  F001         	goto	l850
   462   000236                     u160:
   463   000236  5007               	movf	___lwmod@divisor^0,w,c
   464   000238  5E05               	subwf	___lwmod@dividend^0,f,c
   465   00023A  5008               	movf	(___lwmod@divisor+1)^0,w,c
   466   00023C  5A06               	subwfb	(___lwmod@dividend+1)^0,f,c
   467   00023E                     l850:
   468   00023E  90D8               	bcf	status,0,c
   469   000240  3208               	rrcf	(___lwmod@divisor+1)^0,f,c
   470   000242  3207               	rrcf	___lwmod@divisor^0,f,c
   471   000244  2E09               	decfsz	___lwmod@counter^0,f,c
   472   000246  EF10  F001         	goto	l846
   473   00024A                     l568:
   474   00024A  C005  F005         	movff	___lwmod@dividend,?___lwmod
   475   00024E  C006  F006         	movff	___lwmod@dividend+1,?___lwmod+1
   476   000252  0012               	return		;funcret
   477   000254                     __end_of___lwmod:
   478                           	callstack 0
   479                           
   480 ;; *************** function ___lwdiv *****************
   481 ;; Defined at:
   482 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  dividend        2    9[COMRAM] unsigned int 
   485 ;;  divisor         2   11[COMRAM] unsigned int 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  quotient        2   13[COMRAM] unsigned int 
   488 ;;  counter         1   15[COMRAM] unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  2    9[COMRAM] unsigned int 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   498 ;;      Params:         4       0       0       0       0       0       0
   499 ;;      Locals:         3       0       0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0
   501 ;;      Totals:         7       0       0       0       0       0       0
   502 ;;Total ram usage:        7 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text2
   513   00017C                     __ptext2:
   514                           	callstack 0
   515   00017C                     ___lwdiv:
   516                           	callstack 29
   517   00017C  0E00               	movlw	0
   518   00017E  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
   519   000180  0E00               	movlw	0
   520   000182  6E0E               	movwf	___lwdiv@quotient^0,c
   521   000184  500C               	movf	___lwdiv@divisor^0,w,c
   522   000186  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
   523   000188  B4D8               	btfsc	status,2,c
   524   00018A  EFC9  F000         	goto	u111
   525   00018E  EFCB  F000         	goto	u110
   526   000192                     u111:
   527   000192  EFF3  F000         	goto	l558
   528   000196                     u110:
   529   000196  0E01               	movlw	1
   530   000198  6E10               	movwf	___lwdiv@counter^0,c
   531   00019A  EFD3  F000         	goto	l824
   532   00019E                     l822:
   533   00019E  90D8               	bcf	status,0,c
   534   0001A0  360C               	rlcf	___lwdiv@divisor^0,f,c
   535   0001A2  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
   536   0001A4  2A10               	incf	___lwdiv@counter^0,f,c
   537   0001A6                     l824:
   538   0001A6  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
   539   0001A8  EFD8  F000         	goto	u121
   540   0001AC  EFDA  F000         	goto	u120
   541   0001B0                     u121:
   542   0001B0  EFCF  F000         	goto	l822
   543   0001B4                     u120:
   544   0001B4                     l826:
   545   0001B4  90D8               	bcf	status,0,c
   546   0001B6  360E               	rlcf	___lwdiv@quotient^0,f,c
   547   0001B8  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
   548   0001BA  500C               	movf	___lwdiv@divisor^0,w,c
   549   0001BC  5C0A               	subwf	___lwdiv@dividend^0,w,c
   550   0001BE  500D               	movf	(___lwdiv@divisor+1)^0,w,c
   551   0001C0  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
   552   0001C2  A0D8               	btfss	status,0,c
   553   0001C4  EFE6  F000         	goto	u131
   554   0001C8  EFE8  F000         	goto	u130
   555   0001CC                     u131:
   556   0001CC  EFED  F000         	goto	l834
   557   0001D0                     u130:
   558   0001D0  500C               	movf	___lwdiv@divisor^0,w,c
   559   0001D2  5E0A               	subwf	___lwdiv@dividend^0,f,c
   560   0001D4  500D               	movf	(___lwdiv@divisor+1)^0,w,c
   561   0001D6  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
   562   0001D8  800E               	bsf	___lwdiv@quotient^0,0,c
   563   0001DA                     l834:
   564   0001DA  90D8               	bcf	status,0,c
   565   0001DC  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
   566   0001DE  320C               	rrcf	___lwdiv@divisor^0,f,c
   567   0001E0  2E10               	decfsz	___lwdiv@counter^0,f,c
   568   0001E2  EFDA  F000         	goto	l826
   569   0001E6                     l558:
   570   0001E6  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
   571   0001EA  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
   572   0001EE  0012               	return		;funcret
   573   0001F0                     __end_of___lwdiv:
   574                           	callstack 0
   575                           
   576 ;; *************** function _isr *****************
   577 ;; Defined at:
   578 ;;		line 56 in file "newmain.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   592 ;;      Params:         0       0       0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0
   594 ;;      Temps:          4       0       0       0       0       0       0
   595 ;;      Totals:         4       0       0       0       0       0       0
   596 ;;Total ram usage:        4 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		Interrupt level 2
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	intcode
   606   000008                     __pintcode:
   607                           	callstack 0
   608   000008                     _isr:
   609                           	callstack 29
   610                           
   611                           ;incstack = 0
   612   000008  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   613   00000A  CFD9 F003          	movff	fsr2l,??_isr+2
   614   00000E  CFDA F004          	movff	fsr2h,??_isr+3
   615   000012  A4F2               	btfss	4082,2,c	;volatile
   616   000014  EF0E  F000         	goto	i2u8_41
   617   000018  EF10  F000         	goto	i2u8_40
   618   00001C                     i2u8_41:
   619   00001C  EF3F  F000         	goto	i2l64
   620   000020                     i2u8_40:
   621   000020  94F2               	bcf	4082,2,c	;volatile
   622   000022  0E06               	movlw	6
   623   000024  6ED6               	movwf	214,c	;volatile
   624   000026  0E00               	movlw	0
   625   000028  6E80               	movwf	128,c	;volatile
   626   00002A  0E13               	movlw	low _digits
   627   00002C  241F               	addwf	_digit_counter^0,w,c
   628   00002E  6ED9               	movwf	fsr2l,c
   629   000030  6ADA               	clrf	fsr2h,c
   630   000032  0E00               	movlw	high _digits
   631   000034  22DA               	addwfc	fsr2h,f,c
   632   000036  50DF               	movf	indf2,w,c
   633   000038  6E01               	movwf	??_isr^0,c
   634   00003A  6A02               	clrf	(??_isr+1)^0,c
   635   00003C  0E20               	movlw	low _seg_char
   636   00003E  2401               	addwf	??_isr^0,w,c
   637   000040  6ED9               	movwf	fsr2l,c
   638   000042  0E00               	movlw	high _seg_char
   639   000044  2002               	addwfc	(??_isr+1)^0,w,c
   640   000046  6EDA               	movwf	fsr2h,c
   641   000048  50DF               	movf	indf2,w,c
   642   00004A  6E83               	movwf	131,c	;volatile
   643   00004C  C01F  F001         	movff	_digit_counter,??_isr
   644   000050  0E01               	movlw	1
   645   000052  6E02               	movwf	(??_isr+1)^0,c
   646   000054  2A01               	incf	??_isr^0,f,c
   647   000056  EF2F  F000         	goto	i2u9_44
   648   00005A                     i2u9_45:
   649   00005A  90D8               	bcf	status,0,c
   650   00005C  3602               	rlcf	(??_isr+1)^0,f,c
   651   00005E                     i2u9_44:
   652   00005E  2E01               	decfsz	??_isr^0,f,c
   653   000060  EF2D  F000         	goto	i2u9_45
   654   000064  5002               	movf	(??_isr+1)^0,w,c
   655   000066  6E80               	movwf	128,c	;volatile
   656   000068  2A1F               	incf	_digit_counter^0,f,c
   657   00006A  0E03               	movlw	3
   658   00006C  641F               	cpfsgt	_digit_counter^0,c
   659   00006E  EF3B  F000         	goto	i2u10_41
   660   000072  EF3D  F000         	goto	i2u10_40
   661   000076                     i2u10_41:
   662   000076  EF3F  F000         	goto	i2l64
   663   00007A                     i2u10_40:
   664   00007A  0E00               	movlw	0
   665   00007C  6E1F               	movwf	_digit_counter^0,c
   666   00007E                     i2l64:
   667   00007E  C004  FFDA         	movff	??_isr+3,fsr2h
   668   000082  C003  FFD9         	movff	??_isr+2,fsr2l
   669   000086  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   670   000088  0011               	retfie		f
   671   00008A                     __end_of_isr:
   672                           	callstack 0
   673   000000                     
   674                           	psect	rparam
   675   000000                     
   676                           	psect	temp
   677   00002A                     btemp:
   678                           	callstack 0
   679   00002A                     	ds	1
   680   000000                     int$flags	set	btemp
   681   000000                     wtemp8	set	btemp+1
   682   000000                     ttemp5	set	btemp+1
   683   000000                     ttemp6	set	btemp+4
   684   000000                     ttemp7	set	btemp+8
   685                           
   686                           	psect	idloc
   687                           
   688                           ;Config register IDLOC0 @ 0x200000
   689                           ;	unspecified, using default values
   690   200000                     	org	2097152
   691   200000  FF                 	db	255
   692                           
   693                           ;Config register IDLOC1 @ 0x200001
   694                           ;	unspecified, using default values
   695   200001                     	org	2097153
   696   200001  FF                 	db	255
   697                           
   698                           ;Config register IDLOC2 @ 0x200002
   699                           ;	unspecified, using default values
   700   200002                     	org	2097154
   701   200002  FF                 	db	255
   702                           
   703                           ;Config register IDLOC3 @ 0x200003
   704                           ;	unspecified, using default values
   705   200003                     	org	2097155
   706   200003  FF                 	db	255
   707                           
   708                           ;Config register IDLOC4 @ 0x200004
   709                           ;	unspecified, using default values
   710   200004                     	org	2097156
   711   200004  FF                 	db	255
   712                           
   713                           ;Config register IDLOC5 @ 0x200005
   714                           ;	unspecified, using default values
   715   200005                     	org	2097157
   716   200005  FF                 	db	255
   717                           
   718                           ;Config register IDLOC6 @ 0x200006
   719                           ;	unspecified, using default values
   720   200006                     	org	2097158
   721   200006  FF                 	db	255
   722                           
   723                           ;Config register IDLOC7 @ 0x200007
   724                           ;	unspecified, using default values
   725   200007                     	org	2097159
   726   200007  FF                 	db	255
   727                           
   728                           	psect	config
   729                           
   730                           ; Padding undefined space
   731   300000                     	org	3145728
   732   300000  FF                 	db	255
   733                           
   734                           ;Config register CONFIG1H @ 0x300001
   735                           ;	Oscillator Selection bits
   736                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
   737                           ;	4X PLL Enable
   738                           ;	PLLCFG = 0x0, unprogrammed default
   739                           ;	Primary clock enable bit
   740                           ;	PRICLKEN = 0x1, unprogrammed default
   741                           ;	Fail-Safe Clock Monitor Enable bit
   742                           ;	FCMEN = 0x0, unprogrammed default
   743                           ;	Internal/External Oscillator Switchover bit
   744                           ;	IESO = 0x0, unprogrammed default
   745   300001                     	org	3145729
   746   300001  22                 	db	34
   747                           
   748                           ;Config register CONFIG2L @ 0x300002
   749                           ;	unspecified, using default values
   750                           ;	Power-up Timer Enable bit
   751                           ;	PWRTEN = 0x1, unprogrammed default
   752                           ;	Brown-out Reset Enable bits
   753                           ;	BOREN = 0x3, unprogrammed default
   754                           ;	Brown Out Reset Voltage bits
   755                           ;	BORV = 0x3, unprogrammed default
   756   300002                     	org	3145730
   757   300002  1F                 	db	31
   758                           
   759                           ;Config register CONFIG2H @ 0x300003
   760                           ;	Watchdog Timer Enable bits
   761                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   762                           ;	Watchdog Timer Postscale Select bits
   763                           ;	WDTPS = 0xF, unprogrammed default
   764   300003                     	org	3145731
   765   300003  3C                 	db	60
   766                           
   767                           ; Padding undefined space
   768   300004                     	org	3145732
   769   300004  FF                 	db	255
   770                           
   771                           ;Config register CONFIG3H @ 0x300005
   772                           ;	unspecified, using default values
   773                           ;	CCP2 MUX bit
   774                           ;	CCP2MX = 0x1, unprogrammed default
   775                           ;	PORTB A/D Enable bit
   776                           ;	PBADEN = 0x1, unprogrammed default
   777                           ;	P3A/CCP3 Mux bit
   778                           ;	CCP3MX = 0x1, unprogrammed default
   779                           ;	HFINTOSC Fast Start-up
   780                           ;	HFOFST = 0x1, unprogrammed default
   781                           ;	Timer3 Clock input mux bit
   782                           ;	T3CMX = 0x1, unprogrammed default
   783                           ;	ECCP2 B output mux bit
   784                           ;	P2BMX = 0x1, unprogrammed default
   785                           ;	MCLR Pin Enable bit
   786                           ;	MCLRE = 0x1, unprogrammed default
   787   300005                     	org	3145733
   788   300005  BF                 	db	191
   789                           
   790                           ;Config register CONFIG4L @ 0x300006
   791                           ;	unspecified, using default values
   792                           ;	Stack Full/Underflow Reset Enable bit
   793                           ;	STVREN = 0x1, unprogrammed default
   794                           ;	Single-Supply ICSP Enable bit
   795                           ;	LVP = 0x1, unprogrammed default
   796                           ;	Extended Instruction Set Enable bit
   797                           ;	XINST = 0x0, unprogrammed default
   798                           ;	Background Debug
   799                           ;	DEBUG = 0x1, unprogrammed default
   800   300006                     	org	3145734
   801   300006  85                 	db	133
   802                           
   803                           ; Padding undefined space
   804   300007                     	org	3145735
   805   300007  FF                 	db	255
   806                           
   807                           ;Config register CONFIG5L @ 0x300008
   808                           ;	unspecified, using default values
   809                           ;	Code Protection Block 0
   810                           ;	CP0 = 0x1, unprogrammed default
   811                           ;	Code Protection Block 1
   812                           ;	CP1 = 0x1, unprogrammed default
   813                           ;	Code Protection Block 2
   814                           ;	CP2 = 0x1, unprogrammed default
   815                           ;	Code Protection Block 3
   816                           ;	CP3 = 0x1, unprogrammed default
   817   300008                     	org	3145736
   818   300008  0F                 	db	15
   819                           
   820                           ;Config register CONFIG5H @ 0x300009
   821                           ;	unspecified, using default values
   822                           ;	Boot Block Code Protection bit
   823                           ;	CPB = 0x1, unprogrammed default
   824                           ;	Data EEPROM Code Protection bit
   825                           ;	CPD = 0x1, unprogrammed default
   826   300009                     	org	3145737
   827   300009  C0                 	db	192
   828                           
   829                           ;Config register CONFIG6L @ 0x30000A
   830                           ;	unspecified, using default values
   831                           ;	Write Protection Block 0
   832                           ;	WRT0 = 0x1, unprogrammed default
   833                           ;	Write Protection Block 1
   834                           ;	WRT1 = 0x1, unprogrammed default
   835                           ;	Write Protection Block 2
   836                           ;	WRT2 = 0x1, unprogrammed default
   837                           ;	Write Protection Block 3
   838                           ;	WRT3 = 0x1, unprogrammed default
   839   30000A                     	org	3145738
   840   30000A  0F                 	db	15
   841                           
   842                           ;Config register CONFIG6H @ 0x30000B
   843                           ;	unspecified, using default values
   844                           ;	Configuration Register Write Protection bit
   845                           ;	WRTC = 0x1, unprogrammed default
   846                           ;	Boot Block Write Protection bit
   847                           ;	WRTB = 0x1, unprogrammed default
   848                           ;	Data EEPROM Write Protection bit
   849                           ;	WRTD = 0x1, unprogrammed default
   850   30000B                     	org	3145739
   851   30000B  E0                 	db	224
   852                           
   853                           ;Config register CONFIG7L @ 0x30000C
   854                           ;	unspecified, using default values
   855                           ;	Table Read Protection Block 0
   856                           ;	EBTR0 = 0x1, unprogrammed default
   857                           ;	Table Read Protection Block 1
   858                           ;	EBTR1 = 0x1, unprogrammed default
   859                           ;	Table Read Protection Block 2
   860                           ;	EBTR2 = 0x1, unprogrammed default
   861                           ;	Table Read Protection Block 3
   862                           ;	EBTR3 = 0x1, unprogrammed default
   863   30000C                     	org	3145740
   864   30000C  0F                 	db	15
   865                           
   866                           ;Config register CONFIG7H @ 0x30000D
   867                           ;	unspecified, using default values
   868                           ;	Boot Block Table Read Protection bit
   869                           ;	EBTRB = 0x1, unprogrammed default
   870   30000D                     	org	3145741
   871   30000D  40                 	db	64
   872                           tosu	equ	0xFFF
   873                           tosh	equ	0xFFE
   874                           tosl	equ	0xFFD
   875                           stkptr	equ	0xFFC
   876                           pclatu	equ	0xFFB
   877                           pclath	equ	0xFFA
   878                           pcl	equ	0xFF9
   879                           tblptru	equ	0xFF8
   880                           tblptrh	equ	0xFF7
   881                           tblptrl	equ	0xFF6
   882                           tablat	equ	0xFF5
   883                           prodh	equ	0xFF4
   884                           prodl	equ	0xFF3
   885                           indf0	equ	0xFEF
   886                           postinc0	equ	0xFEE
   887                           postdec0	equ	0xFED
   888                           preinc0	equ	0xFEC
   889                           plusw0	equ	0xFEB
   890                           fsr0h	equ	0xFEA
   891                           fsr0l	equ	0xFE9
   892                           wreg	equ	0xFE8
   893                           indf1	equ	0xFE7
   894                           postinc1	equ	0xFE6
   895                           postdec1	equ	0xFE5
   896                           preinc1	equ	0xFE4
   897                           plusw1	equ	0xFE3
   898                           fsr1h	equ	0xFE2
   899                           fsr1l	equ	0xFE1
   900                           bsr	equ	0xFE0
   901                           indf2	equ	0xFDF
   902                           postinc2	equ	0xFDE
   903                           postdec2	equ	0xFDD
   904                           preinc2	equ	0xFDC
   905                           plusw2	equ	0xFDB
   906                           fsr2h	equ	0xFDA
   907                           fsr2l	equ	0xFD9
   908                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1233
                                             16 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              9 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      29       1       43.6%
BITBIGSFRllh        43      0       0      22        0.0%
BITBIGSFRhhl        29      0       0      18        0.0%
BITBIGSFRhhhhl      1A      0       0      16        0.0%
BITBIGSFRhhhlh      10      0       0      17        0.0%
BITBIGSFRlhh         E      0       0      20        0.0%
BITBIGSFRhhhhh       D      0       0      15        0.0%
BITBIGSFRlhl         2      0       0      21        0.0%
BITBIGSFRhl          2      0       0      19        0.0%
BITBIGSFRlll         2      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      24        0.0%
DATA                 0      0      29      26        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 24 23:18:28 2023

                    l820 0196                      l565 01EE                      l830 01D0  
                    l822 019E                      l558 01E6                      l575 0252  
                    l832 01D8                      l824 01A6                      l816 017C  
                    l840 0202                      l568 024A                      l834 01DA  
                    l826 01B4                      l818 0184                      l850 023E  
                    l842 020A                      l836 01E0                      l828 01BA  
                    l852 0244                      l844 0212                      l860 00C8  
                    l846 0220                      l838 01F0                      l870 0104  
                    l862 00CA                      l854 008E                      l848 0236  
                    l872 0130                      l864 00D8                      l856 00C4  
                    l874 015C                      l866 00EA                      l858 00C6  
                    l868 00EC                      _GIE 7F97                      u110 0196  
                    u111 0192                      u120 01B4                      u121 01B0  
                    u130 01D0                      u131 01CC                      u140 0202  
                    u141 01FE                      u150 0220                      u151 021C  
                    u160 0236                      u161 0232                      u170 00D8  
                    u171 00D4                      _isr 0008                      wreg 0FE8  
                   ?_isr 0001                     i2l64 007E                     _main 008E  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 002A                     start 008A  
           ___param_bank 0000                    ??_isr 0001                    ?_main 0001  
                  _T0CON 0FD5          __end_of___lwdiv 01F0          __end_of___lwmod 0254  
                  i2l800 0012                    i2l810 0068                    i2l802 0020  
                  i2l812 006A                    i2l804 0022                    i2l814 007A  
                  i2l806 002A                    i2l808 004C                    _TMR0L 0FD6  
                  _PORTA 0F80                    _PORTD 0F83                    _TRISA 0F92  
                  _TRISD 0F95                    _TRISE 0F96                    _value 001D  
                  tablat 0FF5                    ttemp5 002B                    ttemp6 002E  
                  ttemp7 0032                    status 0FD8                    wtemp8 002B  
        __initialization 0254             __end_of_main 017C                   ??_main 0011  
          __activetblptr 0000                   _ADCON0 0FC2                   _ADCON1 0FC1  
                 _ADCON2 0FC0                   _ADRESH 0FC4                   _ADRESL 0FC3  
                 _ANSELA 0F38                   _ANSELD 0F3B                   _ANSELE 0F3C  
                 _GODONE 7E11                   _TMR0IE 7F95                   _TMR0IF 7F92  
                 _TMR0IP 7F8A                   i2u8_40 0020                   i2u8_41 001C  
                 i2u9_44 005E                   i2u9_45 005A                   _digits 0013  
              ??___lwdiv 000E                ??___lwmod 0009                   clear_0 027A  
                 isa$std 0001             __pdataCOMRAM 0020                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0280            ___rparam_used 0001           __pcstackCOMRAM 0001  
                i2u10_40 007A                  i2u10_41 0076                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 017C                  ___lwmod 01F0  
                __pcinit 0254                  __ramtop 0600                  __ptext0 008E  
                __ptext1 01F0                  __ptext2 017C     end_of_initialization 0280  
                postdec1 0FE5                  postinc0 0FEE            __pidataCOMRAM 028A  
    start_initialization 0254              __end_of_isr 008A              __pbssCOMRAM 0013  
       ___lwdiv@dividend 000A                __pintcode 0008                 ?___lwdiv 000A  
               ?___lwmod 0005         ___lwdiv@quotient 000E            _digit_counter 001F  
              copy_data0 0268                 __Hrparam 0000                 __Lrparam 0000  
        ___lwdiv@divisor 000C          ___lwdiv@counter 0010                 _seg_char 0020  
               isa$xinst 0000                 int$flags 002A                 intlevel2 0000  
       ___lwmod@dividend 0005          ___lwmod@divisor 0007          ___lwmod@counter 0009  
