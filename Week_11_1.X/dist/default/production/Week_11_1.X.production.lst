

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 23 12:25:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 06/04/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F45K22 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataBANK0
    86   0030B6                     __pidataBANK0:
    87                           	callstack 0
    88                           
    89                           ;initializer for _line
    90   0030B6  20                 	db	32
    91   0030B7  20                 	db	32
    92   0030B8  20                 	db	32
    93   0030B9  20                 	db	32
    94   0030BA  20                 	db	32
    95   0030BB  20                 	db	32
    96   0030BC  20                 	db	32
    97   0030BD  20                 	db	32
    98   0030BE  20                 	db	32
    99   0030BF  20                 	db	32
   100   0030C0  20                 	db	32
   101   0030C1  20                 	db	32
   102   0030C2  20                 	db	32
   103   0030C3  20                 	db	32
   104   0030C4  20                 	db	32
   105   0030C5  20                 	db	32
   106   0030C6  20                 	db	32
   107   0030C7  20                 	db	32
   108   0030C8  20                 	db	32
   109   0030C9  20                 	db	32
   110   0030CA  20                 	db	32
   111   0030CB  20                 	db	32
   112   0030CC  20                 	db	32
   113   0030CD  20                 	db	32
   114   0030CE  20                 	db	32
   115   0030CF  20                 	db	32
   116   0030D0  20                 	db	32
   117   0030D1  20                 	db	32
   118   0030D2  20                 	db	32
   119   0030D3  20                 	db	32
   120   0030D4  20                 	db	32
   121   0030D5  20                 	db	32
   122   0030D6  20                 	db	32
   123   0030D7  20                 	db	32
   124   0030D8  20                 	db	32
   125   0030D9  20                 	db	32
   126   0030DA  20                 	db	32
   127   0030DB  20                 	db	32
   128   0030DC  20                 	db	32
   129   0030DD  20                 	db	32
   130   0030DE  20                 	db	32
   131   000000                     _ADRESL	set	4035
   132   000000                     _ADRESH	set	4036
   133   000000                     _ADCON0bits	set	4034
   134   000000                     _ADCON1	set	4033
   135   000000                     _PORTD	set	3971
   136   000000                     _GODONE	set	32273
   137   000000                     _PORTDbits	set	3971
   138   000000                     _ANSELE	set	3900
   139   000000                     _ANSELD	set	3899
   140   000000                     _ANSELC	set	3898
   141   000000                     _ANSELB	set	3897
   142   000000                     _TRISA	set	3986
   143   000000                     _ANSELA	set	3896
   144   000000                     _ADCON2	set	4032
   145   000000                     _TRISE	set	3990
   146   000000                     _TRISD	set	3989
   147   000000                     _TRISC	set	3988
   148   000000                     _TRISB	set	3987
   149                           
   150                           	psect	smallconst
   151   000600                     __psmallconst:
   152                           	callstack 0
   153   000600  00                 	db	0
   154   000601                     STR_1:
   155   000601  30                 	db	48	;'0'
   156   000602  30                 	db	48	;'0'
   157   000603  3A                 	db	58	;':'
   158   000604  25                 	db	37
   159   000605  34                 	db	52	;'4'
   160   000606  2E                 	db	46
   161   000607  32                 	db	50	;'2'
   162   000608  66                 	db	102	;'f'
   163   000609  20                 	db	32
   164   00060A  30                 	db	48	;'0'
   165   00060B  31                 	db	49	;'1'
   166   00060C  3A                 	db	58	;':'
   167   00060D  25                 	db	37
   168   00060E  34                 	db	52	;'4'
   169   00060F  2E                 	db	46
   170   000610  32                 	db	50	;'2'
   171   000611  66                 	db	102	;'f'
   172   000612  20                 	db	32
   173   000613  30                 	db	48	;'0'
   174   000614  32                 	db	50	;'2'
   175   000615  3A                 	db	58	;':'
   176   000616  25                 	db	37
   177   000617  34                 	db	52	;'4'
   178   000618  2E                 	db	46
   179   000619  32                 	db	50	;'2'
   180   00061A  66                 	db	102	;'f'
   181   00061B  20                 	db	32
   182   00061C  30                 	db	48	;'0'
   183   00061D  33                 	db	51	;'3'
   184   00061E  3A                 	db	58	;':'
   185   00061F  25                 	db	37
   186   000620  34                 	db	52	;'4'
   187   000621  2E                 	db	46
   188   000622  32                 	db	50	;'2'
   189   000623  66                 	db	102	;'f'
   190   000624  20                 	db	32
   191   000625  30                 	db	48	;'0'
   192   000626  34                 	db	52	;'4'
   193   000627  3A                 	db	58	;':'
   194   000628  25                 	db	37
   195   000629  34                 	db	52	;'4'
   196   00062A  2E                 	db	46
   197   00062B  32                 	db	50	;'2'
   198   00062C  66                 	db	102	;'f'
   199   00062D  00                 	db	0
   200   00062E                     STR_3:
   201   00062E  31                 	db	49	;'1'
   202   00062F  30                 	db	48	;'0'
   203   000630  3A                 	db	58	;':'
   204   000631  25                 	db	37
   205   000632  34                 	db	52	;'4'
   206   000633  2E                 	db	46
   207   000634  32                 	db	50	;'2'
   208   000635  66                 	db	102	;'f'
   209   000636  20                 	db	32
   210   000637  31                 	db	49	;'1'
   211   000638  31                 	db	49	;'1'
   212   000639  3A                 	db	58	;':'
   213   00063A  25                 	db	37
   214   00063B  34                 	db	52	;'4'
   215   00063C  2E                 	db	46
   216   00063D  32                 	db	50	;'2'
   217   00063E  66                 	db	102	;'f'
   218   00063F  20                 	db	32
   219   000640  31                 	db	49	;'1'
   220   000641  32                 	db	50	;'2'
   221   000642  3A                 	db	58	;':'
   222   000643  25                 	db	37
   223   000644  34                 	db	52	;'4'
   224   000645  2E                 	db	46
   225   000646  32                 	db	50	;'2'
   226   000647  66                 	db	102	;'f'
   227   000648  20                 	db	32
   228   000649  31                 	db	49	;'1'
   229   00064A  33                 	db	51	;'3'
   230   00064B  3A                 	db	58	;':'
   231   00064C  25                 	db	37
   232   00064D  34                 	db	52	;'4'
   233   00064E  2E                 	db	46
   234   00064F  32                 	db	50	;'2'
   235   000650  66                 	db	102	;'f'
   236   000651  20                 	db	32
   237   000652  31                 	db	49	;'1'
   238   000653  34                 	db	52	;'4'
   239   000654  3A                 	db	58	;':'
   240   000655  25                 	db	37
   241   000656  34                 	db	52	;'4'
   242   000657  2E                 	db	46
   243   000658  32                 	db	50	;'2'
   244   000659  66                 	db	102	;'f'
   245   00065A  00                 	db	0
   246   00065B                     STR_2:
   247   00065B  30                 	db	48	;'0'
   248   00065C  35                 	db	53	;'5'
   249   00065D  3A                 	db	58	;':'
   250   00065E  25                 	db	37
   251   00065F  34                 	db	52	;'4'
   252   000660  2E                 	db	46
   253   000661  32                 	db	50	;'2'
   254   000662  66                 	db	102	;'f'
   255   000663  20                 	db	32
   256   000664  30                 	db	48	;'0'
   257   000665  36                 	db	54	;'6'
   258   000666  3A                 	db	58	;':'
   259   000667  25                 	db	37
   260   000668  34                 	db	52	;'4'
   261   000669  2E                 	db	46
   262   00066A  32                 	db	50	;'2'
   263   00066B  66                 	db	102	;'f'
   264   00066C  20                 	db	32
   265   00066D  30                 	db	48	;'0'
   266   00066E  37                 	db	55	;'7'
   267   00066F  3A                 	db	58	;':'
   268   000670  25                 	db	37
   269   000671  34                 	db	52	;'4'
   270   000672  2E                 	db	46
   271   000673  32                 	db	50	;'2'
   272   000674  66                 	db	102	;'f'
   273   000675  20                 	db	32
   274   000676  30                 	db	48	;'0'
   275   000677  38                 	db	56	;'8'
   276   000678  3A                 	db	58	;':'
   277   000679  25                 	db	37
   278   00067A  34                 	db	52	;'4'
   279   00067B  2E                 	db	46
   280   00067C  32                 	db	50	;'2'
   281   00067D  66                 	db	102	;'f'
   282   00067E  20                 	db	32
   283   00067F  30                 	db	48	;'0'
   284   000680  39                 	db	57	;'9'
   285   000681  3A                 	db	58	;':'
   286   000682  25                 	db	37
   287   000683  34                 	db	52	;'4'
   288   000684  2E                 	db	46
   289   000685  32                 	db	50	;'2'
   290   000686  66                 	db	102	;'f'
   291   000687  00                 	db	0
   292   000688                     STR_4:
   293   000688  31                 	db	49	;'1'
   294   000689  35                 	db	53	;'5'
   295   00068A  3A                 	db	58	;':'
   296   00068B  25                 	db	37
   297   00068C  34                 	db	52	;'4'
   298   00068D  2E                 	db	46
   299   00068E  32                 	db	50	;'2'
   300   00068F  66                 	db	102	;'f'
   301   000690  20                 	db	32
   302   000691  31                 	db	49	;'1'
   303   000692  36                 	db	54	;'6'
   304   000693  3A                 	db	58	;':'
   305   000694  25                 	db	37
   306   000695  34                 	db	52	;'4'
   307   000696  2E                 	db	46
   308   000697  32                 	db	50	;'2'
   309   000698  66                 	db	102	;'f'
   310   000699  20                 	db	32
   311   00069A  31                 	db	49	;'1'
   312   00069B  37                 	db	55	;'7'
   313   00069C  3A                 	db	58	;':'
   314   00069D  25                 	db	37
   315   00069E  34                 	db	52	;'4'
   316   00069F  2E                 	db	46
   317   0006A0  32                 	db	50	;'2'
   318   0006A1  66                 	db	102	;'f'
   319   0006A2  20                 	db	32
   320   0006A3  31                 	db	49	;'1'
   321   0006A4  38                 	db	56	;'8'
   322   0006A5  3A                 	db	58	;':'
   323   0006A6  25                 	db	37
   324   0006A7  34                 	db	52	;'4'
   325   0006A8  2E                 	db	46
   326   0006A9  32                 	db	50	;'2'
   327   0006AA  66                 	db	102	;'f'
   328   0006AB  20                 	db	32
   329   0006AC  31                 	db	49	;'1'
   330   0006AD  39                 	db	57	;'9'
   331   0006AE  3A                 	db	58	;':'
   332   0006AF  25                 	db	37
   333   0006B0  34                 	db	52	;'4'
   334   0006B1  2E                 	db	46
   335   0006B2  32                 	db	50	;'2'
   336   0006B3  66                 	db	102	;'f'
   337   0006B4  00                 	db	0
   338   0006B5                     STR_5:
   339   0006B5  69                 	db	105	;'i'
   340   0006B6  6E                 	db	110	;'n'
   341   0006B7  66                 	db	102	;'f'
   342   0006B8  00                 	db	0
   343   0006B9                     STR_8:
   344   0006B9  6E                 	db	110	;'n'
   345   0006BA  61                 	db	97	;'a'
   346   0006BB  6E                 	db	110	;'n'
   347   0006BC  00                 	db	0
   348   0006BD  00                 	db	0	; dummy byte at the end
   349   000000                     
   350                           ; #config settings
   351                           
   352                           	psect	cinit
   353   002EC6                     __pcinit:
   354                           	callstack 0
   355   002EC6                     start_initialization:
   356                           	callstack 0
   357   002EC6                     __initialization:
   358                           	callstack 0
   359                           
   360                           ; Initialize objects allocated to BANK0 (41 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362   002EC6  0EB6               	movlw	low __pidataBANK0
   363   002EC8  6EF6               	movwf	tblptrl,c
   364   002ECA  0E30               	movlw	high __pidataBANK0
   365   002ECC  6EF7               	movwf	tblptrh,c
   366   002ECE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367   002ED0  6EF8               	movwf	tblptru,c
   368   002ED2  EE00  F0B0         	lfsr	0,__pdataBANK0
   369   002ED6  EE10 F029          	lfsr	1,41
   370   002EDA                     copy_data0:
   371   002EDA  0009               	tblrd		*+
   372   002EDC  CFF5 FFEE          	movff	tablat,postinc0
   373   002EE0  50E5               	movf	postdec1,w,c
   374   002EE2  50E1               	movf	fsr1l,w,c
   375   002EE4  E1FA               	bnz	copy_data0
   376                           
   377                           ; Clear objects allocated to BANK1 (200 bytes)
   378   002EE6  EE01  F000         	lfsr	0,__pbssBANK1
   379   002EEA  0EC8               	movlw	200
   380   002EEC                     clear_0:
   381   002EEC  6AEE               	clrf	postinc0,c
   382   002EEE  06E8               	decf	wreg,f,c
   383   002EF0  E1FD               	bnz	clear_0
   384                           
   385                           ; Clear objects allocated to BANK0 (9 bytes)
   386   002EF2  EE00  F0D9         	lfsr	0,__pbssBANK0
   387   002EF6  0E09               	movlw	9
   388   002EF8                     clear_1:
   389   002EF8  6AEE               	clrf	postinc0,c
   390   002EFA  06E8               	decf	wreg,f,c
   391   002EFC  E1FD               	bnz	clear_1
   392                           
   393                           ; Clear objects allocated to COMRAM (5 bytes)
   394   002EFE  6A5C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   395   002F00  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   396   002F02  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   397   002F04  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   398   002F06  6A58               	clrf	__pbssCOMRAM& (0+255),c
   399   002F08                     end_of_initialization:
   400                           	callstack 0
   401   002F08                     __end_of__initialization:
   402                           	callstack 0
   403   002F08  0E00               	movlw	low (__Lmediumconst shr (0+16))
   404   002F0A  6EF8               	movwf	tblptru,c
   405   002F0C  0100               	movlb	0
   406   002F0E  EF9E  F00E         	goto	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMRAM
   409   000058                     __pbssCOMRAM:
   410                           	callstack 0
   411   000058                     _width:
   412                           	callstack 0
   413   000058                     	ds	2
   414   00005A                     _prec:
   415                           	callstack 0
   416   00005A                     	ds	2
   417   00005C                     _flags:
   418                           	callstack 0
   419   00005C                     	ds	1
   420                           
   421                           	psect	bssBANK0
   422   0000D9                     __pbssBANK0:
   423                           	callstack 0
   424   0000D9                     floorf@F526:
   425                           	callstack 0
   426   0000D9                     	ds	4
   427   0000DD                     ___fpclassifyf@F465:
   428                           	callstack 0
   429   0000DD                     	ds	4
   430   0000E1                     _an_cnt:
   431                           	callstack 0
   432   0000E1                     	ds	1
   433                           
   434                           	psect	dataBANK0
   435   0000B0                     __pdataBANK0:
   436                           	callstack 0
   437   0000B0                     _line:
   438                           	callstack 0
   439   0000B0                     	ds	41
   440                           
   441                           	psect	bssBANK1
   442   000100                     __pbssBANK1:
   443                           	callstack 0
   444   000100                     _Voltage:
   445                           	callstack 0
   446   000100                     	ds	80
   447   000150                     _dbuf:
   448                           	callstack 0
   449   000150                     	ds	80
   450   0001A0                     _AN:
   451                           	callstack 0
   452   0001A0                     	ds	40
   453                           
   454                           	psect	cstackBANK0
   455   000060                     __pcstackBANK0:
   456                           	callstack 0
   457   000060                     efgtoa@ne:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x0
   461   000060                     	ds	2
   462   000062                     efgtoa@p:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x2
   466   000062                     	ds	2
   467   000064                     efgtoa@t:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x4
   471   000064                     	ds	2
   472   000066                     _efgtoa$860:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x6
   476   000066                     	ds	2
   477   000068                     efgtoa@pp:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x8
   481   000068                     	ds	1
   482   000069                     efgtoa@mode:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x9
   486   000069                     	ds	1
   487   00006A                     efgtoa@nmode:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xA
   491   00006A                     	ds	1
   492   00006B                     efgtoa@d:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0xB
   496   00006B                     	ds	2
   497   00006D                     efgtoa@m:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xD
   501   00006D                     	ds	2
   502   00006F                     efgtoa@e:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0xF
   506   00006F                     	ds	2
   507   000071                     efgtoa@w:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x11
   511   000071                     	ds	2
   512   000073                     efgtoa@ou:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x13
   516   000073                     	ds	4
   517   000077                     efgtoa@i:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x17
   521   000077                     	ds	2
   522   000079                     efgtoa@h:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x19
   526   000079                     	ds	4
   527   00007D                     efgtoa@l:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x1D
   531   00007D                     	ds	4
   532   000081                     efgtoa@sign:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x21
   536   000081                     	ds	1
   537   000082                     efgtoa@n:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x22
   541   000082                     	ds	2
   542   000084                     efgtoa@g:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x24
   546   000084                     	ds	4
   547   000088                     efgtoa@u:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x28
   551   000088                     	ds	4
   552   00008C                     vfpfcnvrt@fp:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x2C
   556   00008C                     	ds	2
   557   00008E                     vfpfcnvrt@fmt:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x2E
   561   00008E                     	ds	2
   562   000090                     vfpfcnvrt@ap:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x30
   566   000090                     	ds	2
   567   000092                     ?_vfprintf:
   568                           	callstack 0
   569   000092                     vfprintf@fp:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x32
   573   000092                     	ds	2
   574   000094                     vfprintf@fmt:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x34
   578   000094                     	ds	2
   579   000096                     vfprintf@ap:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x36
   583   000096                     	ds	2
   584   000098                     ?_sprintf:
   585                           	callstack 0
   586   000098                     sprintf@s:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x38
   590   000098                     	ds	2
   591   00009A                     sprintf@fmt:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x3A
   595   00009A                     	ds	22
   596                           
   597                           	psect	cstackCOMRAM
   598   000001                     __pcstackCOMRAM:
   599                           	callstack 0
   600   000001                     ?___fpclassifyf:
   601                           	callstack 0
   602   000001                     ?___wmul:
   603                           	callstack 0
   604   000001                     ?___fladd:
   605                           	callstack 0
   606   000001                     ?___fldiv:
   607                           	callstack 0
   608   000001                     ?_labs:
   609                           	callstack 0
   610   000001                     ?___flneg:
   611                           	callstack 0
   612   000001                     ?___fltol:
   613                           	callstack 0
   614   000001                     ?___xxtofl:
   615                           	callstack 0
   616   000001                     LCD_STROBE@lcd_no:
   617                           	callstack 0
   618   000001                     ___wmul@multiplier:
   619                           	callstack 0
   620   000001                     memcpy@d1:
   621                           	callstack 0
   622   000001                     fputc@c:
   623                           	callstack 0
   624   000001                     strcpy@dest:
   625                           	callstack 0
   626   000001                     ___fleq@ff1:
   627                           	callstack 0
   628   000001                     ___flneg@f1:
   629                           	callstack 0
   630   000001                     ___fltol@f1:
   631                           	callstack 0
   632   000001                     ___fladd@b:
   633                           	callstack 0
   634   000001                     ___fldiv@b:
   635                           	callstack 0
   636   000001                     ___xxtofl@val:
   637                           	callstack 0
   638   000001                     ___fpclassifyf@x:
   639                           	callstack 0
   640   000001                     labs@a:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x0
   644   000001                     	ds	1
   645   000002                     lcd_write@lcd_no:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x1
   649   000002                     	ds	1
   650   000003                     ??_lcd_write:
   651   000003                     ___wmul@multiplicand:
   652                           	callstack 0
   653   000003                     memcpy@s1:
   654                           	callstack 0
   655   000003                     fputc@fp:
   656                           	callstack 0
   657   000003                     strcpy@src:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x2
   661   000003                     	ds	1
   662   000004                     lcd_write@c:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x3
   666   000004                     	ds	1
   667   000005                     ??_lcd_clear:
   668   000005                     ??_fputc:
   669   000005                     ??___fpclassifyf:
   670   000005                     ??_labs:
   671   000005                     ??___fltol:
   672   000005                     ??___xxtofl:
   673   000005                     lcd_goto@lcd_no:
   674                           	callstack 0
   675   000005                     lcd_puts@s:
   676                           	callstack 0
   677   000005                     ___wmul@product:
   678                           	callstack 0
   679   000005                     memcpy@n:
   680                           	callstack 0
   681   000005                     strcpy@s:
   682                           	callstack 0
   683   000005                     ___fleq@ff2:
   684                           	callstack 0
   685   000005                     ___fladd@a:
   686                           	callstack 0
   687   000005                     ___fldiv@a:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x4
   691   000005                     	ds	1
   692   000006                     lcd_clear@lcd_no:
   693                           	callstack 0
   694   000006                     lcd_goto@pos:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x5
   698   000006                     	ds	1
   699   000007                     ??_lcd_init:
   700   000007                     ?_read_prec_or_width:
   701                           	callstack 0
   702   000007                     lcd_puts@lcd_no:
   703                           	callstack 0
   704   000007                     read_prec_or_width@fmt:
   705                           	callstack 0
   706   000007                     memcpy@d:
   707                           	callstack 0
   708   000007                     strcpy@d:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x6
   712   000007                     	ds	1
   713   000008                     lcd_init@lcd_no:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x7
   717   000008                     	ds	1
   718   000009                     ??___fladd:
   719   000009                     ??___fldiv:
   720   000009                     ??___fleq:
   721   000009                     ___fltol@sign1:
   722                           	callstack 0
   723   000009                     ___xxtofl@sign:
   724                           	callstack 0
   725   000009                     read_prec_or_width@ap:
   726                           	callstack 0
   727   000009                     ___fpclassifyf@e:
   728                           	callstack 0
   729   000009                     memcpy@s:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x8
   733   000009                     	ds	1
   734   00000A                     ___fltol@exp1:
   735                           	callstack 0
   736   00000A                     ___xxtofl@exp:
   737                           	callstack 0
   738   00000A                     fputs@s:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x9
   742   00000A                     	ds	1
   743   00000B                     ??_read_prec_or_width:
   744   00000B                     memcpy@tmp:
   745                           	callstack 0
   746   00000B                     ___xxtofl@arg:
   747                           	callstack 0
   748   00000B                     ___fpclassifyf@u:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0xA
   752   00000B                     	ds	1
   753   00000C                     fputs@fp:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xB
   757   00000C                     	ds	1
   758   00000D                     ___fladd@signs:
   759                           	callstack 0
   760   00000D                     read_prec_or_width@c:
   761                           	callstack 0
   762   00000D                     ___fldiv@rem:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0xC
   766   00000D                     	ds	1
   767   00000E                     ___fladd@aexp:
   768                           	callstack 0
   769   00000E                     fputs@c:
   770                           	callstack 0
   771   00000E                     read_prec_or_width@n:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0xD
   775   00000E                     	ds	1
   776   00000F                     ?___flmul:
   777                           	callstack 0
   778   00000F                     ___fladd@bexp:
   779                           	callstack 0
   780   00000F                     fputs@i:
   781                           	callstack 0
   782   00000F                     ___flmul@b:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0xE
   786   00000F                     	ds	1
   787   000010                     ___fladd@grs:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0xF
   791   000010                     	ds	1
   792   000011                     ___fldiv@sign:
   793                           	callstack 0
   794   000011                     pad@fp:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x10
   798   000011                     	ds	1
   799   000012                     ___fldiv@new_exp:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x11
   803   000012                     	ds	1
   804   000013                     pad@buf:
   805                           	callstack 0
   806   000013                     ___flmul@a:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x12
   810   000013                     	ds	1
   811   000014                     ___fldiv@grs:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x13
   815   000014                     	ds	1
   816   000015                     pad@p:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x14
   820   000015                     	ds	2
   821   000017                     ??___flmul:
   822   000017                     ??_pad:
   823                           
   824                           ; 1 bytes @ 0x16
   825   000017                     	ds	1
   826   000018                     ___fldiv@bexp:
   827                           	callstack 0
   828   000018                     pad@i:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x17
   832   000018                     	ds	1
   833   000019                     ___fldiv@aexp:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x18
   837   000019                     	ds	1
   838   00001A                     ?_floorf:
   839                           	callstack 0
   840   00001A                     pad@w:
   841                           	callstack 0
   842   00001A                     floorf@x:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x19
   846   00001A                     	ds	1
   847   00001B                     ___flmul@sign:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x1A
   851   00001B                     	ds	1
   852   00001C                     ___flmul@grs:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x1B
   856   00001C                     	ds	2
   857   00001E                     ??_floorf:
   858                           
   859                           ; 1 bytes @ 0x1D
   860   00001E                     	ds	2
   861   000020                     ___flmul@aexp:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x1F
   865   000020                     	ds	1
   866   000021                     ___flmul@bexp:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x20
   870   000021                     	ds	1
   871   000022                     ___flmul@prod:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x21
   875   000022                     	ds	2
   876   000024                     floorf@m:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x23
   880   000024                     	ds	2
   881   000026                     ___flmul@temp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x25
   885   000026                     	ds	2
   886   000028                     ?___flsub:
   887                           	callstack 0
   888   000028                     floorf@e:
   889                           	callstack 0
   890   000028                     ___flge@ff1:
   891                           	callstack 0
   892   000028                     ___flsub@b:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x27
   896   000028                     	ds	2
   897   00002A                     floorf@u:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x29
   901   00002A                     	ds	2
   902   00002C                     ___flge@ff2:
   903                           	callstack 0
   904   00002C                     ___flsub@a:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x2B
   908   00002C                     	ds	4
   909   000030                     ??___flge:
   910                           
   911                           ; 1 bytes @ 0x2F
   912   000030                     	ds	4
   913   000034                     efgtoa@fp:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x33
   917   000034                     	ds	2
   918   000036                     efgtoa@f:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x35
   922   000036                     	ds	4
   923   00003A                     efgtoa@c:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x39
   927   00003A                     	ds	1
   928   00003B                     ??_efgtoa:
   929                           
   930                           ; 1 bytes @ 0x3A
   931   00003B                     	ds	2
   932   00003D                     ??_vfpfcnvrt:
   933                           
   934                           ; 1 bytes @ 0x3C
   935   00003D                     	ds	2
   936   00003F                     vfpfcnvrt@convarg:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x3E
   940   00003F                     	ds	4
   941   000043                     vfpfcnvrt@c:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x42
   945   000043                     	ds	1
   946   000044                     vfpfcnvrt@cp:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x43
   950   000044                     	ds	2
   951   000046                     vfprintf@cfmt:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x45
   955   000046                     	ds	2
   956   000048                     sprintf@ap:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x47
   960   000048                     	ds	2
   961   00004A                     sprintf@f:
   962                           	callstack 0
   963                           
   964                           ; 12 bytes @ 0x49
   965   00004A                     	ds	12
   966   000056                     ??_main:
   967                           
   968                           ; 1 bytes @ 0x55
   969   000056                     	ds	2
   970                           
   971 ;;
   972 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   973 ;;
   974 ;; *************** function _main *****************
   975 ;; Defined at:
   976 ;;		line 24 in file "newmain.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   990 ;;      Params:         0       0       0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0
   992 ;;      Temps:          2       0       0       0       0       0       0
   993 ;;      Totals:         2       0       0       0       0       0       0
   994 ;;Total ram usage:        2 bytes
   995 ;; Hardware stack levels required when called: 8
   996 ;; This function calls:
   997 ;;		___flmul
   998 ;;		___xxtofl
   999 ;;		_lcd_clear
  1000 ;;		_lcd_goto
  1001 ;;		_lcd_init
  1002 ;;		_lcd_puts
  1003 ;;		_sprintf
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text0
  1010   001D3C                     __ptext0:
  1011                           	callstack 0
  1012   001D3C                     _main:
  1013                           	callstack 23
  1014   001D3C                     
  1015                           ;newmain.c: 25:     ADCON0bits.ADON = 1;
  1016   001D3C  0E2F               	movlw	47
  1017   001D3E  010F               	movlb	15	; () banked
  1018   001D40  6F38               	movwf	56,b	;volatile
  1019   001D42                     
  1020                           ; BSR set to: 15
  1021                           ;newmain.c: 26:     GODONE = 1;
  1022   001D42  6892               	setf	146,c	;volatile
  1023                           
  1024                           ;newmain.c: 28:     lcd_init(1);
  1025   001D44  0E3F               	movlw	63
  1026   001D46  6F39               	movwf	57,b	;volatile
  1027   001D48                     
  1028                           ; BSR set to: 15
  1029                           ;newmain.c: 29:     lcd_init(2);
  1030   001D48  6893               	setf	147,c	;volatile
  1031                           
  1032                           ;newmain.c: 31:     lcd_clear(1);
  1033   001D4A  0EFC               	movlw	252
  1034   001D4C  6F3A               	movwf	58,b	;volatile
  1035   001D4E                     
  1036                           ; BSR set to: 15
  1037                           ;newmain.c: 32:     lcd_clear(2);
  1038   001D4E  6894               	setf	148,c	;volatile
  1039                           
  1040                           ;newmain.c: 34:     lcd_goto(0, 1);
  1041   001D50  0E00               	movlw	0
  1042   001D52  6F3B               	movwf	59,b	;volatile
  1043                           
  1044                           ;newmain.c: 35:     lcd_goto(0, 2);
  1045   001D54  0E80               	movlw	128
  1046   001D56  6E95               	movwf	149,c	;volatile
  1047                           
  1048                           ;newmain.c: 37:     while (1) {
  1049   001D58  0E07               	movlw	7
  1050   001D5A  6F3C               	movwf	60,b	;volatile
  1051                           
  1052                           ;newmain.c: 38:         while (an_cnt < 20) {
  1053   001D5C  0E7F               	movlw	127
  1054   001D5E  6E96               	movwf	150,c	;volatile
  1055                           
  1056                           ;newmain.c: 40:             GODONE = 1;
  1057   001D60  0EA1               	movlw	161
  1058   001D62  6EC0               	movwf	192,c	;volatile
  1059                           
  1060                           ;newmain.c: 41:             while (GODONE);
  1061   001D64  0E00               	movlw	0
  1062   001D66  6EC1               	movwf	193,c	;volatile
  1063                           
  1064                           ;newmain.c: 43:             Voltage[an_cnt] = 5.0 / 1023 * AN[an_cnt];
  1065   001D68  0E83               	movlw	-125
  1066   001D6A  16C2               	andwf	194,f,c	;volatile
  1067   001D6C                     
  1068                           ; BSR set to: 15
  1069                           ;newmain.c: 44:             an_cnt++;
  1070   001D6C  80C2               	bsf	194,0,c	;volatile
  1071   001D6E                     
  1072                           ; BSR set to: 15
  1073                           ;newmain.c: 45:         }
  1074   001D6E  82C2               	bsf	4034,1,c	;volatile
  1075   001D70                     
  1076                           ; BSR set to: 15
  1077                           ;newmain.c: 47: 
  1078   001D70  0E01               	movlw	1
  1079   001D72  EC64  F016         	call	_lcd_init
  1080   001D76                     
  1081                           ;newmain.c: 48:         sprintf(line, "00:%4.2f 01:%4.2f 02:%4.2f 03:%4.2f 04:%4.2f",Vol
      +                          tage[0],Voltage[1],Voltage[2],Voltage[3],Voltage[4]);
  1082   001D76  0E02               	movlw	2
  1083   001D78  EC64  F016         	call	_lcd_init
  1084   001D7C                     
  1085                           ;newmain.c: 50:         lcd_puts(line,1);
  1086   001D7C  0E01               	movlw	1
  1087   001D7E  EC83  F018         	call	_lcd_clear
  1088   001D82                     
  1089                           ;newmain.c: 51: 
  1090   001D82  0E02               	movlw	2
  1091   001D84  EC83  F018         	call	_lcd_clear
  1092   001D88                     
  1093                           ;newmain.c: 53:         lcd_goto(64,1);
  1094   001D88  0E01               	movlw	1
  1095   001D8A  6E05               	movwf	lcd_goto@lcd_no^0,c
  1096   001D8C  0E00               	movlw	0
  1097   001D8E  EC93  F018         	call	_lcd_goto
  1098   001D92                     
  1099                           ;newmain.c: 54:         lcd_puts(line,1);
  1100   001D92  0E02               	movlw	2
  1101   001D94  6E05               	movwf	lcd_goto@lcd_no^0,c
  1102   001D96  0E00               	movlw	0
  1103   001D98  EC93  F018         	call	_lcd_goto
  1104   001D9C  EF31  F00F         	goto	l3419
  1105   001DA0                     l3409:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;newmain.c: 58:         lcd_puts(line,2);
  1109   001DA0  C0E1  F056         	movff	_an_cnt,??_main
  1110   001DA4  4656               	rlncf	??_main^0,f,c
  1111   001DA6  4656               	rlncf	??_main^0,f,c
  1112   001DA8  50C2               	movf	194,w,c	;volatile
  1113   001DAA  1856               	xorwf	??_main^0,w,c
  1114   001DAC  0B83               	andlw	-125
  1115   001DAE  1856               	xorwf	??_main^0,w,c
  1116   001DB0  6EC2               	movwf	194,c	;volatile
  1117   001DB2                     
  1118                           ; BSR set to: 0
  1119                           ;newmain.c: 59: 
  1120   001DB2  82C2               	bsf	4034,1,c	;volatile
  1121   001DB4                     l58:
  1122   001DB4  B2C2               	btfsc	4034,1,c	;volatile
  1123   001DB6  EFDF  F00E         	goto	u3631
  1124   001DBA  EFE1  F00E         	goto	u3630
  1125   001DBE                     u3631:
  1126   001DBE  EFDA  F00E         	goto	l58
  1127   001DC2                     u3630:
  1128   001DC2                     
  1129                           ;newmain.c: 61:         lcd_goto(64,2);
  1130   001DC2  50C3               	movf	195,w,c	;volatile
  1131   001DC4  CFC4 F056          	movff	4036,??_main	;volatile
  1132   001DC8  6A57               	clrf	(??_main+1)^0,c
  1133   001DCA  C056  F057         	movff	??_main,??_main+1
  1134   001DCE  6A56               	clrf	??_main^0,c
  1135   001DD0  2656               	addwf	??_main^0,f,c
  1136   001DD2  0E00               	movlw	0
  1137   001DD4  2257               	addwfc	(??_main+1)^0,f,c
  1138   001DD6  0100               	movlb	0	; () banked
  1139   001DD8  51E1               	movf	_an_cnt& (0+255),w,b
  1140   001DDA  0D02               	mullw	2
  1141   001DDC  0EA0               	movlw	low _AN
  1142   001DDE  24F3               	addwf	243,w,c
  1143   001DE0  6ED9               	movwf	fsr2l,c
  1144   001DE2  0E01               	movlw	high _AN
  1145   001DE4  20F4               	addwfc	prodh,w,c
  1146   001DE6  6EDA               	movwf	fsr2h,c
  1147   001DE8  C056  FFDE         	movff	??_main,postinc2
  1148   001DEC  C057  FFDD         	movff	??_main+1,postdec2
  1149   001DF0                     
  1150                           ; BSR set to: 0
  1151                           ;newmain.c: 62:         lcd_puts(line,2);
  1152   001DF0  51E1               	movf	_an_cnt& (0+255),w,b
  1153   001DF2  0D02               	mullw	2
  1154   001DF4  0EA0               	movlw	low _AN
  1155   001DF6  24F3               	addwf	243,w,c
  1156   001DF8  6ED9               	movwf	fsr2l,c
  1157   001DFA  0E01               	movlw	high _AN
  1158   001DFC  20F4               	addwfc	prodh,w,c
  1159   001DFE  6EDA               	movwf	fsr2h,c
  1160   001E00  CFDE F056          	movff	postinc2,??_main
  1161   001E04  CFDD F057          	movff	postdec2,??_main+1
  1162   001E08  C056  F001         	movff	??_main,___xxtofl@val
  1163   001E0C  C057  F002         	movff	??_main+1,___xxtofl@val+1
  1164   001E10  6A03               	clrf	(___xxtofl@val+2)^0,c
  1165   001E12  6A04               	clrf	(___xxtofl@val+3)^0,c
  1166   001E14  0E00               	movlw	0
  1167   001E16  EC94  F012         	call	___xxtofl
  1168   001E1A  C001  F00F         	movff	?___xxtofl,___flmul@b
  1169   001E1E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1170   001E22  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1171   001E26  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1172   001E2A  0E0A               	movlw	10
  1173   001E2C  6E13               	movwf	___flmul@a^0,c
  1174   001E2E  0E28               	movlw	40
  1175   001E30  6E14               	movwf	(___flmul@a+1)^0,c
  1176   001E32  0EA0               	movlw	160
  1177   001E34  6E15               	movwf	(___flmul@a+2)^0,c
  1178   001E36  0E3B               	movlw	59
  1179   001E38  6E16               	movwf	(___flmul@a+3)^0,c
  1180   001E3A  ECBC  F00A         	call	___flmul	;wreg free
  1181   001E3E  0100               	movlb	0	; () banked
  1182   001E40  51E1               	movf	_an_cnt& (0+255),w,b
  1183   001E42  0D04               	mullw	4
  1184   001E44  0E00               	movlw	low _Voltage
  1185   001E46  24F3               	addwf	243,w,c
  1186   001E48  6ED9               	movwf	fsr2l,c
  1187   001E4A  0E01               	movlw	high _Voltage
  1188   001E4C  20F4               	addwfc	prodh,w,c
  1189   001E4E  6EDA               	movwf	fsr2h,c
  1190   001E50  C00F  FFDE         	movff	?___flmul,postinc2
  1191   001E54  C010  FFDE         	movff	?___flmul+1,postinc2
  1192   001E58  C011  FFDE         	movff	?___flmul+2,postinc2
  1193   001E5C  C012  FFDE         	movff	?___flmul+3,postinc2
  1194   001E60                     
  1195                           ; BSR set to: 0
  1196                           ;newmain.c: 63:     }
  1197   001E60  2BE1               	incf	_an_cnt& (0+255),f,b
  1198   001E62                     l3419:
  1199                           
  1200                           ;newmain.c: 57:         lcd_goto(0,2);
  1201   001E62  0E13               	movlw	19
  1202   001E64  0100               	movlb	0	; () banked
  1203   001E66  65E1               	cpfsgt	_an_cnt& (0+255),b
  1204   001E68  EF38  F00F         	goto	u3641
  1205   001E6C  EF3A  F00F         	goto	u3640
  1206   001E70                     u3641:
  1207   001E70  EFD0  F00E         	goto	l3409
  1208   001E74                     u3640:
  1209   001E74                     
  1210                           ; BSR set to: 0
  1211                           ;newmain.c: 65: }
  1212   001E74  0E00               	movlw	0
  1213   001E76  6FE1               	movwf	_an_cnt& (0+255),b
  1214   001E78                     
  1215                           ; BSR set to: 0
  1216   001E78  0EB0               	movlw	low _line
  1217   001E7A  6F98               	movwf	sprintf@s& (0+255),b
  1218   001E7C  0E00               	movlw	high _line
  1219   001E7E  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1220   001E80  0E01               	movlw	low STR_1
  1221   001E82  6F9A               	movwf	sprintf@fmt& (0+255),b
  1222   001E84  0E06               	movlw	high STR_1
  1223   001E86  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1224   001E88  C100  F09C         	movff	_Voltage,?_sprintf+4
  1225   001E8C  C101  F09D         	movff	_Voltage+1,?_sprintf+5
  1226   001E90  C102  F09E         	movff	_Voltage+2,?_sprintf+6
  1227   001E94  C103  F09F         	movff	_Voltage+3,?_sprintf+7
  1228   001E98  C104  F0A0         	movff	_Voltage+4,?_sprintf+8
  1229   001E9C  C105  F0A1         	movff	_Voltage+5,?_sprintf+9
  1230   001EA0  C106  F0A2         	movff	_Voltage+6,?_sprintf+10
  1231   001EA4  C107  F0A3         	movff	_Voltage+7,?_sprintf+11
  1232   001EA8  C108  F0A4         	movff	_Voltage+8,?_sprintf+12
  1233   001EAC  C109  F0A5         	movff	_Voltage+9,?_sprintf+13
  1234   001EB0  C10A  F0A6         	movff	_Voltage+10,?_sprintf+14
  1235   001EB4  C10B  F0A7         	movff	_Voltage+11,?_sprintf+15
  1236   001EB8  C10C  F0A8         	movff	_Voltage+12,?_sprintf+16
  1237   001EBC  C10D  F0A9         	movff	_Voltage+13,?_sprintf+17
  1238   001EC0  C10E  F0AA         	movff	_Voltage+14,?_sprintf+18
  1239   001EC4  C10F  F0AB         	movff	_Voltage+15,?_sprintf+19
  1240   001EC8  C110  F0AC         	movff	_Voltage+16,?_sprintf+20
  1241   001ECC  C111  F0AD         	movff	_Voltage+17,?_sprintf+21
  1242   001ED0  C112  F0AE         	movff	_Voltage+18,?_sprintf+22
  1243   001ED4  C113  F0AF         	movff	_Voltage+19,?_sprintf+23
  1244   001ED8  EC13  F017         	call	_sprintf	;wreg free
  1245   001EDC  0E01               	movlw	1
  1246   001EDE  6E05               	movwf	lcd_goto@lcd_no^0,c
  1247   001EE0  0E00               	movlw	0
  1248   001EE2  EC93  F018         	call	_lcd_goto
  1249   001EE6  0EB0               	movlw	low _line
  1250   001EE8  6E05               	movwf	lcd_puts@s^0,c
  1251   001EEA  0E00               	movlw	high _line
  1252   001EEC  6E06               	movwf	(lcd_puts@s+1)^0,c
  1253   001EEE  0E01               	movlw	1
  1254   001EF0  6E07               	movwf	lcd_puts@lcd_no^0,c
  1255   001EF2  EC29  F018         	call	_lcd_puts	;wreg free
  1256   001EF6  0EB0               	movlw	low _line
  1257   001EF8  0100               	movlb	0	; () banked
  1258   001EFA  6F98               	movwf	sprintf@s& (0+255),b
  1259   001EFC  0E00               	movlw	high _line
  1260   001EFE  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1261   001F00  0E5B               	movlw	low STR_2
  1262   001F02  6F9A               	movwf	sprintf@fmt& (0+255),b
  1263   001F04  0E06               	movlw	high STR_2
  1264   001F06  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1265   001F08  C114  F09C         	movff	_Voltage+20,?_sprintf+4
  1266   001F0C  C115  F09D         	movff	_Voltage+21,?_sprintf+5
  1267   001F10  C116  F09E         	movff	_Voltage+22,?_sprintf+6
  1268   001F14  C117  F09F         	movff	_Voltage+23,?_sprintf+7
  1269   001F18  C118  F0A0         	movff	_Voltage+24,?_sprintf+8
  1270   001F1C  C119  F0A1         	movff	_Voltage+25,?_sprintf+9
  1271   001F20  C11A  F0A2         	movff	_Voltage+26,?_sprintf+10
  1272   001F24  C11B  F0A3         	movff	_Voltage+27,?_sprintf+11
  1273   001F28  C11C  F0A4         	movff	_Voltage+28,?_sprintf+12
  1274   001F2C  C11D  F0A5         	movff	_Voltage+29,?_sprintf+13
  1275   001F30  C11E  F0A6         	movff	_Voltage+30,?_sprintf+14
  1276   001F34  C11F  F0A7         	movff	_Voltage+31,?_sprintf+15
  1277   001F38  C120  F0A8         	movff	_Voltage+32,?_sprintf+16
  1278   001F3C  C121  F0A9         	movff	_Voltage+33,?_sprintf+17
  1279   001F40  C122  F0AA         	movff	_Voltage+34,?_sprintf+18
  1280   001F44  C123  F0AB         	movff	_Voltage+35,?_sprintf+19
  1281   001F48  C124  F0AC         	movff	_Voltage+36,?_sprintf+20
  1282   001F4C  C125  F0AD         	movff	_Voltage+37,?_sprintf+21
  1283   001F50  C126  F0AE         	movff	_Voltage+38,?_sprintf+22
  1284   001F54  C127  F0AF         	movff	_Voltage+39,?_sprintf+23
  1285   001F58  EC13  F017         	call	_sprintf	;wreg free
  1286   001F5C  0E01               	movlw	1
  1287   001F5E  6E05               	movwf	lcd_goto@lcd_no^0,c
  1288   001F60  0E40               	movlw	64
  1289   001F62  EC93  F018         	call	_lcd_goto
  1290   001F66  0EB0               	movlw	low _line
  1291   001F68  6E05               	movwf	lcd_puts@s^0,c
  1292   001F6A  0E00               	movlw	high _line
  1293   001F6C  6E06               	movwf	(lcd_puts@s+1)^0,c
  1294   001F6E  0E01               	movlw	1
  1295   001F70  6E07               	movwf	lcd_puts@lcd_no^0,c
  1296   001F72  EC29  F018         	call	_lcd_puts	;wreg free
  1297   001F76  0EB0               	movlw	low _line
  1298   001F78  0100               	movlb	0	; () banked
  1299   001F7A  6F98               	movwf	sprintf@s& (0+255),b
  1300   001F7C  0E00               	movlw	high _line
  1301   001F7E  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1302   001F80  0E2E               	movlw	low STR_3
  1303   001F82  6F9A               	movwf	sprintf@fmt& (0+255),b
  1304   001F84  0E06               	movlw	high STR_3
  1305   001F86  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1306   001F88  C128  F09C         	movff	_Voltage+40,?_sprintf+4
  1307   001F8C  C129  F09D         	movff	_Voltage+41,?_sprintf+5
  1308   001F90  C12A  F09E         	movff	_Voltage+42,?_sprintf+6
  1309   001F94  C12B  F09F         	movff	_Voltage+43,?_sprintf+7
  1310   001F98  C12C  F0A0         	movff	_Voltage+44,?_sprintf+8
  1311   001F9C  C12D  F0A1         	movff	_Voltage+45,?_sprintf+9
  1312   001FA0  C12E  F0A2         	movff	_Voltage+46,?_sprintf+10
  1313   001FA4  C12F  F0A3         	movff	_Voltage+47,?_sprintf+11
  1314   001FA8  C130  F0A4         	movff	_Voltage+48,?_sprintf+12
  1315   001FAC  C131  F0A5         	movff	_Voltage+49,?_sprintf+13
  1316   001FB0  C132  F0A6         	movff	_Voltage+50,?_sprintf+14
  1317   001FB4  C133  F0A7         	movff	_Voltage+51,?_sprintf+15
  1318   001FB8  C134  F0A8         	movff	_Voltage+52,?_sprintf+16
  1319   001FBC  C135  F0A9         	movff	_Voltage+53,?_sprintf+17
  1320   001FC0  C136  F0AA         	movff	_Voltage+54,?_sprintf+18
  1321   001FC4  C137  F0AB         	movff	_Voltage+55,?_sprintf+19
  1322   001FC8  C138  F0AC         	movff	_Voltage+56,?_sprintf+20
  1323   001FCC  C139  F0AD         	movff	_Voltage+57,?_sprintf+21
  1324   001FD0  C13A  F0AE         	movff	_Voltage+58,?_sprintf+22
  1325   001FD4  C13B  F0AF         	movff	_Voltage+59,?_sprintf+23
  1326   001FD8  EC13  F017         	call	_sprintf	;wreg free
  1327   001FDC  0E02               	movlw	2
  1328   001FDE  6E05               	movwf	lcd_goto@lcd_no^0,c
  1329   001FE0  0E00               	movlw	0
  1330   001FE2  EC93  F018         	call	_lcd_goto
  1331   001FE6  0EB0               	movlw	low _line
  1332   001FE8  6E05               	movwf	lcd_puts@s^0,c
  1333   001FEA  0E00               	movlw	high _line
  1334   001FEC  6E06               	movwf	(lcd_puts@s+1)^0,c
  1335   001FEE  0E02               	movlw	2
  1336   001FF0  6E07               	movwf	lcd_puts@lcd_no^0,c
  1337   001FF2  EC29  F018         	call	_lcd_puts	;wreg free
  1338   001FF6  0EB0               	movlw	low _line
  1339   001FF8  0100               	movlb	0	; () banked
  1340   001FFA  6F98               	movwf	sprintf@s& (0+255),b
  1341   001FFC  0E00               	movlw	high _line
  1342   001FFE  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1343   002000  0E88               	movlw	low STR_4
  1344   002002  6F9A               	movwf	sprintf@fmt& (0+255),b
  1345   002004  0E06               	movlw	high STR_4
  1346   002006  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1347   002008  C13C  F09C         	movff	_Voltage+60,?_sprintf+4
  1348   00200C  C13D  F09D         	movff	_Voltage+61,?_sprintf+5
  1349   002010  C13E  F09E         	movff	_Voltage+62,?_sprintf+6
  1350   002014  C13F  F09F         	movff	_Voltage+63,?_sprintf+7
  1351   002018  C140  F0A0         	movff	_Voltage+64,?_sprintf+8
  1352   00201C  C141  F0A1         	movff	_Voltage+65,?_sprintf+9
  1353   002020  C142  F0A2         	movff	_Voltage+66,?_sprintf+10
  1354   002024  C143  F0A3         	movff	_Voltage+67,?_sprintf+11
  1355   002028  C144  F0A4         	movff	_Voltage+68,?_sprintf+12
  1356   00202C  C145  F0A5         	movff	_Voltage+69,?_sprintf+13
  1357   002030  C146  F0A6         	movff	_Voltage+70,?_sprintf+14
  1358   002034  C147  F0A7         	movff	_Voltage+71,?_sprintf+15
  1359   002038  C148  F0A8         	movff	_Voltage+72,?_sprintf+16
  1360   00203C  C149  F0A9         	movff	_Voltage+73,?_sprintf+17
  1361   002040  C14A  F0AA         	movff	_Voltage+74,?_sprintf+18
  1362   002044  C14B  F0AB         	movff	_Voltage+75,?_sprintf+19
  1363   002048  C14C  F0AC         	movff	_Voltage+76,?_sprintf+20
  1364   00204C  C14D  F0AD         	movff	_Voltage+77,?_sprintf+21
  1365   002050  C14E  F0AE         	movff	_Voltage+78,?_sprintf+22
  1366   002054  C14F  F0AF         	movff	_Voltage+79,?_sprintf+23
  1367   002058  EC13  F017         	call	_sprintf	;wreg free
  1368   00205C  0E02               	movlw	2
  1369   00205E  6E05               	movwf	lcd_goto@lcd_no^0,c
  1370   002060  0E40               	movlw	64
  1371   002062  EC93  F018         	call	_lcd_goto
  1372   002066  0EB0               	movlw	low _line
  1373   002068  6E05               	movwf	lcd_puts@s^0,c
  1374   00206A  0E00               	movlw	high _line
  1375   00206C  6E06               	movwf	(lcd_puts@s+1)^0,c
  1376   00206E  0E02               	movlw	2
  1377   002070  6E07               	movwf	lcd_puts@lcd_no^0,c
  1378   002072  EC29  F018         	call	_lcd_puts	;wreg free
  1379   002076  EF31  F00F         	goto	l3419
  1380   00207A  EF00  F000         	goto	start
  1381   00207E                     __end_of_main:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _sprintf *****************
  1385 ;; Defined at:
  1386 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1389 ;;		 -> line(41), 
  1390 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1391 ;;		 -> STR_4(45), STR_3(45), STR_2(45), STR_1(45), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  f              12   73[COMRAM] struct _IO_FILE
  1394 ;;  ap              2   71[COMRAM] PTR void [1]
  1395 ;;		 -> ?_sprintf(2), 
  1396 ;;  ret             2    0        int 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2   56[BANK0 ] int 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1406 ;;      Params:         0      24       0       0       0       0       0
  1407 ;;      Locals:        14       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0
  1409 ;;      Totals:        14      24       0       0       0       0       0
  1410 ;;Total ram usage:       38 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 7
  1413 ;; This function calls:
  1414 ;;		_vfprintf
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text1
  1421   002E26                     __ptext1:
  1422                           	callstack 0
  1423   002E26                     _sprintf:
  1424                           	callstack 23
  1425   002E26  0E9C               	movlw	low (?_sprintf+4)
  1426   002E28  6E48               	movwf	sprintf@ap^0,c
  1427   002E2A  0E00               	movlw	high (?_sprintf+4)
  1428   002E2C  6E49               	movwf	(sprintf@ap+1)^0,c
  1429   002E2E  C098  F04A         	movff	sprintf@s,sprintf@f
  1430   002E32  C099  F04B         	movff	sprintf@s+1,sprintf@f+1
  1431   002E36  0E00               	movlw	0
  1432   002E38  6E4E               	movwf	(sprintf@f+4)^0,c
  1433   002E3A  0E00               	movlw	0
  1434   002E3C  6E4D               	movwf	(sprintf@f+3)^0,c
  1435   002E3E  0E00               	movlw	0
  1436   002E40  6E55               	movwf	(sprintf@f+11)^0,c
  1437   002E42  0E00               	movlw	0
  1438   002E44  6E54               	movwf	(sprintf@f+10)^0,c
  1439   002E46  0E4A               	movlw	low sprintf@f
  1440   002E48  0100               	movlb	0	; () banked
  1441   002E4A  6F92               	movwf	vfprintf@fp& (0+255),b
  1442   002E4C  0E00               	movlw	high sprintf@f
  1443   002E4E  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
  1444   002E50  C09A  F094         	movff	sprintf@fmt,vfprintf@fmt
  1445   002E54  C09B  F095         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1446   002E58  0E48               	movlw	low sprintf@ap
  1447   002E5A  6F96               	movwf	vfprintf@ap& (0+255),b
  1448   002E5C  0E00               	movlw	high sprintf@ap
  1449   002E5E  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
  1450   002E60  ECEA  F016         	call	_vfprintf	;wreg free
  1451   002E64  504D               	movf	(sprintf@f+3)^0,w,c
  1452   002E66  0100               	movlb	0	; () banked
  1453   002E68  2598               	addwf	sprintf@s& (0+255),w,b
  1454   002E6A  6ED9               	movwf	fsr2l,c
  1455   002E6C  504E               	movf	(sprintf@f+4)^0,w,c
  1456   002E6E  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1457   002E70  6EDA               	movwf	fsr2h,c
  1458   002E72  6ADF               	clrf	indf2,c
  1459   002E74                     
  1460                           ; BSR set to: 0
  1461   002E74  0012               	return		;funcret
  1462   002E76                     __end_of_sprintf:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _vfprintf *****************
  1466 ;; Defined at:
  1467 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1470 ;;		 -> sprintf@f(12), 
  1471 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1472 ;;		 -> STR_4(45), STR_3(45), STR_2(45), STR_1(45), 
  1473 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1474 ;;		 -> sprintf@ap(2), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  cfmt            2   69[COMRAM] PTR unsigned char 
  1477 ;;		 -> STR_4(45), STR_3(45), STR_2(45), STR_1(45), 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  2   50[BANK0 ] int 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1487 ;;      Params:         0       6       0       0       0       0       0
  1488 ;;      Locals:         2       0       0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0
  1490 ;;      Totals:         2       6       0       0       0       0       0
  1491 ;;Total ram usage:        8 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 6
  1494 ;; This function calls:
  1495 ;;		_vfpfcnvrt
  1496 ;; This function is called by:
  1497 ;;		_sprintf
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text2
  1502   002DD4                     __ptext2:
  1503                           	callstack 0
  1504   002DD4                     _vfprintf:
  1505                           	callstack 23
  1506   002DD4                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1508   002DD4  C094  F046         	movff	vfprintf@fmt,vfprintf@cfmt
  1509   002DD8  C095  F047         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1512   002DDC  EFFF  F016         	goto	l3279
  1513   002DE0                     l3277:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1516   002DE0  C092  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1517   002DE4  C093  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1518   002DE8  0E46               	movlw	low vfprintf@cfmt
  1519   002DEA  0100               	movlb	0	; () banked
  1520   002DEC  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1521   002DEE  0E00               	movlw	high vfprintf@cfmt
  1522   002DF0  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1523   002DF2  C096  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1524   002DF6  C097  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1525   002DFA  EC3F  F010         	call	_vfpfcnvrt	;wreg free
  1526   002DFE                     l3279:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1529   002DFE  C046  FFF6         	movff	vfprintf@cfmt,tblptrl
  1530   002E02  C047  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1531   002E06                     	if	0	;tblptru may be non-zero
  1532   002E06                     	endif
  1533   002E06                     	if	0	;tblptru may be non-zero
  1534   002E06                     	endif
  1535   002E06  0008               	tblrd		*
  1536   002E08  50F5               	movf	tablat,w,c
  1537   002E0A  0900               	iorlw	0
  1538   002E0C  A4D8               	btfss	status,2,c
  1539   002E0E  EF0B  F017         	goto	u3491
  1540   002E12  EF0D  F017         	goto	u3490
  1541   002E16                     u3491:
  1542   002E16  EFF0  F016         	goto	l3277
  1543   002E1A                     u3490:
  1544   002E1A                     
  1545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1546   002E1A  0E00               	movlw	0
  1547   002E1C  0100               	movlb	0	; () banked
  1548   002E1E  6F93               	movwf	(?_vfprintf+1)& (0+255),b
  1549   002E20  0E00               	movlw	0
  1550   002E22  6F92               	movwf	?_vfprintf& (0+255),b
  1551   002E24                     
  1552                           ; BSR set to: 0
  1553   002E24  0012               	return		;funcret
  1554   002E26                     __end_of_vfprintf:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _vfpfcnvrt *****************
  1558 ;; Defined at:
  1559 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1562 ;;		 -> sprintf@f(12), 
  1563 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1564 ;;		 -> vfprintf@cfmt(2), 
  1565 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1566 ;;		 -> sprintf@ap(2), 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  convarg         4   62[COMRAM] struct .
  1569 ;;  cp              2   67[COMRAM] PTR unsigned char 
  1570 ;;		 -> STR_4(45), STR_3(45), STR_2(45), STR_1(45), 
  1571 ;;  i               2    0        int 
  1572 ;;  done            2    0        int 
  1573 ;;  c               1   66[COMRAM] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1583 ;;      Params:         0       6       0       0       0       0       0
  1584 ;;      Locals:         7       0       0       0       0       0       0
  1585 ;;      Temps:          2       0       0       0       0       0       0
  1586 ;;      Totals:         9       6       0       0       0       0       0
  1587 ;;Total ram usage:       15 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 5
  1590 ;; This function calls:
  1591 ;;		_efgtoa
  1592 ;;		_fputc
  1593 ;;		_read_prec_or_width
  1594 ;; This function is called by:
  1595 ;;		_vfprintf
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text3
  1600   00207E                     __ptext3:
  1601                           	callstack 0
  1602   00207E                     _vfpfcnvrt:
  1603                           	callstack 23
  1604   00207E                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1606   00207E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1607   002082  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1608   002086  CFDE FFF6          	movff	postinc2,tblptrl
  1609   00208A  CFDD FFF7          	movff	postdec2,tblptrh
  1610   00208E                     	if	0	;tblptru may be non-zero
  1611   00208E                     	endif
  1612   00208E                     	if	0	;tblptru may be non-zero
  1613   00208E                     	endif
  1614   00208E  0008               	tblrd		*
  1615   002090  50F5               	movf	tablat,w,c
  1616   002092  0A25               	xorlw	37
  1617   002094  A4D8               	btfss	status,2,c
  1618   002096  EF4F  F010         	goto	u3451
  1619   00209A  EF51  F010         	goto	u3450
  1620   00209E                     u3451:
  1621   00209E  EF76  F011         	goto	l3251
  1622   0020A2                     u3450:
  1623   0020A2                     
  1624                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1625   0020A2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1626   0020A6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1627   0020AA  2ADE               	incf	postinc2,f,c
  1628   0020AC  0E00               	movlw	0
  1629   0020AE  22DD               	addwfc	postdec2,f,c
  1630   0020B0                     
  1631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1632   0020B0  0E00               	movlw	0
  1633   0020B2  6E59               	movwf	(_width+1)^0,c
  1634   0020B4  0E00               	movlw	0
  1635   0020B6  6E58               	movwf	_width^0,c
  1636   0020B8  C058  F05C         	movff	_width,_flags
  1637   0020BC                     
  1638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1639   0020BC  685A               	setf	_prec^0,c
  1640   0020BE  685B               	setf	(_prec+1)^0,c
  1641   0020C0                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1643   0020C0  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1644   0020C4  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1645   0020C8  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1646   0020CC  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1647   0020D0  EC57  F015         	call	_read_prec_or_width	;wreg free
  1648   0020D4  C007  F058         	movff	?_read_prec_or_width,_width
  1649   0020D8  C008  F059         	movff	?_read_prec_or_width+1,_width+1
  1650   0020DC                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1652   0020DC  BE59               	btfsc	(_width+1)^0,7,c
  1653   0020DE  EF75  F010         	goto	u3460
  1654   0020E2  EF73  F010         	goto	u3461
  1655   0020E6                     u3461:
  1656   0020E6  EF7A  F010         	goto	l3207
  1657   0020EA                     u3460:
  1658   0020EA                     
  1659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1660   0020EA  805C               	bsf	_flags^0,0,c
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1663   0020EC  6C58               	negf	_width^0,c
  1664   0020EE  1E59               	comf	(_width+1)^0,f,c
  1665   0020F0  B0D8               	btfsc	status,0,c
  1666   0020F2  2A59               	incf	(_width+1)^0,f,c
  1667   0020F4                     l3207:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1670   0020F4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1671   0020F8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1672   0020FC  CFDE FFF6          	movff	postinc2,tblptrl
  1673   002100  CFDD FFF7          	movff	postdec2,tblptrh
  1674   002104                     	if	0	;tblptru may be non-zero
  1675   002104                     	endif
  1676   002104                     	if	0	;tblptru may be non-zero
  1677   002104                     	endif
  1678   002104  0008               	tblrd		*
  1679   002106  50F5               	movf	tablat,w,c
  1680   002108  0A2E               	xorlw	46
  1681   00210A  A4D8               	btfss	status,2,c
  1682   00210C  EF8A  F010         	goto	u3471
  1683   002110  EF8C  F010         	goto	u3470
  1684   002114                     u3471:
  1685   002114  EFA1  F010         	goto	l3213
  1686   002118                     u3470:
  1687   002118                     
  1688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1689   002118  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690   00211C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691   002120  2ADE               	incf	postinc2,f,c
  1692   002122  0E00               	movlw	0
  1693   002124  22DD               	addwfc	postdec2,f,c
  1694   002126                     
  1695                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1696   002126  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1697   00212A  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1698   00212E  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1699   002132  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1700   002136  EC57  F015         	call	_read_prec_or_width	;wreg free
  1701   00213A  C007  F05A         	movff	?_read_prec_or_width,_prec
  1702   00213E  C008  F05B         	movff	?_read_prec_or_width+1,_prec+1
  1703   002142                     l3213:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1706   002142  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1707   002146  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1708   00214A  CFDE F044          	movff	postinc2,vfpfcnvrt@cp
  1709   00214E  CFDD F045          	movff	postdec2,vfpfcnvrt@cp+1
  1710   002152                     
  1711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1712   002152  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1713   002156  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1714   00215A                     	if	0	;tblptru may be non-zero
  1715   00215A                     	endif
  1716   00215A                     	if	0	;tblptru may be non-zero
  1717   00215A                     	endif
  1718   00215A  0008               	tblrd		*
  1719   00215C  CFF5 F043          	movff	tablat,vfpfcnvrt@c
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1722   002160  EFBE  F010         	goto	l3225
  1723   002164                     l3217:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1726   002164  4A44               	infsnz	vfpfcnvrt@cp^0,f,c
  1727   002166  2A45               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1730   002168  EFD7  F010         	goto	l3227
  1731   00216C                     l3219:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1734   00216C  0E6C               	movlw	108
  1735   00216E  6E43               	movwf	vfpfcnvrt@c^0,c
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1738   002170  EFD7  F010         	goto	l3227
  1739   002174                     l3221:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1742   002174  0E00               	movlw	0
  1743   002176  6E43               	movwf	vfpfcnvrt@c^0,c
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1746   002178  EFD7  F010         	goto	l3227
  1747   00217C                     l3225:
  1748   00217C  5043               	movf	vfpfcnvrt@c^0,w,c
  1749   00217E  6E3D               	movwf	??_vfpfcnvrt^0,c
  1750   002180  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1751                           
  1752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1753                           ; Switch size 1, requested type "simple"
  1754                           ; Number of cases is 1, Range of values is 0 to 0
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte            4     3 (average)
  1758                           ;	Chosen strategy is simple_byte
  1759   002182  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1760   002184  0A00               	xorlw	0	; case 0
  1761   002186  B4D8               	btfsc	status,2,c
  1762   002188  EFC8  F010         	goto	l3511
  1763   00218C  EFBA  F010         	goto	l3221
  1764   002190                     l3511:
  1765                           
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 3, Range of values is 76 to 108
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte           10     6 (average)
  1771                           ;	Chosen strategy is simple_byte
  1772   002190  503D               	movf	??_vfpfcnvrt^0,w,c
  1773   002192  0A4C               	xorlw	76	; case 76
  1774   002194  B4D8               	btfsc	status,2,c
  1775   002196  EFB2  F010         	goto	l3217
  1776   00219A  0A2A               	xorlw	42	; case 102
  1777   00219C  B4D8               	btfsc	status,2,c
  1778   00219E  EFB6  F010         	goto	l3219
  1779   0021A2  0A0A               	xorlw	10	; case 108
  1780   0021A4  B4D8               	btfsc	status,2,c
  1781   0021A6  EFB2  F010         	goto	l3217
  1782   0021AA  EFBA  F010         	goto	l3221
  1783   0021AE                     l3227:
  1784   0021AE  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1785   0021B2  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1786   0021B6                     	if	0	;tblptru may be non-zero
  1787   0021B6                     	endif
  1788   0021B6                     	if	0	;tblptru may be non-zero
  1789   0021B6                     	endif
  1790   0021B6  0008               	tblrd		*
  1791   0021B8  50F5               	movf	tablat,w,c
  1792   0021BA  0A66               	xorlw	102
  1793   0021BC  A4D8               	btfss	status,2,c
  1794   0021BE  EFE3  F010         	goto	u3481
  1795   0021C2  EFE5  F010         	goto	u3480
  1796   0021C6                     u3481:
  1797   0021C6  EF6D  F011         	goto	l3247
  1798   0021CA                     u3480:
  1799   0021CA  EF1B  F011         	goto	l3235
  1800   0021CE                     l3229:
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1803   0021CE  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1804   0021D2  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1805   0021D6  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1806   0021DA  0E04               	movlw	4
  1807   0021DC  26DE               	addwf	postinc2,f,c
  1808   0021DE  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1809   0021E2  0E00               	movlw	0
  1810   0021E4  22DD               	addwfc	postdec2,f,c
  1811   0021E6  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1812   0021EA  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1813   0021EE  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  1814   0021F2  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg+1
  1815   0021F6  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+2
  1816   0021FA  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+3
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1819   0021FE  EF30  F011         	goto	l3237
  1820   002202                     l3231:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1823   002202  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1824   002206  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1825   00220A  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1826   00220E  0E04               	movlw	4
  1827   002210  26DE               	addwf	postinc2,f,c
  1828   002212  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1829   002216  0E00               	movlw	0
  1830   002218  22DD               	addwfc	postdec2,f,c
  1831   00221A  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1832   00221E  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1833   002222  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  1834   002226  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg+1
  1835   00222A  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+2
  1836   00222E  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+3
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1839   002232  EF30  F011         	goto	l3237
  1840   002236                     l3235:
  1841   002236  5043               	movf	vfpfcnvrt@c^0,w,c
  1842   002238  6E3D               	movwf	??_vfpfcnvrt^0,c
  1843   00223A  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1844                           
  1845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1846                           ; Switch size 1, requested type "simple"
  1847                           ; Number of cases is 1, Range of values is 0 to 0
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte            4     3 (average)
  1851                           ;	Chosen strategy is simple_byte
  1852   00223C  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1853   00223E  0A00               	xorlw	0	; case 0
  1854   002240  B4D8               	btfsc	status,2,c
  1855   002242  EF25  F011         	goto	l3513
  1856   002246  EF30  F011         	goto	l3237
  1857   00224A                     l3513:
  1858                           
  1859                           ; Switch size 1, requested type "simple"
  1860                           ; Number of cases is 2, Range of values is 76 to 108
  1861                           ; switch strategies available:
  1862                           ; Name         Instructions Cycles
  1863                           ; simple_byte            7     4 (average)
  1864                           ;	Chosen strategy is simple_byte
  1865   00224A  503D               	movf	??_vfpfcnvrt^0,w,c
  1866   00224C  0A4C               	xorlw	76	; case 76
  1867   00224E  B4D8               	btfsc	status,2,c
  1868   002250  EF01  F011         	goto	l3231
  1869   002254  0A20               	xorlw	32	; case 108
  1870   002256  B4D8               	btfsc	status,2,c
  1871   002258  EFE7  F010         	goto	l3229
  1872   00225C  EF30  F011         	goto	l3237
  1873   002260                     l3237:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1876   002260  0E01               	movlw	1
  1877   002262  2444               	addwf	vfpfcnvrt@cp^0,w,c
  1878   002264  6E3D               	movwf	??_vfpfcnvrt^0,c
  1879   002266  0E00               	movlw	0
  1880   002268  2045               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1881   00226A  6E3E               	movwf	(??_vfpfcnvrt+1)^0,c
  1882   00226C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1883   002270  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1884   002274  C03D  FFDE         	movff	??_vfpfcnvrt,postinc2
  1885   002278  C03E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1888   00227C  EF57  F011         	goto	l3245
  1889   002280                     l3239:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1892   002280  C08C  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1893   002284  C08D  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1894   002288  C03F  F036         	movff	vfpfcnvrt@convarg,efgtoa@f
  1895   00228C  C040  F037         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1896   002290  C041  F038         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1897   002294  C042  F039         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1898   002298  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1899   00229C  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1900   0022A0                     	if	0	;tblptru may be non-zero
  1901   0022A0                     	endif
  1902   0022A0                     	if	0	;tblptru may be non-zero
  1903   0022A0                     	endif
  1904   0022A0  0008               	tblrd		*
  1905   0022A2  CFF5 F03A          	movff	tablat,efgtoa@c
  1906   0022A6  EC5F  F003         	call	_efgtoa	;wreg free
  1907   0022AA  EF8A  F011         	goto	l896
  1908   0022AE                     l3245:
  1909   0022AE  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1910   0022B2  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1911   0022B6                     	if	0	;tblptru may be non-zero
  1912   0022B6                     	endif
  1913   0022B6                     	if	0	;tblptru may be non-zero
  1914   0022B6                     	endif
  1915   0022B6  0008               	tblrd		*
  1916   0022B8  50F5               	movf	tablat,w,c
  1917   0022BA  6E3D               	movwf	??_vfpfcnvrt^0,c
  1918   0022BC  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1919                           
  1920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1921                           ; Switch size 1, requested type "simple"
  1922                           ; Number of cases is 1, Range of values is 0 to 0
  1923                           ; switch strategies available:
  1924                           ; Name         Instructions Cycles
  1925                           ; simple_byte            4     3 (average)
  1926                           ;	Chosen strategy is simple_byte
  1927   0022BE  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1928   0022C0  0A00               	xorlw	0	; case 0
  1929   0022C2  B4D8               	btfsc	status,2,c
  1930   0022C4  EF66  F011         	goto	l3515
  1931   0022C8  EF6D  F011         	goto	l3247
  1932   0022CC                     l3515:
  1933                           
  1934                           ; Switch size 1, requested type "simple"
  1935                           ; Number of cases is 1, Range of values is 102 to 102
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte            4     3 (average)
  1939                           ;	Chosen strategy is simple_byte
  1940   0022CC  503D               	movf	??_vfpfcnvrt^0,w,c
  1941   0022CE  0A66               	xorlw	102	; case 102
  1942   0022D0  B4D8               	btfsc	status,2,c
  1943   0022D2  EF40  F011         	goto	l3239
  1944   0022D6  EF6D  F011         	goto	l3247
  1945   0022DA                     l3247:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1948   0022DA  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1949   0022DE  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1950   0022E2  2ADE               	incf	postinc2,f,c
  1951   0022E4  0E00               	movlw	0
  1952   0022E6  22DD               	addwfc	postdec2,f,c
  1953   0022E8  EF8A  F011         	goto	l896
  1954   0022EC                     l3251:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1957   0022EC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1958   0022F0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1959   0022F4  CFDE FFF6          	movff	postinc2,tblptrl
  1960   0022F8  CFDD FFF7          	movff	postdec2,tblptrh
  1961   0022FC                     	if	0	;tblptru may be non-zero
  1962   0022FC                     	endif
  1963   0022FC                     	if	0	;tblptru may be non-zero
  1964   0022FC                     	endif
  1965   0022FC  0008               	tblrd		*
  1966   0022FE  50F5               	movf	tablat,w,c
  1967   002300  6E01               	movwf	fputc@c^0,c
  1968   002302  6A02               	clrf	(fputc@c+1)^0,c
  1969   002304  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1970   002308  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1971   00230C  ECF2  F014         	call	_fputc	;wreg free
  1972   002310  EF6D  F011         	goto	l3247
  1973   002314                     l896:
  1974   002314  0012               	return		;funcret
  1975   002316                     __end_of_vfpfcnvrt:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _read_prec_or_width *****************
  1979 ;; Defined at:
  1980 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  1983 ;;		 -> vfprintf@cfmt(2), 
  1984 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  1985 ;;		 -> sprintf@ap(2), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  c               1   12[COMRAM] unsigned char 
  1988 ;;  n               2   13[COMRAM] int 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2    6[COMRAM] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1998 ;;      Params:         4       0       0       0       0       0       0
  1999 ;;      Locals:         3       0       0       0       0       0       0
  2000 ;;      Temps:          2       0       0       0       0       0       0
  2001 ;;      Totals:         9       0       0       0       0       0       0
  2002 ;;Total ram usage:        9 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 1
  2005 ;; This function calls:
  2006 ;;		___wmul
  2007 ;; This function is called by:
  2008 ;;		_vfpfcnvrt
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text4
  2013   002AAE                     __ptext4:
  2014                           	callstack 0
  2015   002AAE                     _read_prec_or_width:
  2016                           	callstack 26
  2017   002AAE                     
  2018                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2019   002AAE  0E00               	movlw	0
  2020   002AB0  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2021   002AB2  0E00               	movlw	0
  2022   002AB4  6E0E               	movwf	read_prec_or_width@n^0,c
  2023   002AB6                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2025   002AB6  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2026   002ABA  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2027   002ABE  CFDE FFF6          	movff	postinc2,tblptrl
  2028   002AC2  CFDD FFF7          	movff	postdec2,tblptrh
  2029   002AC6                     	if	0	;tblptru may be non-zero
  2030   002AC6                     	endif
  2031   002AC6                     	if	0	;tblptru may be non-zero
  2032   002AC6                     	endif
  2033   002AC6  0008               	tblrd		*
  2034   002AC8  50F5               	movf	tablat,w,c
  2035   002ACA  0A2A               	xorlw	42
  2036   002ACC  A4D8               	btfss	status,2,c
  2037   002ACE  EF6B  F015         	goto	u3431
  2038   002AD2  EF6D  F015         	goto	u3430
  2039   002AD6                     u3431:
  2040   002AD6  EFA1  F015         	goto	l3181
  2041   002ADA                     u3430:
  2042   002ADA                     
  2043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2044   002ADA  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2045   002ADE  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2046   002AE2  2ADE               	incf	postinc2,f,c
  2047   002AE4  0E00               	movlw	0
  2048   002AE6  22DD               	addwfc	postdec2,f,c
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2051   002AE8  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2052   002AEC  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2053   002AF0  CFDF F00B          	movff	indf2,??_read_prec_or_width
  2054   002AF4  0E02               	movlw	2
  2055   002AF6  26DE               	addwf	postinc2,f,c
  2056   002AF8  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  2057   002AFC  0E00               	movlw	0
  2058   002AFE  22DD               	addwfc	postdec2,f,c
  2059   002B00  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  2060   002B04  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2061   002B08  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  2062   002B0C  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2065   002B10  EFB5  F015         	goto	l871
  2066   002B14                     l3177:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2069   002B14  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2070   002B18  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2071   002B1C  0E00               	movlw	0
  2072   002B1E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2073   002B20  0E0A               	movlw	10
  2074   002B22  6E03               	movwf	___wmul@multiplicand^0,c
  2075   002B24  EC70  F018         	call	___wmul	;wreg free
  2076   002B28  500D               	movf	read_prec_or_width@c^0,w,c
  2077   002B2A  2401               	addwf	?___wmul^0,w,c
  2078   002B2C  6E0E               	movwf	read_prec_or_width@n^0,c
  2079   002B2E  0E00               	movlw	0
  2080   002B30  2002               	addwfc	(?___wmul+1)^0,w,c
  2081   002B32  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2082   002B34                     
  2083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2084   002B34  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2085   002B38  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2086   002B3C  2ADE               	incf	postinc2,f,c
  2087   002B3E  0E00               	movlw	0
  2088   002B40  22DD               	addwfc	postdec2,f,c
  2089   002B42                     l3181:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2092   002B42  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2093   002B46  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2094   002B4A  CFDE FFF6          	movff	postinc2,tblptrl
  2095   002B4E  CFDD FFF7          	movff	postdec2,tblptrh
  2096   002B52                     	if	0	;tblptru may be non-zero
  2097   002B52                     	endif
  2098   002B52                     	if	0	;tblptru may be non-zero
  2099   002B52                     	endif
  2100   002B52  0008               	tblrd		*
  2101   002B54  50F5               	movf	tablat,w,c
  2102   002B56  0FD0               	addlw	208
  2103   002B58  6E0D               	movwf	read_prec_or_width@c^0,c
  2104   002B5A  0E09               	movlw	9
  2105   002B5C  640D               	cpfsgt	read_prec_or_width@c^0,c
  2106   002B5E  EFB3  F015         	goto	u3441
  2107   002B62  EFB5  F015         	goto	u3440
  2108   002B66                     u3441:
  2109   002B66  EF8A  F015         	goto	l3177
  2110   002B6A                     u3440:
  2111   002B6A                     l871:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2114   002B6A  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2115   002B6E  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2116   002B72  0012               	return		;funcret
  2117   002B74                     __end_of_read_prec_or_width:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function ___wmul *****************
  2121 ;; Defined at:
  2122 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  multiplier      2    0[COMRAM] unsigned int 
  2125 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  product         2    4[COMRAM] unsigned int 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    0[COMRAM] unsigned int 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, prodl, prodh
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         4       0       0       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0
  2140 ;;      Totals:         6       0       0       0       0       0       0
  2141 ;;Total ram usage:        6 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_read_prec_or_width
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text5
  2151   0030E0                     __ptext5:
  2152                           	callstack 0
  2153   0030E0                     ___wmul:
  2154                           	callstack 26
  2155   0030E0  5001               	movf	___wmul@multiplier^0,w,c
  2156   0030E2  0203               	mulwf	___wmul@multiplicand^0,c
  2157   0030E4  CFF3 F005          	movff	prodl,___wmul@product
  2158   0030E8  CFF4 F006          	movff	prodh,___wmul@product+1
  2159   0030EC  5001               	movf	___wmul@multiplier^0,w,c
  2160   0030EE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2161   0030F0  50F3               	movf	243,w,c
  2162   0030F2  2606               	addwf	(___wmul@product+1)^0,f,c
  2163   0030F4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2164   0030F6  0203               	mulwf	___wmul@multiplicand^0,c
  2165   0030F8  50F3               	movf	243,w,c
  2166   0030FA  2606               	addwf	(___wmul@product+1)^0,f,c
  2167   0030FC  C005  F001         	movff	___wmul@product,?___wmul
  2168   003100  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2169   003104  0012               	return		;funcret
  2170   003106                     __end_of___wmul:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _efgtoa *****************
  2174 ;; Defined at:
  2175 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2178 ;;		 -> sprintf@f(12), 
  2179 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  2180 ;;  c               1   57[COMRAM] unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  u               4   40[BANK0 ] struct flui
  2183 ;;  g               4   36[BANK0 ] struct flui
  2184 ;;  l               4   29[BANK0 ] struct flui
  2185 ;;  h               4   25[BANK0 ] struct flui
  2186 ;;  ou              4   19[BANK0 ] struct flui
  2187 ;;  n               2   34[BANK0 ] int 
  2188 ;;  i               2   23[BANK0 ] int 
  2189 ;;  w               2   17[BANK0 ] int 
  2190 ;;  e               2   15[BANK0 ] int 
  2191 ;;  m               2   13[BANK0 ] int 
  2192 ;;  d               2   11[BANK0 ] int 
  2193 ;;  t               2    4[BANK0 ] int 
  2194 ;;  p               2    2[BANK0 ] int 
  2195 ;;  ne              2    0[BANK0 ] int 
  2196 ;;  sign            1   33[BANK0 ] unsigned char 
  2197 ;;  nmode           1   10[BANK0 ] unsigned char 
  2198 ;;  mode            1    9[BANK0 ] unsigned char 
  2199 ;;  pp              1    8[BANK0 ] unsigned char 
  2200 ;;  esign           1    0        unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2210 ;;      Params:         7       0       0       0       0       0       0
  2211 ;;      Locals:         0      44       0       0       0       0       0
  2212 ;;      Temps:          2       0       0       0       0       0       0
  2213 ;;      Totals:         9      44       0       0       0       0       0
  2214 ;;Total ram usage:       53 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 4
  2217 ;; This function calls:
  2218 ;;		___fladd
  2219 ;;		___fldiv
  2220 ;;		___fleq
  2221 ;;		___flge
  2222 ;;		___flmul
  2223 ;;		___flneg
  2224 ;;		___flsub
  2225 ;;		___fltol
  2226 ;;		___fpclassifyf
  2227 ;;		_floorf
  2228 ;;		_labs
  2229 ;;		_memcpy
  2230 ;;		_pad
  2231 ;;		_strcpy
  2232 ;; This function is called by:
  2233 ;;		_vfpfcnvrt
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text6
  2238   0006BE                     __ptext6:
  2239                           	callstack 0
  2240   0006BE                     _efgtoa:
  2241                           	callstack 23
  2242   0006BE                     
  2243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  2244   0006BE  0E00               	movlw	0
  2245   0006C0  0100               	movlb	0	; () banked
  2246   0006C2  6F81               	movwf	efgtoa@sign& (0+255),b
  2247   0006C4                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  2250   0006C4  C036  F084         	movff	efgtoa@f,efgtoa@g
  2251   0006C8  C037  F085         	movff	efgtoa@f+1,efgtoa@g+1
  2252   0006CC  C038  F086         	movff	efgtoa@f+2,efgtoa@g+2
  2253   0006D0  C039  F087         	movff	efgtoa@f+3,efgtoa@g+3
  2254   0006D4                     
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  2257   0006D4  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2258   0006D6  EF71  F003         	goto	u3110
  2259   0006DA  EF6F  F003         	goto	u3111
  2260   0006DE                     u3111:
  2261   0006DE  EF85  F003         	goto	l2959
  2262   0006E2                     u3110:
  2263   0006E2                     
  2264                           ; BSR set to: 0
  2265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  2266   0006E2  0E01               	movlw	1
  2267   0006E4  6F81               	movwf	efgtoa@sign& (0+255),b
  2268   0006E6                     
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  2271   0006E6  C084  F001         	movff	efgtoa@g,___flneg@f1
  2272   0006EA  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2273   0006EE  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2274   0006F2  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2275   0006F6  EC0D  F018         	call	___flneg	;wreg free
  2276   0006FA  C001  F084         	movff	?___flneg,efgtoa@g
  2277   0006FE  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  2278   000702  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  2279   000706  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  2280   00070A                     l2959:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  2283   00070A  0E00               	movlw	0
  2284   00070C  0100               	movlb	0	; () banked
  2285   00070E  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2286   000710  0E00               	movlw	0
  2287   000712  6F82               	movwf	efgtoa@n& (0+255),b
  2288   000714                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  2291   000714  C058  F071         	movff	_width,efgtoa@w
  2292   000718  C059  F072         	movff	_width+1,efgtoa@w+1
  2293   00071C                     
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  2296   00071C  5181               	movf	efgtoa@sign& (0+255),w,b
  2297   00071E  B4D8               	btfsc	status,2,c
  2298   000720  EF94  F003         	goto	u3121
  2299   000724  EF96  F003         	goto	u3120
  2300   000728                     u3121:
  2301   000728  EFAA  F003         	goto	l2973
  2302   00072C                     u3120:
  2303   00072C                     
  2304                           ; BSR set to: 0
  2305                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  2306   00072C  5181               	movf	efgtoa@sign& (0+255),w,b
  2307   00072E  A4D8               	btfss	status,2,c
  2308   000730  EF9C  F003         	goto	u3131
  2309   000734  EF9E  F003         	goto	u3130
  2310   000738                     u3131:
  2311   000738  EFA4  F003         	goto	l2969
  2312   00073C                     u3130:
  2313   00073C                     
  2314                           ; BSR set to: 0
  2315   00073C  0E00               	movlw	0
  2316   00073E  6F67               	movwf	(_efgtoa$860+1)& (0+255),b
  2317   000740  0E2B               	movlw	43
  2318   000742  6F66               	movwf	_efgtoa$860& (0+255),b
  2319   000744  EFA8  F003         	goto	l2971
  2320   000748                     l2969:
  2321                           
  2322                           ; BSR set to: 0
  2323   000748  0E00               	movlw	0
  2324   00074A  6F67               	movwf	(_efgtoa$860+1)& (0+255),b
  2325   00074C  0E2D               	movlw	45
  2326   00074E  6F66               	movwf	_efgtoa$860& (0+255),b
  2327   000750                     l2971:
  2328                           
  2329                           ; BSR set to: 0
  2330   000750  C066  F081         	movff	_efgtoa$860,efgtoa@sign
  2331   000754                     l2973:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2335   000754  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2336   000758  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2337   00075C  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2338   000760  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2339   000764  EC73  F014         	call	___fpclassifyf	;wreg free
  2340   000768  0401               	decf	?___fpclassifyf^0,w,c
  2341   00076A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2342   00076C  A4D8               	btfss	status,2,c
  2343   00076E  EFBB  F003         	goto	u3141
  2344   000772  EFBD  F003         	goto	u3140
  2345   000776                     u3141:
  2346   000776  EFF0  F003         	goto	l2991
  2347   00077A                     u3140:
  2348   00077A                     
  2349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  2350   00077A  0100               	movlb	0	; () banked
  2351   00077C  5181               	movf	efgtoa@sign& (0+255),w,b
  2352   00077E  B4D8               	btfsc	status,2,c
  2353   000780  EFC4  F003         	goto	u3151
  2354   000784  EFC6  F003         	goto	u3150
  2355   000788                     u3151:
  2356   000788  EFCF  F003         	goto	l2983
  2357   00078C                     u3150:
  2358   00078C                     
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  2361   00078C  C081  F150         	movff	efgtoa@sign,_dbuf
  2362   000790                     
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  2365   000790  0771               	decf	efgtoa@w& (0+255),f,b
  2366   000792  A0D8               	btfss	status,0,c
  2367   000794  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2368   000796                     
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  2371   000796  0E00               	movlw	0
  2372   000798  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2373   00079A  0E01               	movlw	1
  2374   00079C  6F82               	movwf	efgtoa@n& (0+255),b
  2375   00079E                     l2983:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  2379   00079E  0E50               	movlw	low _dbuf
  2380   0007A0  2582               	addwf	efgtoa@n& (0+255),w,b
  2381   0007A2  6E01               	movwf	strcpy@dest^0,c
  2382   0007A4  0E01               	movlw	high _dbuf
  2383   0007A6  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2384   0007A8  6E02               	movwf	(strcpy@dest+1)^0,c
  2385   0007AA  0EB5               	movlw	low STR_5
  2386   0007AC  6E03               	movwf	strcpy@src^0,c
  2387   0007AE  0E06               	movlw	high STR_5
  2388   0007B0  6E04               	movwf	(strcpy@src+1)^0,c
  2389   0007B2  ECCE  F017         	call	_strcpy	;wreg free
  2390   0007B6                     l2985:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2393   0007B6  0100               	movlb	0	; () banked
  2394   0007B8  0EFD               	movlw	253
  2395   0007BA  2771               	addwf	efgtoa@w& (0+255),f,b
  2396   0007BC  0EFF               	movlw	255
  2397   0007BE  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2398   0007C0                     
  2399                           ; BSR set to: 0
  2400                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2401   0007C0  C034  F011         	movff	efgtoa@fp,pad@fp
  2402   0007C4  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2403   0007C8  0E50               	movlw	low _dbuf
  2404   0007CA  6E13               	movwf	pad@buf^0,c
  2405   0007CC  0E01               	movlw	high _dbuf
  2406   0007CE  6E14               	movwf	(pad@buf+1)^0,c
  2407   0007D0  C071  F015         	movff	efgtoa@w,pad@p
  2408   0007D4  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2409   0007D8  ECBA  F015         	call	_pad	;wreg free
  2410   0007DC  EF5B  F008         	goto	l826
  2411   0007E0                     l2991:
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2414   0007E0  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2415   0007E4  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2416   0007E8  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2417   0007EC  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2418   0007F0  EC73  F014         	call	___fpclassifyf	;wreg free
  2419   0007F4  5001               	movf	?___fpclassifyf^0,w,c
  2420   0007F6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2421   0007F8  A4D8               	btfss	status,2,c
  2422   0007FA  EF01  F004         	goto	u3161
  2423   0007FE  EF03  F004         	goto	u3160
  2424   000802                     u3161:
  2425   000802  EF23  F004         	goto	l3009
  2426   000806                     u3160:
  2427   000806                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  2429   000806  0100               	movlb	0	; () banked
  2430   000808  5181               	movf	efgtoa@sign& (0+255),w,b
  2431   00080A  B4D8               	btfsc	status,2,c
  2432   00080C  EF0A  F004         	goto	u3171
  2433   000810  EF0C  F004         	goto	u3170
  2434   000814                     u3171:
  2435   000814  EF15  F004         	goto	l3001
  2436   000818                     u3170:
  2437   000818                     
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2440   000818  C081  F150         	movff	efgtoa@sign,_dbuf
  2441   00081C                     
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2444   00081C  0771               	decf	efgtoa@w& (0+255),f,b
  2445   00081E  A0D8               	btfss	status,0,c
  2446   000820  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2447   000822                     
  2448                           ; BSR set to: 0
  2449                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2450   000822  0E00               	movlw	0
  2451   000824  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2452   000826  0E01               	movlw	1
  2453   000828  6F82               	movwf	efgtoa@n& (0+255),b
  2454   00082A                     l3001:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2458   00082A  0E50               	movlw	low _dbuf
  2459   00082C  2582               	addwf	efgtoa@n& (0+255),w,b
  2460   00082E  6E01               	movwf	strcpy@dest^0,c
  2461   000830  0E01               	movlw	high _dbuf
  2462   000832  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2463   000834  6E02               	movwf	(strcpy@dest+1)^0,c
  2464   000836  0EB9               	movlw	low STR_8
  2465   000838  6E03               	movwf	strcpy@src^0,c
  2466   00083A  0E06               	movlw	high STR_8
  2467   00083C  6E04               	movwf	(strcpy@src+1)^0,c
  2468   00083E  ECCE  F017         	call	_strcpy	;wreg free
  2469   000842  EFDB  F003         	goto	l2985
  2470   000846                     l3009:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2473   000846  0E00               	movlw	0
  2474   000848  0100               	movlb	0	; () banked
  2475   00084A  6F88               	movwf	efgtoa@u& (0+255),b
  2476   00084C  0E00               	movlw	0
  2477   00084E  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2478   000850  0E80               	movlw	128
  2479   000852  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2480   000854  0E3F               	movlw	63
  2481   000856  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2484   000858  0E00               	movlw	0
  2485   00085A  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2486   00085C  0E00               	movlw	0
  2487   00085E  6F6F               	movwf	efgtoa@e& (0+255),b
  2488   000860                     
  2489                           ; BSR set to: 0
  2490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2491   000860  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2492   000864  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2493   000868  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2494   00086C  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2495   000870  0E00               	movlw	0
  2496   000872  6E05               	movwf	___fleq@ff2^0,c
  2497   000874  0E00               	movlw	0
  2498   000876  6E06               	movwf	(___fleq@ff2+1)^0,c
  2499   000878  0E00               	movlw	0
  2500   00087A  6E07               	movwf	(___fleq@ff2+2)^0,c
  2501   00087C  0E00               	movlw	0
  2502   00087E  6E08               	movwf	(___fleq@ff2+3)^0,c
  2503   000880  EC0F  F016         	call	___fleq	;wreg free
  2504   000884  B0D8               	btfsc	status,0,c
  2505   000886  EF47  F004         	goto	u3181
  2506   00088A  EF49  F004         	goto	u3180
  2507   00088E                     u3181:
  2508   00088E  EF28  F005         	goto	l829
  2509   000892                     u3180:
  2510   000892  EF56  F004         	goto	l3017
  2511   000896                     l831:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2514   000896  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2515   00089A  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2516   00089E  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2517   0008A2  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2518   0008A6                     
  2519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2520   0008A6  0100               	movlb	0	; () banked
  2521   0008A8  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2522   0008AA  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2523   0008AC                     l3017:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2526   0008AC  C088  F00F         	movff	efgtoa@u,___flmul@b
  2527   0008B0  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2528   0008B4  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2529   0008B8  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2530   0008BC  0E00               	movlw	0
  2531   0008BE  6E13               	movwf	___flmul@a^0,c
  2532   0008C0  0E00               	movlw	0
  2533   0008C2  6E14               	movwf	(___flmul@a+1)^0,c
  2534   0008C4  0E20               	movlw	32
  2535   0008C6  6E15               	movwf	(___flmul@a+2)^0,c
  2536   0008C8  0E41               	movlw	65
  2537   0008CA  6E16               	movwf	(___flmul@a+3)^0,c
  2538   0008CC  ECBC  F00A         	call	___flmul	;wreg free
  2539   0008D0  C00F  F073         	movff	?___flmul,efgtoa@ou
  2540   0008D4  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2541   0008D8  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2542   0008DC  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2543   0008E0  0100               	movlb	0	; () banked
  2544   0008E2  5173               	movf	efgtoa@ou& (0+255),w,b
  2545   0008E4  5D84               	subwf	efgtoa@g& (0+255),w,b
  2546   0008E6  6E01               	movwf	labs@a^0,c
  2547   0008E8  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2548   0008EA  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2549   0008EC  6E02               	movwf	(labs@a+1)^0,c
  2550   0008EE  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2551   0008F0  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2552   0008F2  6E03               	movwf	(labs@a+2)^0,c
  2553   0008F4  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2554   0008F6  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2555   0008F8  6E04               	movwf	(labs@a+3)^0,c
  2556   0008FA  ECB7  F016         	call	_labs	;wreg free
  2557   0008FE  BE04               	btfsc	(?_labs+3)^0,7,c
  2558   000900  EF8D  F004         	goto	u3191
  2559   000904  5004               	movf	(?_labs+3)^0,w,c
  2560   000906  1003               	iorwf	(?_labs+2)^0,w,c
  2561   000908  1002               	iorwf	(?_labs+1)^0,w,c
  2562   00090A  E109               	bnz	u3190
  2563   00090C  0E02               	movlw	2
  2564   00090E  5C01               	subwf	?_labs^0,w,c
  2565   000910  A0D8               	btfss	status,0,c
  2566   000912  EF8D  F004         	goto	u3191
  2567   000916  EF8F  F004         	goto	u3190
  2568   00091A                     u3191:
  2569   00091A  EF4B  F004         	goto	l831
  2570   00091E                     u3190:
  2571   00091E  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2572   000922  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2573   000926  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2574   00092A  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2575   00092E  C084  F02C         	movff	efgtoa@g,___flge@ff2
  2576   000932  C085  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2577   000936  C086  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2578   00093A  C087  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2579   00093E  ECF1  F013         	call	___flge	;wreg free
  2580   000942  A0D8               	btfss	status,0,c
  2581   000944  EFA6  F004         	goto	u3201
  2582   000948  EFA8  F004         	goto	u3200
  2583   00094C                     u3201:
  2584   00094C  EF4B  F004         	goto	l831
  2585   000950                     u3200:
  2586   000950                     
  2587                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2588   000950  0100               	movlb	0	; () banked
  2589   000952  5188               	movf	efgtoa@u& (0+255),w,b
  2590   000954  5D84               	subwf	efgtoa@g& (0+255),w,b
  2591   000956  6E01               	movwf	labs@a^0,c
  2592   000958  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2593   00095A  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2594   00095C  6E02               	movwf	(labs@a+1)^0,c
  2595   00095E  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2596   000960  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2597   000962  6E03               	movwf	(labs@a+2)^0,c
  2598   000964  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2599   000966  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2600   000968  6E04               	movwf	(labs@a+3)^0,c
  2601   00096A  ECB7  F016         	call	_labs	;wreg free
  2602   00096E  BE04               	btfsc	(?_labs+3)^0,7,c
  2603   000970  EFC7  F004         	goto	u3210
  2604   000974  5004               	movf	(?_labs+3)^0,w,c
  2605   000976  1003               	iorwf	(?_labs+2)^0,w,c
  2606   000978  1002               	iorwf	(?_labs+1)^0,w,c
  2607   00097A  E107               	bnz	u3211
  2608   00097C  0E02               	movlw	2
  2609   00097E  5C01               	subwf	?_labs^0,w,c
  2610   000980  B0D8               	btfsc	status,0,c
  2611   000982  EFC5  F004         	goto	u3211
  2612   000986  EFC7  F004         	goto	u3210
  2613   00098A                     u3211:
  2614   00098A  EF0F  F005         	goto	l3035
  2615   00098E                     u3210:
  2616   00098E                     l3025:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2619   00098E  C088  F084         	movff	efgtoa@u,efgtoa@g
  2620   000992  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2621   000996  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2622   00099A  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2625   00099E  EF28  F005         	goto	l829
  2626   0009A2                     l3027:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2629   0009A2  C088  F001         	movff	efgtoa@u,___fldiv@b
  2630   0009A6  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2631   0009AA  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2632   0009AE  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2633   0009B2  0E00               	movlw	0
  2634   0009B4  6E05               	movwf	___fldiv@a^0,c
  2635   0009B6  0E00               	movlw	0
  2636   0009B8  6E06               	movwf	(___fldiv@a+1)^0,c
  2637   0009BA  0E20               	movlw	32
  2638   0009BC  6E07               	movwf	(___fldiv@a+2)^0,c
  2639   0009BE  0E41               	movlw	65
  2640   0009C0  6E08               	movwf	(___fldiv@a+3)^0,c
  2641   0009C2  ECD1  F00C         	call	___fldiv	;wreg free
  2642   0009C6  C001  F088         	movff	?___fldiv,efgtoa@u
  2643   0009CA  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2644   0009CE  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2645   0009D2  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2646   0009D6                     
  2647                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2648   0009D6  0100               	movlb	0	; () banked
  2649   0009D8  076F               	decf	efgtoa@e& (0+255),f,b
  2650   0009DA  A0D8               	btfss	status,0,c
  2651   0009DC  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2652   0009DE                     
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2655   0009DE  5188               	movf	efgtoa@u& (0+255),w,b
  2656   0009E0  5D84               	subwf	efgtoa@g& (0+255),w,b
  2657   0009E2  6E01               	movwf	labs@a^0,c
  2658   0009E4  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2659   0009E6  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2660   0009E8  6E02               	movwf	(labs@a+1)^0,c
  2661   0009EA  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2662   0009EC  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2663   0009EE  6E03               	movwf	(labs@a+2)^0,c
  2664   0009F0  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2665   0009F2  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2666   0009F4  6E04               	movwf	(labs@a+3)^0,c
  2667   0009F6  ECB7  F016         	call	_labs	;wreg free
  2668   0009FA  BE04               	btfsc	(?_labs+3)^0,7,c
  2669   0009FC  EF0D  F005         	goto	u3220
  2670   000A00  5004               	movf	(?_labs+3)^0,w,c
  2671   000A02  1003               	iorwf	(?_labs+2)^0,w,c
  2672   000A04  1002               	iorwf	(?_labs+1)^0,w,c
  2673   000A06  E107               	bnz	u3221
  2674   000A08  0E02               	movlw	2
  2675   000A0A  5C01               	subwf	?_labs^0,w,c
  2676   000A0C  B0D8               	btfsc	status,0,c
  2677   000A0E  EF0B  F005         	goto	u3221
  2678   000A12  EF0D  F005         	goto	u3220
  2679   000A16                     u3221:
  2680   000A16  EF0F  F005         	goto	l3035
  2681   000A1A                     u3220:
  2682   000A1A  EFC7  F004         	goto	l3025
  2683   000A1E                     l3035:
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2686   000A1E  C084  F028         	movff	efgtoa@g,___flge@ff1
  2687   000A22  C085  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2688   000A26  C086  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2689   000A2A  C087  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2690   000A2E  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2691   000A32  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2692   000A36  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2693   000A3A  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2694   000A3E  ECF1  F013         	call	___flge	;wreg free
  2695   000A42  A0D8               	btfss	status,0,c
  2696   000A44  EF26  F005         	goto	u3231
  2697   000A48  EF28  F005         	goto	u3230
  2698   000A4C                     u3231:
  2699   000A4C  EFD1  F004         	goto	l3027
  2700   000A50                     u3230:
  2701   000A50                     l829:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2704   000A50  C03A  F069         	movff	efgtoa@c,efgtoa@mode
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2707   000A54  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2708   000A58                     
  2709                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2710   000A58  BE5B               	btfsc	(_prec+1)^0,7,c
  2711   000A5A  EF31  F005         	goto	u3241
  2712   000A5E  EF33  F005         	goto	u3240
  2713   000A62                     u3241:
  2714   000A62  EF39  F005         	goto	l3041
  2715   000A66                     u3240:
  2716   000A66  C05A  F062         	movff	_prec,efgtoa@p
  2717   000A6A  C05B  F063         	movff	_prec+1,efgtoa@p+1
  2718   000A6E  EF3E  F005         	goto	l3043
  2719   000A72                     l3041:
  2720   000A72  0E00               	movlw	0
  2721   000A74  0100               	movlb	0	; () banked
  2722   000A76  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2723   000A78  0E06               	movlw	6
  2724   000A7A  6F62               	movwf	efgtoa@p& (0+255),b
  2725   000A7C                     l3043:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2728   000A7C  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2729   000A80  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2730   000A84                     
  2731                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2732   000A84  0100               	movlb	0	; () banked
  2733   000A86  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2734   000A88  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2735   000A8A                     
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2738   000A8A  0E66               	movlw	102
  2739   000A8C  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2740   000A8E  A4D8               	btfss	status,2,c
  2741   000A90  EF4C  F005         	goto	u3251
  2742   000A94  EF4E  F005         	goto	u3250
  2743   000A98                     u3251:
  2744   000A98  EF6E  F005         	goto	l3057
  2745   000A9C                     u3250:
  2746   000A9C                     
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2749   000A9C  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2750   000A9E  EF55  F005         	goto	u3260
  2751   000AA2  EF53  F005         	goto	u3261
  2752   000AA6                     u3261:
  2753   000AA6  EF61  F005         	goto	l3053
  2754   000AAA                     u3260:
  2755   000AAA                     
  2756                           ; BSR set to: 0
  2757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2758   000AAA  0E00               	movlw	0
  2759   000AAC  6F88               	movwf	efgtoa@u& (0+255),b
  2760   000AAE  0E00               	movlw	0
  2761   000AB0  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2762   000AB2  0E80               	movlw	128
  2763   000AB4  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2764   000AB6  0E3F               	movlw	63
  2765   000AB8  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2768   000ABA  0E00               	movlw	0
  2769   000ABC  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2770   000ABE  0E00               	movlw	0
  2771   000AC0  6F6F               	movwf	efgtoa@e& (0+255),b
  2772   000AC2                     l3053:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2776   000AC2  0E67               	movlw	103
  2777   000AC4  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2778   000AC6  B4D8               	btfsc	status,2,c
  2779   000AC8  EF68  F005         	goto	u3271
  2780   000ACC  EF6A  F005         	goto	u3270
  2781   000AD0                     u3271:
  2782   000AD0  EF6E  F005         	goto	l3057
  2783   000AD4                     u3270:
  2784   000AD4                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2787   000AD4  516F               	movf	efgtoa@e& (0+255),w,b
  2788   000AD6  276D               	addwf	efgtoa@m& (0+255),f,b
  2789   000AD8  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2790   000ADA  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2791   000ADC                     l3057:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2795   000ADC  0E00               	movlw	0
  2796   000ADE  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2797   000AE0  0E00               	movlw	0
  2798   000AE2  6F77               	movwf	efgtoa@i& (0+255),b
  2799   000AE4                     
  2800                           ; BSR set to: 0
  2801                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2802   000AE4  C084  F079         	movff	efgtoa@g,efgtoa@h
  2803   000AE8  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2804   000AEC  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2805   000AF0  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2806   000AF4                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2809   000AF4  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2810   000AF8  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2811   000AFC  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2812   000B00  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2815   000B04  EFFF  F005         	goto	l3071
  2816   000B08                     l3063:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2820   000B08  C079  F001         	movff	efgtoa@h,___fldiv@b
  2821   000B0C  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2822   000B10  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2823   000B14  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2824   000B18  C088  F005         	movff	efgtoa@u,___fldiv@a
  2825   000B1C  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2826   000B20  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2827   000B24  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2828   000B28  ECD1  F00C         	call	___fldiv	;wreg free
  2829   000B2C  C001  F01A         	movff	?___fldiv,floorf@x
  2830   000B30  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2831   000B34  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2832   000B38  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2833   000B3C  EC8B  F011         	call	_floorf	;wreg free
  2834   000B40  C01A  F07D         	movff	?_floorf,efgtoa@l
  2835   000B44  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2836   000B48  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2837   000B4C  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2840   000B50  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2841   000B54  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2842   000B58  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2843   000B5C  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2844   000B60  EC6E  F013         	call	___fltol	;wreg free
  2845   000B64  C001  F06B         	movff	?___fltol,efgtoa@d
  2846   000B68  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2847   000B6C                     
  2848                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2849   000B6C  C079  F028         	movff	efgtoa@h,___flsub@b
  2850   000B70  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2851   000B74  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2852   000B78  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2853   000B7C  C07D  F013         	movff	efgtoa@l,___flmul@a
  2854   000B80  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2855   000B84  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2856   000B88  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2857   000B8C  C088  F00F         	movff	efgtoa@u,___flmul@b
  2858   000B90  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2859   000B94  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2860   000B98  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2861   000B9C  ECBC  F00A         	call	___flmul	;wreg free
  2862   000BA0  C00F  F02C         	movff	?___flmul,___flsub@a
  2863   000BA4  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2864   000BA8  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2865   000BAC  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2866   000BB0  EC89  F017         	call	___flsub	;wreg free
  2867   000BB4  C028  F079         	movff	?___flsub,efgtoa@h
  2868   000BB8  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2869   000BBC  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2870   000BC0  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2871   000BC4                     
  2872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2873   000BC4  C088  F001         	movff	efgtoa@u,___fldiv@b
  2874   000BC8  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2875   000BCC  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2876   000BD0  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2877   000BD4  0E00               	movlw	0
  2878   000BD6  6E05               	movwf	___fldiv@a^0,c
  2879   000BD8  0E00               	movlw	0
  2880   000BDA  6E06               	movwf	(___fldiv@a+1)^0,c
  2881   000BDC  0E20               	movlw	32
  2882   000BDE  6E07               	movwf	(___fldiv@a+2)^0,c
  2883   000BE0  0E41               	movlw	65
  2884   000BE2  6E08               	movwf	(___fldiv@a+3)^0,c
  2885   000BE4  ECD1  F00C         	call	___fldiv	;wreg free
  2886   000BE8  C001  F088         	movff	?___fldiv,efgtoa@u
  2887   000BEC  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2888   000BF0  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2889   000BF4  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2890   000BF8                     
  2891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2892   000BF8  0100               	movlb	0	; () banked
  2893   000BFA  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2894   000BFC  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2895   000BFE                     l3071:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2899   000BFE  516D               	movf	efgtoa@m& (0+255),w,b
  2900   000C00  5D77               	subwf	efgtoa@i& (0+255),w,b
  2901   000C02  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2902   000C04  0A80               	xorlw	128
  2903   000C06  6E3B               	movwf	??_efgtoa^0,c
  2904   000C08  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2905   000C0A  0A80               	xorlw	128
  2906   000C0C  583B               	subwfb	??_efgtoa^0,w,c
  2907   000C0E  A0D8               	btfss	status,0,c
  2908   000C10  EF0C  F006         	goto	u3281
  2909   000C14  EF0E  F006         	goto	u3280
  2910   000C18                     u3281:
  2911   000C18  EF84  F005         	goto	l3063
  2912   000C1C                     u3280:
  2913   000C1C                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2916   000C1C  C088  F00F         	movff	efgtoa@u,___flmul@b
  2917   000C20  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2918   000C24  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2919   000C28  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2920   000C2C  0E00               	movlw	0
  2921   000C2E  6E13               	movwf	___flmul@a^0,c
  2922   000C30  0E00               	movlw	0
  2923   000C32  6E14               	movwf	(___flmul@a+1)^0,c
  2924   000C34  0EA0               	movlw	160
  2925   000C36  6E15               	movwf	(___flmul@a+2)^0,c
  2926   000C38  0E40               	movlw	64
  2927   000C3A  6E16               	movwf	(___flmul@a+3)^0,c
  2928   000C3C  ECBC  F00A         	call	___flmul	;wreg free
  2929   000C40  C00F  F07D         	movff	?___flmul,efgtoa@l
  2930   000C44  C010  F07E         	movff	?___flmul+1,efgtoa@l+1
  2931   000C48  C011  F07F         	movff	?___flmul+2,efgtoa@l+2
  2932   000C4C  C012  F080         	movff	?___flmul+3,efgtoa@l+3
  2933   000C50                     
  2934                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2935   000C50  C079  F028         	movff	efgtoa@h,___flge@ff1
  2936   000C54  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2937   000C58  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2938   000C5C  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2939   000C60  C07D  F02C         	movff	efgtoa@l,___flge@ff2
  2940   000C64  C07E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2941   000C68  C07F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2942   000C6C  C080  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2943   000C70  ECF1  F013         	call	___flge	;wreg free
  2944   000C74  B0D8               	btfsc	status,0,c
  2945   000C76  EF3F  F006         	goto	u3291
  2946   000C7A  EF41  F006         	goto	u3290
  2947   000C7E                     u3291:
  2948   000C7E  EF4C  F006         	goto	l3079
  2949   000C82                     u3290:
  2950   000C82                     
  2951                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  2952   000C82  0E00               	movlw	0
  2953   000C84  0100               	movlb	0	; () banked
  2954   000C86  6F7D               	movwf	efgtoa@l& (0+255),b
  2955   000C88  0E00               	movlw	0
  2956   000C8A  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2957   000C8C  0E00               	movlw	0
  2958   000C8E  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2959   000C90  0E00               	movlw	0
  2960   000C92  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  2963   000C94  EF75  F006         	goto	l3085
  2964   000C98                     l3079:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  2967   000C98  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2968   000C9C  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2969   000CA0  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2970   000CA4  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2971   000CA8  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2972   000CAC  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2973   000CB0  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2974   000CB4  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2975   000CB8  EC0F  F016         	call	___fleq	;wreg free
  2976   000CBC  A0D8               	btfss	status,0,c
  2977   000CBE  EF63  F006         	goto	u3301
  2978   000CC2  EF65  F006         	goto	u3300
  2979   000CC6                     u3301:
  2980   000CC6  EF75  F006         	goto	l3085
  2981   000CCA                     u3300:
  2982   000CCA  0100               	movlb	0	; () banked
  2983   000CCC  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2984   000CCE  EF6B  F006         	goto	u3311
  2985   000CD2  EF6D  F006         	goto	u3310
  2986   000CD6                     u3311:
  2987   000CD6  EF75  F006         	goto	l3085
  2988   000CDA                     u3310:
  2989   000CDA                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  2992   000CDA  0E00               	movlw	0
  2993   000CDC  6F7D               	movwf	efgtoa@l& (0+255),b
  2994   000CDE  0E00               	movlw	0
  2995   000CE0  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2996   000CE2  0E00               	movlw	0
  2997   000CE4  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2998   000CE6  0E00               	movlw	0
  2999   000CE8  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3000   000CEA                     l3085:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  3003   000CEA  C084  F001         	movff	efgtoa@g,___fladd@b
  3004   000CEE  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  3005   000CF2  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  3006   000CF6  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  3007   000CFA  C07D  F005         	movff	efgtoa@l,___fladd@a
  3008   000CFE  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3009   000D02  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3010   000D06  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  3011   000D0A  EC5C  F008         	call	___fladd	;wreg free
  3012   000D0E  C001  F079         	movff	?___fladd,efgtoa@h
  3013   000D12  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  3014   000D16  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  3015   000D1A  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  3016   000D1E                     
  3017                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  3018   000D1E  C079  F028         	movff	efgtoa@h,___flge@ff1
  3019   000D22  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3020   000D26  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3021   000D2A  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3022   000D2E  0E00               	movlw	0
  3023   000D30  6E13               	movwf	___flmul@a^0,c
  3024   000D32  0E00               	movlw	0
  3025   000D34  6E14               	movwf	(___flmul@a+1)^0,c
  3026   000D36  0E20               	movlw	32
  3027   000D38  6E15               	movwf	(___flmul@a+2)^0,c
  3028   000D3A  0E41               	movlw	65
  3029   000D3C  6E16               	movwf	(___flmul@a+3)^0,c
  3030   000D3E  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3031   000D42  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3032   000D46  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3033   000D4A  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3034   000D4E  ECBC  F00A         	call	___flmul	;wreg free
  3035   000D52  C00F  F02C         	movff	?___flmul,___flge@ff2
  3036   000D56  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3037   000D5A  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3038   000D5E  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3039   000D62  ECF1  F013         	call	___flge	;wreg free
  3040   000D66  A0D8               	btfss	status,0,c
  3041   000D68  EFB8  F006         	goto	u3321
  3042   000D6C  EFBA  F006         	goto	u3320
  3043   000D70                     u3321:
  3044   000D70  EFE3  F006         	goto	l3097
  3045   000D74                     u3320:
  3046   000D74                     
  3047                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  3048   000D74  0100               	movlb	0	; () banked
  3049   000D76  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3050   000D78  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3051   000D7A                     
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  3054   000D7A  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3055   000D7E  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3056   000D82  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3057   000D86  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3058   000D8A  0E00               	movlw	0
  3059   000D8C  6E13               	movwf	___flmul@a^0,c
  3060   000D8E  0E00               	movlw	0
  3061   000D90  6E14               	movwf	(___flmul@a+1)^0,c
  3062   000D92  0E20               	movlw	32
  3063   000D94  6E15               	movwf	(___flmul@a+2)^0,c
  3064   000D96  0E41               	movlw	65
  3065   000D98  6E16               	movwf	(___flmul@a+3)^0,c
  3066   000D9A  ECBC  F00A         	call	___flmul	;wreg free
  3067   000D9E  C00F  F073         	movff	?___flmul,efgtoa@ou
  3068   000DA2  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  3069   000DA6  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  3070   000DAA  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  3071   000DAE                     
  3072                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  3073   000DAE  0E66               	movlw	102
  3074   000DB0  0100               	movlb	0	; () banked
  3075   000DB2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3076   000DB4  A4D8               	btfss	status,2,c
  3077   000DB6  EFDF  F006         	goto	u3331
  3078   000DBA  EFE1  F006         	goto	u3330
  3079   000DBE                     u3331:
  3080   000DBE  EFE3  F006         	goto	l3097
  3081   000DC2                     u3330:
  3082   000DC2                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  3085   000DC2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3086   000DC4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3087   000DC6                     l3097:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  3090   000DC6  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3091   000DCA  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3092   000DCE  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3093   000DD2  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3094   000DD6                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  3096   000DD6  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3097   000DDA  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3098   000DDE                     
  3099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  3100   000DDE  0E00               	movlw	0
  3101   000DE0  0100               	movlb	0	; () banked
  3102   000DE2  6F68               	movwf	efgtoa@pp& (0+255),b
  3103   000DE4                     
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  3106   000DE4  0E00               	movlw	0
  3107   000DE6  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3108   000DE8  0E00               	movlw	0
  3109   000DEA  6F64               	movwf	efgtoa@t& (0+255),b
  3110   000DEC                     
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  3113   000DEC  0E00               	movlw	0
  3114   000DEE  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3115   000DF0  0E00               	movlw	0
  3116   000DF2  6F77               	movwf	efgtoa@i& (0+255),b
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3119   000DF4  EFE1  F007         	goto	l3147
  3120   000DF8                     l3107:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  3124   000DF8  C079  F001         	movff	efgtoa@h,___fldiv@b
  3125   000DFC  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3126   000E00  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3127   000E04  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3128   000E08  C088  F005         	movff	efgtoa@u,___fldiv@a
  3129   000E0C  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3130   000E10  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3131   000E14  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3132   000E18  ECD1  F00C         	call	___fldiv	;wreg free
  3133   000E1C  C001  F01A         	movff	?___fldiv,floorf@x
  3134   000E20  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3135   000E24  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3136   000E28  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3137   000E2C  EC8B  F011         	call	_floorf	;wreg free
  3138   000E30  C01A  F07D         	movff	?_floorf,efgtoa@l
  3139   000E34  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  3140   000E38  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  3141   000E3C  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3144   000E40  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3145   000E44  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3146   000E48  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3147   000E4C  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3148   000E50  EC6E  F013         	call	___fltol	;wreg free
  3149   000E54  BE02               	btfsc	(?___fltol+1)^0,7,c
  3150   000E56  EF38  F007         	goto	u3340
  3151   000E5A  5002               	movf	(?___fltol+1)^0,w,c
  3152   000E5C  E107               	bnz	u3341
  3153   000E5E  0E0A               	movlw	10
  3154   000E60  5C01               	subwf	?___fltol^0,w,c
  3155   000E62  B0D8               	btfsc	status,0,c
  3156   000E64  EF36  F007         	goto	u3341
  3157   000E68  EF38  F007         	goto	u3340
  3158   000E6C                     u3341:
  3159   000E6C  EF48  F007         	goto	l3111
  3160   000E70                     u3340:
  3161   000E70  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3162   000E74  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3163   000E78  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3164   000E7C  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3165   000E80  EC6E  F013         	call	___fltol	;wreg free
  3166   000E84  C001  F06B         	movff	?___fltol,efgtoa@d
  3167   000E88  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3168   000E8C  EF4D  F007         	goto	l859
  3169   000E90                     l3111:
  3170   000E90  0E00               	movlw	0
  3171   000E92  0100               	movlb	0	; () banked
  3172   000E94  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3173   000E96  0E09               	movlw	9
  3174   000E98  6F6B               	movwf	efgtoa@d& (0+255),b
  3175   000E9A                     l859:
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  3178   000E9A  0100               	movlb	0	; () banked
  3179   000E9C  5168               	movf	efgtoa@pp& (0+255),w,b
  3180   000E9E  A4D8               	btfss	status,2,c
  3181   000EA0  EF54  F007         	goto	u3351
  3182   000EA4  EF56  F007         	goto	u3350
  3183   000EA8                     u3351:
  3184   000EA8  EF7E  F007         	goto	l3131
  3185   000EAC                     u3350:
  3186   000EAC                     
  3187                           ; BSR set to: 0
  3188   000EAC  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3189   000EAE  EF5D  F007         	goto	u3360
  3190   000EB2  EF5B  F007         	goto	u3361
  3191   000EB6                     u3361:
  3192   000EB6  EF7E  F007         	goto	l3131
  3193   000EBA                     u3360:
  3194   000EBA                     
  3195                           ; BSR set to: 0
  3196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  3197   000EBA  0E50               	movlw	low _dbuf
  3198   000EBC  2582               	addwf	efgtoa@n& (0+255),w,b
  3199   000EBE  6ED9               	movwf	fsr2l,c
  3200   000EC0  0E01               	movlw	high _dbuf
  3201   000EC2  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3202   000EC4  6EDA               	movwf	fsr2h,c
  3203   000EC6  0E2E               	movlw	46
  3204   000EC8  6EDF               	movwf	indf2,c
  3205   000ECA                     
  3206                           ; BSR set to: 0
  3207   000ECA  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3208   000ECC  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3209   000ECE                     
  3210                           ; BSR set to: 0
  3211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  3212   000ECE  0771               	decf	efgtoa@w& (0+255),f,b
  3213   000ED0  A0D8               	btfss	status,0,c
  3214   000ED2  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3215   000ED4                     
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  3218   000ED4  0E01               	movlw	1
  3219   000ED6  6F68               	movwf	efgtoa@pp& (0+255),b
  3220   000ED8  EF7E  F007         	goto	l3131
  3221   000EDC                     l3123:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  3225   000EDC  0E50               	movlw	low _dbuf
  3226   000EDE  2582               	addwf	efgtoa@n& (0+255),w,b
  3227   000EE0  6ED9               	movwf	fsr2l,c
  3228   000EE2  0E01               	movlw	high _dbuf
  3229   000EE4  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3230   000EE6  6EDA               	movwf	fsr2h,c
  3231   000EE8  0E30               	movlw	48
  3232   000EEA  6EDF               	movwf	indf2,c
  3233   000EEC                     
  3234                           ; BSR set to: 0
  3235   000EEC  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3236   000EEE  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3237   000EF0                     
  3238                           ; BSR set to: 0
  3239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  3240   000EF0  0771               	decf	efgtoa@w& (0+255),f,b
  3241   000EF2  A0D8               	btfss	status,0,c
  3242   000EF4  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3243   000EF6                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  3246   000EF6  0764               	decf	efgtoa@t& (0+255),f,b
  3247   000EF8  A0D8               	btfss	status,0,c
  3248   000EFA  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3249   000EFC                     l3131:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  3253   000EFC  5164               	movf	efgtoa@t& (0+255),w,b
  3254   000EFE  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3255   000F00  A4D8               	btfss	status,2,c
  3256   000F02  EF85  F007         	goto	u3371
  3257   000F06  EF87  F007         	goto	u3370
  3258   000F0A                     u3371:
  3259   000F0A  EF6E  F007         	goto	l3123
  3260   000F0E                     u3370:
  3261   000F0E                     
  3262                           ; BSR set to: 0
  3263                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3264   000F0E  0E50               	movlw	low _dbuf
  3265   000F10  2582               	addwf	efgtoa@n& (0+255),w,b
  3266   000F12  6ED9               	movwf	fsr2l,c
  3267   000F14  0E01               	movlw	high _dbuf
  3268   000F16  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3269   000F18  6EDA               	movwf	fsr2h,c
  3270   000F1A  516B               	movf	efgtoa@d& (0+255),w,b
  3271   000F1C  0F30               	addlw	48
  3272   000F1E  6EDF               	movwf	indf2,c
  3273   000F20                     
  3274                           ; BSR set to: 0
  3275   000F20  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3276   000F22  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3277   000F24                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  3280   000F24  0771               	decf	efgtoa@w& (0+255),f,b
  3281   000F26  A0D8               	btfss	status,0,c
  3282   000F28  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3283   000F2A                     
  3284                           ; BSR set to: 0
  3285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  3286   000F2A  C079  F028         	movff	efgtoa@h,___flsub@b
  3287   000F2E  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3288   000F32  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3289   000F36  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3290   000F3A  C07D  F013         	movff	efgtoa@l,___flmul@a
  3291   000F3E  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3292   000F42  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3293   000F46  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  3294   000F4A  C088  F00F         	movff	efgtoa@u,___flmul@b
  3295   000F4E  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3296   000F52  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3297   000F56  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3298   000F5A  ECBC  F00A         	call	___flmul	;wreg free
  3299   000F5E  C00F  F02C         	movff	?___flmul,___flsub@a
  3300   000F62  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3301   000F66  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3302   000F6A  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3303   000F6E  EC89  F017         	call	___flsub	;wreg free
  3304   000F72  C028  F079         	movff	?___flsub,efgtoa@h
  3305   000F76  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  3306   000F7A  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  3307   000F7E  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  3308   000F82                     
  3309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  3310   000F82  C088  F001         	movff	efgtoa@u,___fldiv@b
  3311   000F86  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3312   000F8A  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3313   000F8E  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3314   000F92  0E00               	movlw	0
  3315   000F94  6E05               	movwf	___fldiv@a^0,c
  3316   000F96  0E00               	movlw	0
  3317   000F98  6E06               	movwf	(___fldiv@a+1)^0,c
  3318   000F9A  0E20               	movlw	32
  3319   000F9C  6E07               	movwf	(___fldiv@a+2)^0,c
  3320   000F9E  0E41               	movlw	65
  3321   000FA0  6E08               	movwf	(___fldiv@a+3)^0,c
  3322   000FA2  ECD1  F00C         	call	___fldiv	;wreg free
  3323   000FA6  C001  F088         	movff	?___fldiv,efgtoa@u
  3324   000FAA  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3325   000FAE  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3326   000FB2  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3327   000FB6                     
  3328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  3329   000FB6  0100               	movlb	0	; () banked
  3330   000FB8  0760               	decf	efgtoa@ne& (0+255),f,b
  3331   000FBA  A0D8               	btfss	status,0,c
  3332   000FBC  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3333   000FBE                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  3336   000FBE  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3337   000FC0  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3338   000FC2                     l3147:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3342   000FC2  516D               	movf	efgtoa@m& (0+255),w,b
  3343   000FC4  5D77               	subwf	efgtoa@i& (0+255),w,b
  3344   000FC6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3345   000FC8  0A80               	xorlw	128
  3346   000FCA  6E3B               	movwf	??_efgtoa^0,c
  3347   000FCC  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3348   000FCE  0A80               	xorlw	128
  3349   000FD0  583B               	subwfb	??_efgtoa^0,w,c
  3350   000FD2  B0D8               	btfsc	status,0,c
  3351   000FD4  EFEE  F007         	goto	u3381
  3352   000FD8  EFF0  F007         	goto	u3380
  3353   000FDC                     u3381:
  3354   000FDC  EFFE  F007         	goto	l3151
  3355   000FE0                     u3380:
  3356   000FE0                     
  3357                           ; BSR set to: 0
  3358   000FE0  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3359   000FE2  EFFC  F007         	goto	u3391
  3360   000FE6  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3361   000FE8  E109               	bnz	u3390
  3362   000FEA  0E4B               	movlw	75
  3363   000FEC  5D82               	subwf	efgtoa@n& (0+255),w,b
  3364   000FEE  A0D8               	btfss	status,0,c
  3365   000FF0  EFFC  F007         	goto	u3391
  3366   000FF4  EFFE  F007         	goto	u3390
  3367   000FF8                     u3391:
  3368   000FF8  EFFC  F006         	goto	l3107
  3369   000FFC                     u3390:
  3370   000FFC                     l3151:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  3374   000FFC  0E00               	movlw	0
  3375   000FFE  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3376   001000  0E4F               	movlw	79
  3377   001002  6F77               	movwf	efgtoa@i& (0+255),b
  3378   001004                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  3381   001004  0E50               	movlw	low _dbuf
  3382   001006  2577               	addwf	efgtoa@i& (0+255),w,b
  3383   001008  6ED9               	movwf	fsr2l,c
  3384   00100A  0E01               	movlw	high _dbuf
  3385   00100C  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3386   00100E  6EDA               	movwf	fsr2h,c
  3387   001010  6ADF               	clrf	indf2,c
  3388   001012                     
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3391   001012  0E50               	movlw	low _dbuf
  3392   001014  6E3B               	movwf	??_efgtoa^0,c
  3393   001016  0E01               	movlw	high _dbuf
  3394   001018  6E3C               	movwf	(??_efgtoa+1)^0,c
  3395   00101A  5182               	movf	efgtoa@n& (0+255),w,b
  3396   00101C  5E3B               	subwf	??_efgtoa^0,f,c
  3397   00101E  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3398   001020  5A3C               	subwfb	(??_efgtoa+1)^0,f,c
  3399   001022  5177               	movf	efgtoa@i& (0+255),w,b
  3400   001024  243B               	addwf	??_efgtoa^0,w,c
  3401   001026  6E01               	movwf	memcpy@d1^0,c
  3402   001028  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3403   00102A  203C               	addwfc	(??_efgtoa+1)^0,w,c
  3404   00102C  6E02               	movwf	(memcpy@d1+1)^0,c
  3405   00102E  0E50               	movlw	low _dbuf
  3406   001030  6E03               	movwf	memcpy@s1^0,c
  3407   001032  0E01               	movlw	high _dbuf
  3408   001034  6E04               	movwf	(memcpy@s1+1)^0,c
  3409   001036  C082  F005         	movff	efgtoa@n,memcpy@n
  3410   00103A  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  3411   00103E  EC3B  F017         	call	_memcpy	;wreg free
  3412   001042                     
  3413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  3414   001042  0100               	movlb	0	; () banked
  3415   001044  5182               	movf	efgtoa@n& (0+255),w,b
  3416   001046  5D77               	subwf	efgtoa@i& (0+255),w,b
  3417   001048  6F82               	movwf	efgtoa@n& (0+255),b
  3418   00104A  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3419   00104C  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3420   00104E  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3421   001050                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  3424   001050  5181               	movf	efgtoa@sign& (0+255),w,b
  3425   001052  A4D8               	btfss	status,2,c
  3426   001054  EF2E  F008         	goto	u3401
  3427   001058  EF31  F008         	goto	u3400
  3428   00105C                     u3401:
  3429   00105C  0E01               	movlw	1
  3430   00105E  EF32  F008         	goto	u3410
  3431   001062                     u3400:
  3432   001062  0E00               	movlw	0
  3433   001064                     u3410:
  3434   001064  6F77               	movwf	efgtoa@i& (0+255),b
  3435   001066  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3436   001068                     
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3439   001068  5181               	movf	efgtoa@sign& (0+255),w,b
  3440   00106A  B4D8               	btfsc	status,2,c
  3441   00106C  EF3A  F008         	goto	u3421
  3442   001070  EF3C  F008         	goto	u3420
  3443   001074                     u3421:
  3444   001074  EF47  F008         	goto	l3165
  3445   001078                     u3420:
  3446   001078                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3449   001078  0782               	decf	efgtoa@n& (0+255),f,b
  3450   00107A  A0D8               	btfss	status,0,c
  3451   00107C  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3452   00107E  0E50               	movlw	low _dbuf
  3453   001080  2582               	addwf	efgtoa@n& (0+255),w,b
  3454   001082  6ED9               	movwf	fsr2l,c
  3455   001084  0E01               	movlw	high _dbuf
  3456   001086  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3457   001088  6EDA               	movwf	fsr2h,c
  3458   00108A  C081  FFDF         	movff	efgtoa@sign,indf2
  3459   00108E                     l3165:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3463   00108E  5177               	movf	efgtoa@i& (0+255),w,b
  3464   001090  5F71               	subwf	efgtoa@w& (0+255),f,b
  3465   001092  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3466   001094  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3467   001096                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3470   001096  C034  F011         	movff	efgtoa@fp,pad@fp
  3471   00109A  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  3472   00109E  0E50               	movlw	low _dbuf
  3473   0010A0  2582               	addwf	efgtoa@n& (0+255),w,b
  3474   0010A2  6E13               	movwf	pad@buf^0,c
  3475   0010A4  0E01               	movlw	high _dbuf
  3476   0010A6  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3477   0010A8  6E14               	movwf	(pad@buf+1)^0,c
  3478   0010AA  C071  F015         	movff	efgtoa@w,pad@p
  3479   0010AE  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3480   0010B2  ECBA  F015         	call	_pad	;wreg free
  3481   0010B6                     l826:
  3482   0010B6  0012               	return		;funcret
  3483   0010B8                     __end_of_efgtoa:
  3484                           	callstack 0
  3485                           
  3486 ;; *************** function _strcpy *****************
  3487 ;; Defined at:
  3488 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3491 ;;		 -> dbuf(80), 
  3492 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3493 ;;		 -> STR_8(4), STR_5(4), 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  d               2    6[COMRAM] PTR unsigned char 
  3496 ;;		 -> dbuf(80), 
  3497 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3498 ;;		 -> STR_8(4), STR_5(4), 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  2    0[COMRAM] PTR unsigned char 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3508 ;;      Params:         4       0       0       0       0       0       0
  3509 ;;      Locals:         4       0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0
  3511 ;;      Totals:         8       0       0       0       0       0       0
  3512 ;;Total ram usage:        8 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_efgtoa
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text7
  3522   002F9C                     __ptext7:
  3523                           	callstack 0
  3524   002F9C                     _strcpy:
  3525                           	callstack 26
  3526   002F9C  C003  F005         	movff	strcpy@src,strcpy@s
  3527   002FA0  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3528   002FA4  C001  F007         	movff	strcpy@dest,strcpy@d
  3529   002FA8  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3530   002FAC                     l2895:
  3531   002FAC  C005  FFF6         	movff	strcpy@s,tblptrl
  3532   002FB0  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3533   002FB4  4A05               	infsnz	strcpy@s^0,f,c
  3534   002FB6  2A06               	incf	(strcpy@s+1)^0,f,c
  3535   002FB8                     	if	0	;tblptru may be non-zero
  3536   002FB8                     	endif
  3537   002FB8                     	if	0	;tblptru may be non-zero
  3538   002FB8                     	endif
  3539   002FB8  C007  FFD9         	movff	strcpy@d,fsr2l
  3540   002FBC  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3541   002FC0  4A07               	infsnz	strcpy@d^0,f,c
  3542   002FC2  2A08               	incf	(strcpy@d+1)^0,f,c
  3543   002FC4  0008               	tblrd		*
  3544   002FC6  CFF5 FFDF          	movff	tablat,indf2
  3545   002FCA  50DF               	movf	indf2,w,c
  3546   002FCC  A4D8               	btfss	status,2,c
  3547   002FCE  EFEB  F017         	goto	u2961
  3548   002FD2  EFED  F017         	goto	u2960
  3549   002FD6                     u2961:
  3550   002FD6  EFD6  F017         	goto	l2895
  3551   002FDA                     u2960:
  3552   002FDA  0012               	return		;funcret
  3553   002FDC                     __end_of_strcpy:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _pad *****************
  3557 ;; Defined at:
  3558 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3561 ;;		 -> sprintf@f(12), 
  3562 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3563 ;;		 -> dbuf(80), 
  3564 ;;  p               2   20[COMRAM] int 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  w               2   25[COMRAM] int 
  3567 ;;  i               2   23[COMRAM] int 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3577 ;;      Params:         6       0       0       0       0       0       0
  3578 ;;      Locals:         4       0       0       0       0       0       0
  3579 ;;      Temps:          1       0       0       0       0       0       0
  3580 ;;      Totals:        11       0       0       0       0       0       0
  3581 ;;Total ram usage:       11 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 3
  3584 ;; This function calls:
  3585 ;;		_fputc
  3586 ;;		_fputs
  3587 ;; This function is called by:
  3588 ;;		_efgtoa
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text8
  3593   002B74                     __ptext8:
  3594                           	callstack 0
  3595   002B74                     _pad:
  3596                           	callstack 23
  3597   002B74                     
  3598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  3599   002B74  A05C               	btfss	_flags^0,0,c
  3600   002B76  EFBF  F015         	goto	u2851
  3601   002B7A  EFC1  F015         	goto	u2850
  3602   002B7E                     u2851:
  3603   002B7E  EFCB  F015         	goto	l2857
  3604   002B82                     u2850:
  3605   002B82                     
  3606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  3607   002B82  C013  F00A         	movff	pad@buf,fputs@s
  3608   002B86  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3609   002B8A  C011  F00C         	movff	pad@fp,fputs@fp
  3610   002B8E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3611   002B92  ECAC  F017         	call	_fputs	;wreg free
  3612   002B96                     l2857:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  3615   002B96  BE16               	btfsc	(pad@p+1)^0,7,c
  3616   002B98  EFD0  F015         	goto	u2861
  3617   002B9C  EFD2  F015         	goto	u2860
  3618   002BA0                     u2861:
  3619   002BA0  EFD8  F015         	goto	l2861
  3620   002BA4                     u2860:
  3621   002BA4  C015  F01A         	movff	pad@p,pad@w
  3622   002BA8  C016  F01B         	movff	pad@p+1,pad@w+1
  3623   002BAC  EFDC  F015         	goto	l810
  3624   002BB0                     l2861:
  3625   002BB0  0E00               	movlw	0
  3626   002BB2  6E1B               	movwf	(pad@w+1)^0,c
  3627   002BB4  0E00               	movlw	0
  3628   002BB6  6E1A               	movwf	pad@w^0,c
  3629   002BB8                     l810:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3632   002BB8  0E00               	movlw	0
  3633   002BBA  6E19               	movwf	(pad@i+1)^0,c
  3634   002BBC  0E00               	movlw	0
  3635   002BBE  6E18               	movwf	pad@i^0,c
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3638   002BC0  EFEE  F015         	goto	l2867
  3639   002BC4                     l2863:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3642   002BC4  0E00               	movlw	0
  3643   002BC6  6E02               	movwf	(fputc@c+1)^0,c
  3644   002BC8  0E20               	movlw	32
  3645   002BCA  6E01               	movwf	fputc@c^0,c
  3646   002BCC  C011  F003         	movff	pad@fp,fputc@fp
  3647   002BD0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3648   002BD4  ECF2  F014         	call	_fputc	;wreg free
  3649   002BD8                     
  3650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3651   002BD8  4A18               	infsnz	pad@i^0,f,c
  3652   002BDA  2A19               	incf	(pad@i+1)^0,f,c
  3653   002BDC                     l2867:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3656   002BDC  501A               	movf	pad@w^0,w,c
  3657   002BDE  5C18               	subwf	pad@i^0,w,c
  3658   002BE0  5019               	movf	(pad@i+1)^0,w,c
  3659   002BE2  0A80               	xorlw	128
  3660   002BE4  6E17               	movwf	??_pad^0,c
  3661   002BE6  501B               	movf	(pad@w+1)^0,w,c
  3662   002BE8  0A80               	xorlw	128
  3663   002BEA  5817               	subwfb	??_pad^0,w,c
  3664   002BEC  A0D8               	btfss	status,0,c
  3665   002BEE  EFFB  F015         	goto	u2871
  3666   002BF2  EFFD  F015         	goto	u2870
  3667   002BF6                     u2871:
  3668   002BF6  EFE2  F015         	goto	l2863
  3669   002BFA                     u2870:
  3670   002BFA                     
  3671                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  3672   002BFA  B05C               	btfsc	_flags^0,0,c
  3673   002BFC  EF02  F016         	goto	u2881
  3674   002C00  EF04  F016         	goto	u2880
  3675   002C04                     u2881:
  3676   002C04  EF0E  F016         	goto	l815
  3677   002C08                     u2880:
  3678   002C08                     
  3679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3680   002C08  C013  F00A         	movff	pad@buf,fputs@s
  3681   002C0C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3682   002C10  C011  F00C         	movff	pad@fp,fputs@fp
  3683   002C14  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3684   002C18  ECAC  F017         	call	_fputs	;wreg free
  3685   002C1C                     l815:
  3686   002C1C  0012               	return		;funcret
  3687   002C1E                     __end_of_pad:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function _fputs *****************
  3691 ;; Defined at:
  3692 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3695 ;;		 -> dbuf(80), 
  3696 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3697 ;;		 -> sprintf@f(12), 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  i               2   14[COMRAM] int 
  3700 ;;  c               1   13[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  2    9[COMRAM] int 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3710 ;;      Params:         4       0       0       0       0       0       0
  3711 ;;      Locals:         3       0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0
  3713 ;;      Totals:         7       0       0       0       0       0       0
  3714 ;;Total ram usage:        7 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 2
  3717 ;; This function calls:
  3718 ;;		_fputc
  3719 ;; This function is called by:
  3720 ;;		_pad
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text9
  3725   002F58                     __ptext9:
  3726                           	callstack 0
  3727   002F58                     _fputs:
  3728                           	callstack 23
  3729   002F58  0E00               	movlw	0
  3730   002F5A  6E10               	movwf	(fputs@i+1)^0,c
  3731   002F5C  0E00               	movlw	0
  3732   002F5E  6E0F               	movwf	fputs@i^0,c
  3733   002F60  EFBD  F017         	goto	l2481
  3734   002F64                     l2477:
  3735   002F64  C00E  F001         	movff	fputs@c,fputc@c
  3736   002F68  6A02               	clrf	(fputc@c+1)^0,c
  3737   002F6A  C00C  F003         	movff	fputs@fp,fputc@fp
  3738   002F6E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3739   002F72  ECF2  F014         	call	_fputc	;wreg free
  3740   002F76  4A0F               	infsnz	fputs@i^0,f,c
  3741   002F78  2A10               	incf	(fputs@i+1)^0,f,c
  3742   002F7A                     l2481:
  3743   002F7A  500F               	movf	fputs@i^0,w,c
  3744   002F7C  240A               	addwf	fputs@s^0,w,c
  3745   002F7E  6ED9               	movwf	fsr2l,c
  3746   002F80  5010               	movf	(fputs@i+1)^0,w,c
  3747   002F82  200B               	addwfc	(fputs@s+1)^0,w,c
  3748   002F84  6EDA               	movwf	fsr2h,c
  3749   002F86  50DF               	movf	indf2,w,c
  3750   002F88  6E0E               	movwf	fputs@c^0,c
  3751   002F8A  500E               	movf	fputs@c^0,w,c
  3752   002F8C  A4D8               	btfss	status,2,c
  3753   002F8E  EFCB  F017         	goto	u2261
  3754   002F92  EFCD  F017         	goto	u2260
  3755   002F96                     u2261:
  3756   002F96  EFB2  F017         	goto	l2477
  3757   002F9A                     u2260:
  3758   002F9A  0012               	return		;funcret
  3759   002F9C                     __end_of_fputs:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _fputc *****************
  3763 ;; Defined at:
  3764 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  c               2    0[COMRAM] int 
  3767 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3768 ;;		 -> sprintf@f(12), 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  2    0[COMRAM] int 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3780 ;;      Params:         4       0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0
  3782 ;;      Temps:          5       0       0       0       0       0       0
  3783 ;;      Totals:         9       0       0       0       0       0       0
  3784 ;;Total ram usage:        9 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 1
  3787 ;; This function calls:
  3788 ;;		_putch
  3789 ;; This function is called by:
  3790 ;;		_pad
  3791 ;;		_vfpfcnvrt
  3792 ;;		_fputs
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text10
  3797   0029E4                     __ptext10:
  3798                           	callstack 0
  3799   0029E4                     _fputc:
  3800                           	callstack 26
  3801   0029E4  5003               	movf	fputc@fp^0,w,c
  3802   0029E6  1004               	iorwf	(fputc@fp+1)^0,w,c
  3803   0029E8  B4D8               	btfsc	status,2,c
  3804   0029EA  EFF9  F014         	goto	u1831
  3805   0029EE  EFFB  F014         	goto	u1830
  3806   0029F2                     u1831:
  3807   0029F2  EF04  F015         	goto	l2263
  3808   0029F6                     u1830:
  3809   0029F6  5003               	movf	fputc@fp^0,w,c
  3810   0029F8  1004               	iorwf	(fputc@fp+1)^0,w,c
  3811   0029FA  A4D8               	btfss	status,2,c
  3812   0029FC  EF02  F015         	goto	u1841
  3813   002A00  EF04  F015         	goto	u1840
  3814   002A04                     u1841:
  3815   002A04  EF09  F015         	goto	l2265
  3816   002A08                     u1840:
  3817   002A08                     l2263:
  3818   002A08  5001               	movf	fputc@c^0,w,c
  3819   002A0A  EC9C  F018         	call	_putch
  3820   002A0E  EF56  F015         	goto	l952
  3821   002A12                     l2265:
  3822   002A12  EE20 F00A          	lfsr	2,10
  3823   002A16  5003               	movf	fputc@fp^0,w,c
  3824   002A18  26D9               	addwf	fsr2l,f,c
  3825   002A1A  5004               	movf	(fputc@fp+1)^0,w,c
  3826   002A1C  22DA               	addwfc	fsr2h,f,c
  3827   002A1E  50DE               	movf	postinc2,w,c
  3828   002A20  10DE               	iorwf	postinc2,w,c
  3829   002A22  B4D8               	btfsc	status,2,c
  3830   002A24  EF16  F015         	goto	u1851
  3831   002A28  EF18  F015         	goto	u1850
  3832   002A2C                     u1851:
  3833   002A2C  EF33  F015         	goto	l2269
  3834   002A30                     u1850:
  3835   002A30  EE20 F00A          	lfsr	2,10
  3836   002A34  5003               	movf	fputc@fp^0,w,c
  3837   002A36  26D9               	addwf	fsr2l,f,c
  3838   002A38  5004               	movf	(fputc@fp+1)^0,w,c
  3839   002A3A  22DA               	addwfc	fsr2h,f,c
  3840   002A3C  EE10 F003          	lfsr	1,3
  3841   002A40  5003               	movf	fputc@fp^0,w,c
  3842   002A42  26E1               	addwf	fsr1l,f,c
  3843   002A44  5004               	movf	(fputc@fp+1)^0,w,c
  3844   002A46  22E2               	addwfc	fsr1h,f,c
  3845   002A48  50DE               	movf	postinc2,w,c
  3846   002A4A  5CE6               	subwf	postinc1,w,c
  3847   002A4C  50E6               	movf	postinc1,w,c
  3848   002A4E  0A80               	xorlw	128
  3849   002A50  6E09               	movwf	(??_fputc+4)^0,c
  3850   002A52  50DE               	movf	postinc2,w,c
  3851   002A54  0A80               	xorlw	128
  3852   002A56  5809               	subwfb	(??_fputc+4)^0,w,c
  3853   002A58  B0D8               	btfsc	status,0,c
  3854   002A5A  EF31  F015         	goto	u1861
  3855   002A5E  EF33  F015         	goto	u1860
  3856   002A62                     u1861:
  3857   002A62  EF56  F015         	goto	l952
  3858   002A66                     u1860:
  3859   002A66                     l2269:
  3860   002A66  EE20 F003          	lfsr	2,3
  3861   002A6A  5003               	movf	fputc@fp^0,w,c
  3862   002A6C  26D9               	addwf	fsr2l,f,c
  3863   002A6E  5004               	movf	(fputc@fp+1)^0,w,c
  3864   002A70  22DA               	addwfc	fsr2h,f,c
  3865   002A72  CFDE F005          	movff	postinc2,??_fputc
  3866   002A76  CFDD F006          	movff	postdec2,??_fputc+1
  3867   002A7A  C003  FFD9         	movff	fputc@fp,fsr2l
  3868   002A7E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3869   002A82  CFDE F007          	movff	postinc2,??_fputc+2
  3870   002A86  CFDD F008          	movff	postdec2,??_fputc+3
  3871   002A8A  5005               	movf	??_fputc^0,w,c
  3872   002A8C  2407               	addwf	(??_fputc+2)^0,w,c
  3873   002A8E  6ED9               	movwf	fsr2l,c
  3874   002A90  5006               	movf	(??_fputc+1)^0,w,c
  3875   002A92  2008               	addwfc	(??_fputc+3)^0,w,c
  3876   002A94  6EDA               	movwf	fsr2h,c
  3877   002A96  C001  FFDF         	movff	fputc@c,indf2
  3878   002A9A  EE20 F003          	lfsr	2,3
  3879   002A9E  5003               	movf	fputc@fp^0,w,c
  3880   002AA0  26D9               	addwf	fsr2l,f,c
  3881   002AA2  5004               	movf	(fputc@fp+1)^0,w,c
  3882   002AA4  22DA               	addwfc	fsr2h,f,c
  3883   002AA6  2ADE               	incf	postinc2,f,c
  3884   002AA8  0E00               	movlw	0
  3885   002AAA  22DD               	addwfc	postdec2,f,c
  3886   002AAC                     l952:
  3887   002AAC  0012               	return		;funcret
  3888   002AAE                     __end_of_fputc:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _putch *****************
  3892 ;; Defined at:
  3893 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  c               1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  c               1    0[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3907 ;;      Params:         0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_fputc
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text11
  3921   003138                     __ptext11:
  3922                           	callstack 0
  3923   003138                     _putch:
  3924                           	callstack 26
  3925   003138  0012               	return		;funcret
  3926   00313A                     __end_of_putch:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _memcpy *****************
  3930 ;; Defined at:
  3931 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  d1              2    0[COMRAM] PTR void 
  3934 ;;		 -> dbuf(80), 
  3935 ;;  s1              2    2[COMRAM] PTR const void 
  3936 ;;		 -> dbuf(80), 
  3937 ;;  n               2    4[COMRAM] unsigned int 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3940 ;;		 -> dbuf(80), 
  3941 ;;  d               2    6[COMRAM] PTR unsigned char 
  3942 ;;		 -> dbuf(80), 
  3943 ;;  tmp             1   10[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  2    0[COMRAM] PTR void 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3953 ;;      Params:         6       0       0       0       0       0       0
  3954 ;;      Locals:         5       0       0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0
  3956 ;;      Totals:        11       0       0       0       0       0       0
  3957 ;;Total ram usage:       11 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_efgtoa
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text12
  3967   002E76                     __ptext12:
  3968                           	callstack 0
  3969   002E76                     _memcpy:
  3970                           	callstack 26
  3971   002E76  C003  F009         	movff	memcpy@s1,memcpy@s
  3972   002E7A  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3973   002E7E  C001  F007         	movff	memcpy@d1,memcpy@d
  3974   002E82  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3975   002E86  EF55  F017         	goto	l2939
  3976   002E8A                     l2931:
  3977   002E8A  C009  FFD9         	movff	memcpy@s,fsr2l
  3978   002E8E  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3979   002E92  50DF               	movf	indf2,w,c
  3980   002E94  6E0B               	movwf	memcpy@tmp^0,c
  3981   002E96  4A09               	infsnz	memcpy@s^0,f,c
  3982   002E98  2A0A               	incf	(memcpy@s+1)^0,f,c
  3983   002E9A  C007  FFD9         	movff	memcpy@d,fsr2l
  3984   002E9E  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3985   002EA2  C00B  FFDF         	movff	memcpy@tmp,indf2
  3986   002EA6  4A07               	infsnz	memcpy@d^0,f,c
  3987   002EA8  2A08               	incf	(memcpy@d+1)^0,f,c
  3988   002EAA                     l2939:
  3989   002EAA  0605               	decf	memcpy@n^0,f,c
  3990   002EAC  A0D8               	btfss	status,0,c
  3991   002EAE  0606               	decf	(memcpy@n+1)^0,f,c
  3992   002EB0  2805               	incf	memcpy@n^0,w,c
  3993   002EB2  E106               	bnz	u3081
  3994   002EB4  2806               	incf	(memcpy@n+1)^0,w,c
  3995   002EB6  A4D8               	btfss	status,2,c
  3996   002EB8  EF60  F017         	goto	u3081
  3997   002EBC  EF62  F017         	goto	u3080
  3998   002EC0                     u3081:
  3999   002EC0  EF45  F017         	goto	l2931
  4000   002EC4                     u3080:
  4001   002EC4  0012               	return		;funcret
  4002   002EC6                     __end_of_memcpy:
  4003                           	callstack 0
  4004                           
  4005 ;; *************** function _labs *****************
  4006 ;; Defined at:
  4007 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  a               4    0[COMRAM] long 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  4    0[COMRAM] long 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4021 ;;      Params:         4       0       0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0       0       0
  4023 ;;      Temps:          4       0       0       0       0       0       0
  4024 ;;      Totals:         8       0       0       0       0       0       0
  4025 ;;Total ram usage:        8 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_efgtoa
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text13
  4035   002D6E                     __ptext13:
  4036                           	callstack 0
  4037   002D6E                     _labs:
  4038                           	callstack 26
  4039   002D6E  BE04               	btfsc	(labs@a+3)^0,7,c
  4040   002D70  EFC6  F016         	goto	u2970
  4041   002D74  5004               	movf	(labs@a+3)^0,w,c
  4042   002D76  1003               	iorwf	(labs@a+2)^0,w,c
  4043   002D78  1002               	iorwf	(labs@a+1)^0,w,c
  4044   002D7A  E106               	bnz	u2971
  4045   002D7C  0401               	decf	labs@a^0,w,c
  4046   002D7E  B0D8               	btfsc	status,0,c
  4047   002D80  EFC4  F016         	goto	u2971
  4048   002D84  EFC6  F016         	goto	u2970
  4049   002D88                     u2971:
  4050   002D88  EFE1  F016         	goto	l931
  4051   002D8C                     u2970:
  4052   002D8C  C001  F005         	movff	labs@a,??_labs
  4053   002D90  C002  F006         	movff	labs@a+1,??_labs+1
  4054   002D94  C003  F007         	movff	labs@a+2,??_labs+2
  4055   002D98  C004  F008         	movff	labs@a+3,??_labs+3
  4056   002D9C  1E05               	comf	??_labs^0,f,c
  4057   002D9E  1E06               	comf	(??_labs+1)^0,f,c
  4058   002DA0  1E07               	comf	(??_labs+2)^0,f,c
  4059   002DA2  1E08               	comf	(??_labs+3)^0,f,c
  4060   002DA4  2A05               	incf	??_labs^0,f,c
  4061   002DA6  0E00               	movlw	0
  4062   002DA8  2206               	addwfc	(??_labs+1)^0,f,c
  4063   002DAA  2207               	addwfc	(??_labs+2)^0,f,c
  4064   002DAC  2208               	addwfc	(??_labs+3)^0,f,c
  4065   002DAE  C005  F001         	movff	??_labs,?_labs
  4066   002DB2  C006  F002         	movff	??_labs+1,?_labs+1
  4067   002DB6  C007  F003         	movff	??_labs+2,?_labs+2
  4068   002DBA  C008  F004         	movff	??_labs+3,?_labs+3
  4069   002DBE  EFE9  F016         	goto	l934
  4070   002DC2                     l931:
  4071   002DC2  C001  F001         	movff	labs@a,?_labs
  4072   002DC6  C002  F002         	movff	labs@a+1,?_labs+1
  4073   002DCA  C003  F003         	movff	labs@a+2,?_labs+2
  4074   002DCE  C004  F004         	movff	labs@a+3,?_labs+3
  4075   002DD2                     l934:
  4076   002DD2  0012               	return		;funcret
  4077   002DD4                     __end_of_labs:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _floorf *****************
  4081 ;; Defined at:
  4082 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  x               4   25[COMRAM] float 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  u               4   41[COMRAM] struct .
  4087 ;;  m               4   35[COMRAM] unsigned long 
  4088 ;;  e               2   39[COMRAM] int 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  4   25[COMRAM] float 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4098 ;;      Params:         4       0       0       0       0       0       0
  4099 ;;      Locals:        10       0       0       0       0       0       0
  4100 ;;      Temps:          6       0       0       0       0       0       0
  4101 ;;      Totals:        20       0       0       0       0       0       0
  4102 ;;Total ram usage:       20 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_efgtoa
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text14
  4112   002316                     __ptext14:
  4113                           	callstack 0
  4114   002316                     _floorf:
  4115                           	callstack 26
  4116   002316  C0D9  F02A         	movff	floorf@F526,floorf@u
  4117   00231A  C0DA  F02B         	movff	floorf@F526+1,floorf@u+1
  4118   00231E  C0DB  F02C         	movff	floorf@F526+2,floorf@u+2
  4119   002322  C0DC  F02D         	movff	floorf@F526+3,floorf@u+3
  4120   002326  C01A  F02A         	movff	floorf@x,floorf@u
  4121   00232A  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4122   00232E  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4123   002332  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4124   002336  0E81               	movlw	129
  4125   002338  6E1E               	movwf	??_floorf^0,c
  4126   00233A  0EFF               	movlw	255
  4127   00233C  6E1F               	movwf	(??_floorf+1)^0,c
  4128   00233E  C02A  F020         	movff	floorf@u,??_floorf+2
  4129   002342  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4130   002346  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4131   00234A  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4132   00234E  0E18               	movlw	24
  4133   002350  EFAF  F011         	goto	u2980
  4134   002354                     u2985:
  4135   002354  90D8               	bcf	status,0,c
  4136   002356  3223               	rrcf	(??_floorf+5)^0,f,c
  4137   002358  3222               	rrcf	(??_floorf+4)^0,f,c
  4138   00235A  3221               	rrcf	(??_floorf+3)^0,f,c
  4139   00235C  3220               	rrcf	(??_floorf+2)^0,f,c
  4140   00235E                     u2980:
  4141   00235E  2EE8               	decfsz	wreg,f,c
  4142   002360  EFAA  F011         	goto	u2985
  4143   002364  5020               	movf	(??_floorf+2)^0,w,c
  4144   002366  241E               	addwf	??_floorf^0,w,c
  4145   002368  6E28               	movwf	floorf@e^0,c
  4146   00236A  0E00               	movlw	0
  4147   00236C  201F               	addwfc	(??_floorf+1)^0,w,c
  4148   00236E  6E29               	movwf	(floorf@e+1)^0,c
  4149   002370  BE29               	btfsc	(floorf@e+1)^0,7,c
  4150   002372  EFC4  F011         	goto	u2991
  4151   002376  5029               	movf	(floorf@e+1)^0,w,c
  4152   002378  E109               	bnz	u2990
  4153   00237A  0E17               	movlw	23
  4154   00237C  5C28               	subwf	floorf@e^0,w,c
  4155   00237E  A0D8               	btfss	status,0,c
  4156   002380  EFC4  F011         	goto	u2991
  4157   002384  EFC6  F011         	goto	u2990
  4158   002388                     u2991:
  4159   002388  EFD0  F011         	goto	l2907
  4160   00238C                     u2990:
  4161   00238C                     l2905:
  4162   00238C  C01A  F01A         	movff	floorf@x,?_floorf
  4163   002390  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4164   002394  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4165   002398  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4166   00239C  EF93  F012         	goto	l920
  4167   0023A0                     l2907:
  4168   0023A0  BE29               	btfsc	(floorf@e+1)^0,7,c
  4169   0023A2  EFD5  F011         	goto	u3001
  4170   0023A6  EFD7  F011         	goto	u3000
  4171   0023AA                     u3001:
  4172   0023AA  EF47  F012         	goto	l2917
  4173   0023AE                     u3000:
  4174   0023AE  C028  F01E         	movff	floorf@e,??_floorf
  4175   0023B2  0EFF               	movlw	255
  4176   0023B4  6E1F               	movwf	(??_floorf+1)^0,c
  4177   0023B6  0EFF               	movlw	255
  4178   0023B8  6E20               	movwf	(??_floorf+2)^0,c
  4179   0023BA  0E7F               	movlw	127
  4180   0023BC  6E21               	movwf	(??_floorf+3)^0,c
  4181   0023BE  0E00               	movlw	0
  4182   0023C0  6E22               	movwf	(??_floorf+4)^0,c
  4183   0023C2                     u3015:
  4184   0023C2  661E               	tstfsz	??_floorf^0,c
  4185   0023C4  EFE6  F011         	goto	u3016
  4186   0023C8  EFEE  F011         	goto	u3017
  4187   0023CC                     u3016:
  4188   0023CC  3422               	rlcf	(??_floorf+4)^0,w,c
  4189   0023CE  3222               	rrcf	(??_floorf+4)^0,f,c
  4190   0023D0  3221               	rrcf	(??_floorf+3)^0,f,c
  4191   0023D2  3220               	rrcf	(??_floorf+2)^0,f,c
  4192   0023D4  321F               	rrcf	(??_floorf+1)^0,f,c
  4193   0023D6  2E1E               	decfsz	??_floorf^0,f,c
  4194   0023D8  EFE1  F011         	goto	u3015
  4195   0023DC                     u3017:
  4196   0023DC  C01F  F024         	movff	??_floorf+1,floorf@m
  4197   0023E0  C020  F025         	movff	??_floorf+2,floorf@m+1
  4198   0023E4  C021  F026         	movff	??_floorf+3,floorf@m+2
  4199   0023E8  C022  F027         	movff	??_floorf+4,floorf@m+3
  4200   0023EC  5024               	movf	floorf@m^0,w,c
  4201   0023EE  142A               	andwf	floorf@u^0,w,c
  4202   0023F0  6E1E               	movwf	??_floorf^0,c
  4203   0023F2  5025               	movf	(floorf@m+1)^0,w,c
  4204   0023F4  142B               	andwf	(floorf@u+1)^0,w,c
  4205   0023F6  6E1F               	movwf	(??_floorf+1)^0,c
  4206   0023F8  5026               	movf	(floorf@m+2)^0,w,c
  4207   0023FA  142C               	andwf	(floorf@u+2)^0,w,c
  4208   0023FC  6E20               	movwf	(??_floorf+2)^0,c
  4209   0023FE  5027               	movf	(floorf@m+3)^0,w,c
  4210   002400  142D               	andwf	(floorf@u+3)^0,w,c
  4211   002402  6E21               	movwf	(??_floorf+3)^0,c
  4212   002404  501E               	movf	??_floorf^0,w,c
  4213   002406  101F               	iorwf	(??_floorf+1)^0,w,c
  4214   002408  1020               	iorwf	(??_floorf+2)^0,w,c
  4215   00240A  1021               	iorwf	(??_floorf+3)^0,w,c
  4216   00240C  A4D8               	btfss	status,2,c
  4217   00240E  EF0B  F012         	goto	u3021
  4218   002412  EF0D  F012         	goto	u3020
  4219   002416                     u3021:
  4220   002416  EF0F  F012         	goto	l2913
  4221   00241A                     u3020:
  4222   00241A  EFC6  F011         	goto	l2905
  4223   00241E                     l2913:
  4224   00241E  C02A  F01E         	movff	floorf@u,??_floorf
  4225   002422  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4226   002426  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4227   00242A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4228   00242E  0E20               	movlw	32
  4229   002430  EF1F  F012         	goto	u3030
  4230   002434                     u3035:
  4231   002434  90D8               	bcf	status,0,c
  4232   002436  3221               	rrcf	(??_floorf+3)^0,f,c
  4233   002438  3220               	rrcf	(??_floorf+2)^0,f,c
  4234   00243A  321F               	rrcf	(??_floorf+1)^0,f,c
  4235   00243C  321E               	rrcf	??_floorf^0,f,c
  4236   00243E                     u3030:
  4237   00243E  2EE8               	decfsz	wreg,f,c
  4238   002440  EF1A  F012         	goto	u3035
  4239   002444  501E               	movf	??_floorf^0,w,c
  4240   002446  101F               	iorwf	(??_floorf+1)^0,w,c
  4241   002448  1020               	iorwf	(??_floorf+2)^0,w,c
  4242   00244A  1021               	iorwf	(??_floorf+3)^0,w,c
  4243   00244C  B4D8               	btfsc	status,2,c
  4244   00244E  EF2B  F012         	goto	u3041
  4245   002452  EF2D  F012         	goto	u3040
  4246   002456                     u3041:
  4247   002456  EF35  F012         	goto	l923
  4248   00245A                     u3040:
  4249   00245A  5024               	movf	floorf@m^0,w,c
  4250   00245C  262A               	addwf	floorf@u^0,f,c
  4251   00245E  5025               	movf	(floorf@m+1)^0,w,c
  4252   002460  222B               	addwfc	(floorf@u+1)^0,f,c
  4253   002462  5026               	movf	(floorf@m+2)^0,w,c
  4254   002464  222C               	addwfc	(floorf@u+2)^0,f,c
  4255   002466  5027               	movf	(floorf@m+3)^0,w,c
  4256   002468  222D               	addwfc	(floorf@u+3)^0,f,c
  4257   00246A                     l923:
  4258   00246A  1C24               	comf	floorf@m^0,w,c
  4259   00246C  6E1E               	movwf	??_floorf^0,c
  4260   00246E  1C25               	comf	(floorf@m+1)^0,w,c
  4261   002470  6E1F               	movwf	(??_floorf+1)^0,c
  4262   002472  1C26               	comf	(floorf@m+2)^0,w,c
  4263   002474  6E20               	movwf	(??_floorf+2)^0,c
  4264   002476  1C27               	comf	(floorf@m+3)^0,w,c
  4265   002478  6E21               	movwf	(??_floorf+3)^0,c
  4266   00247A  501E               	movf	??_floorf^0,w,c
  4267   00247C  162A               	andwf	floorf@u^0,f,c
  4268   00247E  501F               	movf	(??_floorf+1)^0,w,c
  4269   002480  162B               	andwf	(floorf@u+1)^0,f,c
  4270   002482  5020               	movf	(??_floorf+2)^0,w,c
  4271   002484  162C               	andwf	(floorf@u+2)^0,f,c
  4272   002486  5021               	movf	(??_floorf+3)^0,w,c
  4273   002488  162D               	andwf	(floorf@u+3)^0,f,c
  4274   00248A  EF8B  F012         	goto	l2925
  4275   00248E                     l2917:
  4276   00248E  C02A  F01E         	movff	floorf@u,??_floorf
  4277   002492  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4278   002496  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4279   00249A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4280   00249E  0E20               	movlw	32
  4281   0024A0  EF57  F012         	goto	u3050
  4282   0024A4                     u3055:
  4283   0024A4  90D8               	bcf	status,0,c
  4284   0024A6  3221               	rrcf	(??_floorf+3)^0,f,c
  4285   0024A8  3220               	rrcf	(??_floorf+2)^0,f,c
  4286   0024AA  321F               	rrcf	(??_floorf+1)^0,f,c
  4287   0024AC  321E               	rrcf	??_floorf^0,f,c
  4288   0024AE                     u3050:
  4289   0024AE  2EE8               	decfsz	wreg,f,c
  4290   0024B0  EF52  F012         	goto	u3055
  4291   0024B4  501E               	movf	??_floorf^0,w,c
  4292   0024B6  101F               	iorwf	(??_floorf+1)^0,w,c
  4293   0024B8  1020               	iorwf	(??_floorf+2)^0,w,c
  4294   0024BA  1021               	iorwf	(??_floorf+3)^0,w,c
  4295   0024BC  A4D8               	btfss	status,2,c
  4296   0024BE  EF63  F012         	goto	u3061
  4297   0024C2  EF65  F012         	goto	u3060
  4298   0024C6                     u3061:
  4299   0024C6  EF6F  F012         	goto	l2921
  4300   0024CA                     u3060:
  4301   0024CA  0E00               	movlw	0
  4302   0024CC  6E2A               	movwf	floorf@u^0,c
  4303   0024CE  0E00               	movlw	0
  4304   0024D0  6E2B               	movwf	(floorf@u+1)^0,c
  4305   0024D2  0E00               	movlw	0
  4306   0024D4  6E2C               	movwf	(floorf@u+2)^0,c
  4307   0024D6  0E00               	movlw	0
  4308   0024D8  6E2D               	movwf	(floorf@u+3)^0,c
  4309   0024DA  EF8B  F012         	goto	l2925
  4310   0024DE                     l2921:
  4311   0024DE  90D8               	bcf	status,0,c
  4312   0024E0  342A               	rlcf	floorf@u^0,w,c
  4313   0024E2  6E1E               	movwf	??_floorf^0,c
  4314   0024E4  342B               	rlcf	(floorf@u+1)^0,w,c
  4315   0024E6  6E1F               	movwf	(??_floorf+1)^0,c
  4316   0024E8  342C               	rlcf	(floorf@u+2)^0,w,c
  4317   0024EA  6E20               	movwf	(??_floorf+2)^0,c
  4318   0024EC  342D               	rlcf	(floorf@u+3)^0,w,c
  4319   0024EE  6E21               	movwf	(??_floorf+3)^0,c
  4320   0024F0  501E               	movf	??_floorf^0,w,c
  4321   0024F2  101F               	iorwf	(??_floorf+1)^0,w,c
  4322   0024F4  1020               	iorwf	(??_floorf+2)^0,w,c
  4323   0024F6  1021               	iorwf	(??_floorf+3)^0,w,c
  4324   0024F8  B4D8               	btfsc	status,2,c
  4325   0024FA  EF81  F012         	goto	u3071
  4326   0024FE  EF83  F012         	goto	u3070
  4327   002502                     u3071:
  4328   002502  EF8B  F012         	goto	l2925
  4329   002506                     u3070:
  4330   002506  0E00               	movlw	0
  4331   002508  6E2A               	movwf	floorf@u^0,c
  4332   00250A  0E00               	movlw	0
  4333   00250C  6E2B               	movwf	(floorf@u+1)^0,c
  4334   00250E  0E80               	movlw	128
  4335   002510  6E2C               	movwf	(floorf@u+2)^0,c
  4336   002512  0EBF               	movlw	191
  4337   002514  6E2D               	movwf	(floorf@u+3)^0,c
  4338   002516                     l2925:
  4339   002516  C02A  F01A         	movff	floorf@u,?_floorf
  4340   00251A  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4341   00251E  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4342   002522  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4343   002526                     l920:
  4344   002526  0012               	return		;funcret
  4345   002528                     __end_of_floorf:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function ___fpclassifyf *****************
  4349 ;; Defined at:
  4350 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  x               4    0[COMRAM] float 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  u               4   10[COMRAM] struct .
  4355 ;;  e               2    8[COMRAM] int 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  2    0[COMRAM] int 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4365 ;;      Params:         4       0       0       0       0       0       0
  4366 ;;      Locals:         6       0       0       0       0       0       0
  4367 ;;      Temps:          4       0       0       0       0       0       0
  4368 ;;      Totals:        14       0       0       0       0       0       0
  4369 ;;Total ram usage:       14 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_efgtoa
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text15
  4379   0028E6                     __ptext15:
  4380                           	callstack 0
  4381   0028E6                     ___fpclassifyf:
  4382                           	callstack 26
  4383   0028E6  C0DD  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4384   0028EA  C0DE  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4385   0028EE  C0DF  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4386   0028F2  C0E0  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4387   0028F6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4388   0028FA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4389   0028FE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4390   002902  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4391   002906  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4392   00290A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4393   00290E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4394   002912  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4395   002916  0E18               	movlw	24
  4396   002918  EF93  F014         	goto	u2890
  4397   00291C                     u2895:
  4398   00291C  90D8               	bcf	status,0,c
  4399   00291E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4400   002920  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4401   002922  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4402   002924  3205               	rrcf	??___fpclassifyf^0,f,c
  4403   002926                     u2890:
  4404   002926  2EE8               	decfsz	wreg,f,c
  4405   002928  EF8E  F014         	goto	u2895
  4406   00292C  5005               	movf	??___fpclassifyf^0,w,c
  4407   00292E  6E09               	movwf	___fpclassifyf@e^0,c
  4408   002930  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4409   002932  5009               	movf	___fpclassifyf@e^0,w,c
  4410   002934  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4411   002936  A4D8               	btfss	status,2,c
  4412   002938  EFA0  F014         	goto	u2901
  4413   00293C  EFA2  F014         	goto	u2900
  4414   002940                     u2901:
  4415   002940  EFC2  F014         	goto	l2883
  4416   002944                     u2900:
  4417   002944  90D8               	bcf	status,0,c
  4418   002946  340B               	rlcf	___fpclassifyf@u^0,w,c
  4419   002948  6E05               	movwf	??___fpclassifyf^0,c
  4420   00294A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4421   00294C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4422   00294E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4423   002950  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4424   002952  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4425   002954  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4426   002956  5005               	movf	??___fpclassifyf^0,w,c
  4427   002958  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4428   00295A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4429   00295C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4430   00295E  A4D8               	btfss	status,2,c
  4431   002960  EFB4  F014         	goto	u2911
  4432   002964  EFB6  F014         	goto	u2910
  4433   002968                     u2911:
  4434   002968  EFBC  F014         	goto	l2879
  4435   00296C                     u2910:
  4436   00296C  0E00               	movlw	0
  4437   00296E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4438   002970  0E02               	movlw	2
  4439   002972  6E01               	movwf	?___fpclassifyf^0,c
  4440   002974  EFF1  F014         	goto	l913
  4441   002978                     l2879:
  4442   002978  0E00               	movlw	0
  4443   00297A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4444   00297C  0E03               	movlw	3
  4445   00297E  6E01               	movwf	?___fpclassifyf^0,c
  4446   002980  EFF1  F014         	goto	l913
  4447   002984                     l2883:
  4448   002984  2809               	incf	___fpclassifyf@e^0,w,c
  4449   002986  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4450   002988  A4D8               	btfss	status,2,c
  4451   00298A  EFC9  F014         	goto	u2921
  4452   00298E  EFCB  F014         	goto	u2920
  4453   002992                     u2921:
  4454   002992  EFED  F014         	goto	l2889
  4455   002996                     u2920:
  4456   002996  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4457   00299A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4458   00299E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4459   0029A2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4460   0029A6  0E09               	movlw	9
  4461   0029A8                     u2935:
  4462   0029A8  90D8               	bcf	status,0,c
  4463   0029AA  3605               	rlcf	??___fpclassifyf^0,f,c
  4464   0029AC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4465   0029AE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4466   0029B0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4467   0029B2  2EE8               	decfsz	wreg,f,c
  4468   0029B4  EFD4  F014         	goto	u2935
  4469   0029B8  5005               	movf	??___fpclassifyf^0,w,c
  4470   0029BA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4471   0029BC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4472   0029BE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4473   0029C0  B4D8               	btfsc	status,2,c
  4474   0029C2  EFE5  F014         	goto	u2941
  4475   0029C6  EFE8  F014         	goto	u2940
  4476   0029CA                     u2941:
  4477   0029CA  0E01               	movlw	1
  4478   0029CC  EFE9  F014         	goto	u2950
  4479   0029D0                     u2940:
  4480   0029D0  0E00               	movlw	0
  4481   0029D2                     u2950:
  4482   0029D2  6E01               	movwf	?___fpclassifyf^0,c
  4483   0029D4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4484   0029D6  EFF1  F014         	goto	l913
  4485   0029DA                     l2889:
  4486   0029DA  0E00               	movlw	0
  4487   0029DC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4488   0029DE  0E04               	movlw	4
  4489   0029E0  6E01               	movwf	?___fpclassifyf^0,c
  4490   0029E2                     l913:
  4491   0029E2  0012               	return		;funcret
  4492   0029E4                     __end_of___fpclassifyf:
  4493                           	callstack 0
  4494                           
  4495 ;; *************** function ___fltol *****************
  4496 ;; Defined at:
  4497 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  f1              4    0[COMRAM] int 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  exp1            1    9[COMRAM] unsigned char 
  4502 ;;  sign1           1    8[COMRAM] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  4    0[COMRAM] long 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4512 ;;      Params:         4       0       0       0       0       0       0
  4513 ;;      Locals:         2       0       0       0       0       0       0
  4514 ;;      Temps:          4       0       0       0       0       0       0
  4515 ;;      Totals:        10       0       0       0       0       0       0
  4516 ;;Total ram usage:       10 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_efgtoa
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text16
  4526   0026DC                     __ptext16:
  4527                           	callstack 0
  4528   0026DC                     ___fltol:
  4529                           	callstack 26
  4530   0026DC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4531   0026DE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4532   0026E0  6E0A               	movwf	___fltol@exp1^0,c
  4533   0026E2  500A               	movf	___fltol@exp1^0,w,c
  4534   0026E4  A4D8               	btfss	status,2,c
  4535   0026E6  EF77  F013         	goto	u2781
  4536   0026EA  EF79  F013         	goto	u2780
  4537   0026EE                     u2781:
  4538   0026EE  EF83  F013         	goto	l2815
  4539   0026F2                     u2780:
  4540   0026F2                     l2811:
  4541   0026F2  0E00               	movlw	0
  4542   0026F4  6E01               	movwf	?___fltol^0,c
  4543   0026F6  0E00               	movlw	0
  4544   0026F8  6E02               	movwf	(?___fltol+1)^0,c
  4545   0026FA  0E00               	movlw	0
  4546   0026FC  6E03               	movwf	(?___fltol+2)^0,c
  4547   0026FE  0E00               	movlw	0
  4548   002700  6E04               	movwf	(?___fltol+3)^0,c
  4549   002702  EFF0  F013         	goto	l398
  4550   002706                     l2815:
  4551   002706  C001  F005         	movff	___fltol@f1,??___fltol
  4552   00270A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4553   00270E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4554   002712  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4555   002716  0E20               	movlw	32
  4556   002718  EF93  F013         	goto	u2790
  4557   00271C                     u2795:
  4558   00271C  90D8               	bcf	status,0,c
  4559   00271E  3208               	rrcf	(??___fltol+3)^0,f,c
  4560   002720  3207               	rrcf	(??___fltol+2)^0,f,c
  4561   002722  3206               	rrcf	(??___fltol+1)^0,f,c
  4562   002724  3205               	rrcf	??___fltol^0,f,c
  4563   002726                     u2790:
  4564   002726  2EE8               	decfsz	wreg,f,c
  4565   002728  EF8E  F013         	goto	u2795
  4566   00272C  5005               	movf	??___fltol^0,w,c
  4567   00272E  6E09               	movwf	___fltol@sign1^0,c
  4568   002730  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4569   002732  0EFF               	movlw	255
  4570   002734  1601               	andwf	___fltol@f1^0,f,c
  4571   002736  0EFF               	movlw	255
  4572   002738  1602               	andwf	(___fltol@f1+1)^0,f,c
  4573   00273A  0EFF               	movlw	255
  4574   00273C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4575   00273E  0E00               	movlw	0
  4576   002740  1604               	andwf	(___fltol@f1+3)^0,f,c
  4577   002742  0E96               	movlw	150
  4578   002744  5E0A               	subwf	___fltol@exp1^0,f,c
  4579   002746  BE0A               	btfsc	___fltol@exp1^0,7,c
  4580   002748  EFAA  F013         	goto	u2800
  4581   00274C  EFA8  F013         	goto	u2801
  4582   002750                     u2801:
  4583   002750  EFC0  F013         	goto	l2835
  4584   002754                     u2800:
  4585   002754  500A               	movf	___fltol@exp1^0,w,c
  4586   002756  0A80               	xorlw	128
  4587   002758  0F97               	addlw	151
  4588   00275A  B0D8               	btfsc	status,0,c
  4589   00275C  EFB2  F013         	goto	u2811
  4590   002760  EFB4  F013         	goto	u2810
  4591   002764                     u2811:
  4592   002764  EFB6  F013         	goto	l2831
  4593   002768                     u2810:
  4594   002768  EF79  F013         	goto	l2811
  4595   00276C                     l2831:
  4596   00276C  90D8               	bcf	status,0,c
  4597   00276E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4598   002770  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4599   002772  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4600   002774  3201               	rrcf	___fltol@f1^0,f,c
  4601   002776  3E0A               	incfsz	___fltol@exp1^0,f,c
  4602   002778  EFB6  F013         	goto	l2831
  4603   00277C  EFD8  F013         	goto	l2845
  4604   002780                     l2835:
  4605   002780  0E1F               	movlw	31
  4606   002782  640A               	cpfsgt	___fltol@exp1^0,c
  4607   002784  EFC6  F013         	goto	u2821
  4608   002788  EFC8  F013         	goto	u2820
  4609   00278C                     u2821:
  4610   00278C  EFD0  F013         	goto	l2843
  4611   002790                     u2820:
  4612   002790  EF79  F013         	goto	l2811
  4613   002794                     l2841:
  4614   002794  90D8               	bcf	status,0,c
  4615   002796  3601               	rlcf	___fltol@f1^0,f,c
  4616   002798  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4617   00279A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4618   00279C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4619   00279E  060A               	decf	___fltol@exp1^0,f,c
  4620   0027A0                     l2843:
  4621   0027A0  500A               	movf	___fltol@exp1^0,w,c
  4622   0027A2  A4D8               	btfss	status,2,c
  4623   0027A4  EFD6  F013         	goto	u2831
  4624   0027A8  EFD8  F013         	goto	u2830
  4625   0027AC                     u2831:
  4626   0027AC  EFCA  F013         	goto	l2841
  4627   0027B0                     u2830:
  4628   0027B0                     l2845:
  4629   0027B0  5009               	movf	___fltol@sign1^0,w,c
  4630   0027B2  B4D8               	btfsc	status,2,c
  4631   0027B4  EFDE  F013         	goto	u2841
  4632   0027B8  EFE0  F013         	goto	u2840
  4633   0027BC                     u2841:
  4634   0027BC  EFE8  F013         	goto	l2849
  4635   0027C0                     u2840:
  4636   0027C0  1E04               	comf	(___fltol@f1+3)^0,f,c
  4637   0027C2  1E03               	comf	(___fltol@f1+2)^0,f,c
  4638   0027C4  1E02               	comf	(___fltol@f1+1)^0,f,c
  4639   0027C6  6C01               	negf	___fltol@f1^0,c
  4640   0027C8  0E00               	movlw	0
  4641   0027CA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4642   0027CC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4643   0027CE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4644   0027D0                     l2849:
  4645   0027D0  C001  F001         	movff	___fltol@f1,?___fltol
  4646   0027D4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4647   0027D8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4648   0027DC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4649   0027E0                     l398:
  4650   0027E0  0012               	return		;funcret
  4651   0027E2                     __end_of___fltol:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function ___flsub *****************
  4655 ;; Defined at:
  4656 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  b               4   39[COMRAM] long 
  4659 ;;  a               4   43[COMRAM] long 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  4   39[COMRAM] long 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4671 ;;      Params:         8       0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0
  4674 ;;      Totals:         8       0       0       0       0       0       0
  4675 ;;Total ram usage:        8 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; Hardware stack levels required when called: 1
  4678 ;; This function calls:
  4679 ;;		___fladd
  4680 ;; This function is called by:
  4681 ;;		_efgtoa
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text17
  4686   002F12                     __ptext17:
  4687                           	callstack 0
  4688   002F12                     ___flsub:
  4689                           	callstack 25
  4690   002F12  0E00               	movlw	0
  4691   002F14  1A2C               	xorwf	___flsub@a^0,f,c
  4692   002F16  0E00               	movlw	0
  4693   002F18  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4694   002F1A  0E00               	movlw	0
  4695   002F1C  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4696   002F1E  0E80               	movlw	128
  4697   002F20  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4698   002F22  C028  F001         	movff	___flsub@b,___fladd@b
  4699   002F26  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4700   002F2A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4701   002F2E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4702   002F32  C02C  F005         	movff	___flsub@a,___fladd@a
  4703   002F36  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4704   002F3A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4705   002F3E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4706   002F42  EC5C  F008         	call	___fladd	;wreg free
  4707   002F46  C001  F028         	movff	?___fladd,?___flsub
  4708   002F4A  C002  F029         	movff	?___fladd+1,?___flsub+1
  4709   002F4E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4710   002F52  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4711   002F56  0012               	return		;funcret
  4712   002F58                     __end_of___flsub:
  4713                           	callstack 0
  4714                           
  4715 ;; *************** function ___fladd *****************
  4716 ;; Defined at:
  4717 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  b               4    0[COMRAM] long 
  4720 ;;  a               4    4[COMRAM] long 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  grs             1   15[COMRAM] unsigned char 
  4723 ;;  bexp            1   14[COMRAM] unsigned char 
  4724 ;;  aexp            1   13[COMRAM] unsigned char 
  4725 ;;  signs           1   12[COMRAM] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  4    0[COMRAM] unsigned char 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4735 ;;      Params:         8       0       0       0       0       0       0
  4736 ;;      Locals:         4       0       0       0       0       0       0
  4737 ;;      Temps:          4       0       0       0       0       0       0
  4738 ;;      Totals:        16       0       0       0       0       0       0
  4739 ;;Total ram usage:       16 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		___flsub
  4745 ;;		_efgtoa
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text18
  4750   0010B8                     __ptext18:
  4751                           	callstack 0
  4752   0010B8                     ___fladd:
  4753                           	callstack 25
  4754   0010B8  5004               	movf	(___fladd@b+3)^0,w,c
  4755   0010BA  0B80               	andlw	128
  4756   0010BC  6E0D               	movwf	___fladd@signs^0,c
  4757   0010BE  5004               	movf	(___fladd@b+3)^0,w,c
  4758   0010C0  2404               	addwf	(___fladd@b+3)^0,w,c
  4759   0010C2  6E0F               	movwf	___fladd@bexp^0,c
  4760   0010C4  AE03               	btfss	(___fladd@b+2)^0,7,c
  4761   0010C6  EF67  F008         	goto	u1871
  4762   0010CA  EF69  F008         	goto	u1870
  4763   0010CE                     u1871:
  4764   0010CE  EF6A  F008         	goto	l2279
  4765   0010D2                     u1870:
  4766   0010D2  800F               	bsf	___fladd@bexp^0,0,c
  4767   0010D4                     l2279:
  4768   0010D4  500F               	movf	___fladd@bexp^0,w,c
  4769   0010D6  B4D8               	btfsc	status,2,c
  4770   0010D8  EF70  F008         	goto	u1881
  4771   0010DC  EF72  F008         	goto	u1880
  4772   0010E0                     u1881:
  4773   0010E0  EF87  F008         	goto	l2289
  4774   0010E4                     u1880:
  4775   0010E4  280F               	incf	___fladd@bexp^0,w,c
  4776   0010E6  A4D8               	btfss	status,2,c
  4777   0010E8  EF78  F008         	goto	u1891
  4778   0010EC  EF7A  F008         	goto	u1890
  4779   0010F0                     u1891:
  4780   0010F0  EF82  F008         	goto	l2285
  4781   0010F4                     u1890:
  4782   0010F4  0E00               	movlw	0
  4783   0010F6  6E01               	movwf	___fladd@b^0,c
  4784   0010F8  0E00               	movlw	0
  4785   0010FA  6E02               	movwf	(___fladd@b+1)^0,c
  4786   0010FC  0E00               	movlw	0
  4787   0010FE  6E03               	movwf	(___fladd@b+2)^0,c
  4788   001100  0E00               	movlw	0
  4789   001102  6E04               	movwf	(___fladd@b+3)^0,c
  4790   001104                     l2285:
  4791   001104  8E03               	bsf	(___fladd@b+2)^0,7,c
  4792   001106  0E00               	movlw	0
  4793   001108  6E04               	movwf	(___fladd@b+3)^0,c
  4794   00110A  EF8F  F008         	goto	l2291
  4795   00110E                     l2289:
  4796   00110E  0E00               	movlw	0
  4797   001110  6E01               	movwf	___fladd@b^0,c
  4798   001112  0E00               	movlw	0
  4799   001114  6E02               	movwf	(___fladd@b+1)^0,c
  4800   001116  0E00               	movlw	0
  4801   001118  6E03               	movwf	(___fladd@b+2)^0,c
  4802   00111A  0E00               	movlw	0
  4803   00111C  6E04               	movwf	(___fladd@b+3)^0,c
  4804   00111E                     l2291:
  4805   00111E  5008               	movf	(___fladd@a+3)^0,w,c
  4806   001120  0B80               	andlw	128
  4807   001122  6E0E               	movwf	___fladd@aexp^0,c
  4808   001124  500D               	movf	___fladd@signs^0,w,c
  4809   001126  180E               	xorwf	___fladd@aexp^0,w,c
  4810   001128  B4D8               	btfsc	status,2,c
  4811   00112A  EF99  F008         	goto	u1901
  4812   00112E  EF9B  F008         	goto	u1900
  4813   001132                     u1901:
  4814   001132  EF9C  F008         	goto	l2297
  4815   001136                     u1900:
  4816   001136  8C0D               	bsf	___fladd@signs^0,6,c
  4817   001138                     l2297:
  4818   001138  5008               	movf	(___fladd@a+3)^0,w,c
  4819   00113A  2408               	addwf	(___fladd@a+3)^0,w,c
  4820   00113C  6E0E               	movwf	___fladd@aexp^0,c
  4821   00113E  AE07               	btfss	(___fladd@a+2)^0,7,c
  4822   001140  EFA4  F008         	goto	u1911
  4823   001144  EFA6  F008         	goto	u1910
  4824   001148                     u1911:
  4825   001148  EFA7  F008         	goto	l2303
  4826   00114C                     u1910:
  4827   00114C  800E               	bsf	___fladd@aexp^0,0,c
  4828   00114E                     l2303:
  4829   00114E  500E               	movf	___fladd@aexp^0,w,c
  4830   001150  B4D8               	btfsc	status,2,c
  4831   001152  EFAD  F008         	goto	u1921
  4832   001156  EFAF  F008         	goto	u1920
  4833   00115A                     u1921:
  4834   00115A  EFC4  F008         	goto	l2313
  4835   00115E                     u1920:
  4836   00115E  280E               	incf	___fladd@aexp^0,w,c
  4837   001160  A4D8               	btfss	status,2,c
  4838   001162  EFB5  F008         	goto	u1931
  4839   001166  EFB7  F008         	goto	u1930
  4840   00116A                     u1931:
  4841   00116A  EFBF  F008         	goto	l2309
  4842   00116E                     u1930:
  4843   00116E  0E00               	movlw	0
  4844   001170  6E05               	movwf	___fladd@a^0,c
  4845   001172  0E00               	movlw	0
  4846   001174  6E06               	movwf	(___fladd@a+1)^0,c
  4847   001176  0E00               	movlw	0
  4848   001178  6E07               	movwf	(___fladd@a+2)^0,c
  4849   00117A  0E00               	movlw	0
  4850   00117C  6E08               	movwf	(___fladd@a+3)^0,c
  4851   00117E                     l2309:
  4852   00117E  8E07               	bsf	(___fladd@a+2)^0,7,c
  4853   001180  0E00               	movlw	0
  4854   001182  6E08               	movwf	(___fladd@a+3)^0,c
  4855   001184  EFCC  F008         	goto	l2315
  4856   001188                     l2313:
  4857   001188  0E00               	movlw	0
  4858   00118A  6E05               	movwf	___fladd@a^0,c
  4859   00118C  0E00               	movlw	0
  4860   00118E  6E06               	movwf	(___fladd@a+1)^0,c
  4861   001190  0E00               	movlw	0
  4862   001192  6E07               	movwf	(___fladd@a+2)^0,c
  4863   001194  0E00               	movlw	0
  4864   001196  6E08               	movwf	(___fladd@a+3)^0,c
  4865   001198                     l2315:
  4866   001198  500F               	movf	___fladd@bexp^0,w,c
  4867   00119A  5C0E               	subwf	___fladd@aexp^0,w,c
  4868   00119C  B0D8               	btfsc	status,0,c
  4869   00119E  EFD3  F008         	goto	u1941
  4870   0011A2  EFD5  F008         	goto	u1940
  4871   0011A6                     u1941:
  4872   0011A6  EFFC  F008         	goto	l2351
  4873   0011AA                     u1940:
  4874   0011AA  AC0D               	btfss	___fladd@signs^0,6,c
  4875   0011AC  EFDA  F008         	goto	u1951
  4876   0011B0  EFDC  F008         	goto	u1950
  4877   0011B4                     u1951:
  4878   0011B4  EFDE  F008         	goto	l2321
  4879   0011B8                     u1950:
  4880   0011B8  0E80               	movlw	128
  4881   0011BA  1A0D               	xorwf	___fladd@signs^0,f,c
  4882   0011BC                     l2321:
  4883   0011BC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4884   0011C0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4885   0011C4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4886   0011C8  C001  F010         	movff	___fladd@b,___fladd@grs
  4887   0011CC  C005  F001         	movff	___fladd@a,___fladd@b
  4888   0011D0  C010  F005         	movff	___fladd@grs,___fladd@a
  4889   0011D4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4890   0011D8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4891   0011DC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4892   0011E0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4893   0011E4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4894   0011E8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4895   0011EC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4896   0011F0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4897   0011F4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4898   0011F8                     l2351:
  4899   0011F8  0E00               	movlw	0
  4900   0011FA  6E10               	movwf	___fladd@grs^0,c
  4901   0011FC  500F               	movf	___fladd@bexp^0,w,c
  4902   0011FE  C00E  F009         	movff	___fladd@aexp,??___fladd
  4903   001202  6A0A               	clrf	(??___fladd+1)^0,c
  4904   001204  5E09               	subwf	??___fladd^0,f,c
  4905   001206  0E00               	movlw	0
  4906   001208  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4907   00120A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4908   00120C  EF11  F009         	goto	u1961
  4909   001210  500A               	movf	(??___fladd+1)^0,w,c
  4910   001212  E109               	bnz	u1960
  4911   001214  0E1A               	movlw	26
  4912   001216  5C09               	subwf	??___fladd^0,w,c
  4913   001218  A0D8               	btfss	status,0,c
  4914   00121A  EF11  F009         	goto	u1961
  4915   00121E  EF13  F009         	goto	u1960
  4916   001222                     u1961:
  4917   001222  EF4A  F009         	goto	l630
  4918   001226                     u1960:
  4919   001226  5001               	movf	___fladd@b^0,w,c
  4920   001228  1002               	iorwf	(___fladd@b+1)^0,w,c
  4921   00122A  1003               	iorwf	(___fladd@b+2)^0,w,c
  4922   00122C  1004               	iorwf	(___fladd@b+3)^0,w,c
  4923   00122E  A4D8               	btfss	status,2,c
  4924   001230  EF1C  F009         	goto	u1971
  4925   001234  EF1F  F009         	goto	u1970
  4926   001238                     u1971:
  4927   001238  0E01               	movlw	1
  4928   00123A  EF20  F009         	goto	u1980
  4929   00123E                     u1970:
  4930   00123E  0E00               	movlw	0
  4931   001240                     u1980:
  4932   001240  6E10               	movwf	___fladd@grs^0,c
  4933   001242  0E00               	movlw	0
  4934   001244  6E01               	movwf	___fladd@b^0,c
  4935   001246  0E00               	movlw	0
  4936   001248  6E02               	movwf	(___fladd@b+1)^0,c
  4937   00124A  0E00               	movlw	0
  4938   00124C  6E03               	movwf	(___fladd@b+2)^0,c
  4939   00124E  0E00               	movlw	0
  4940   001250  6E04               	movwf	(___fladd@b+3)^0,c
  4941   001252  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4942   001256  EF53  F009         	goto	l629
  4943   00125A                     l631:
  4944   00125A  A010               	btfss	___fladd@grs^0,0,c
  4945   00125C  EF32  F009         	goto	u1991
  4946   001260  EF34  F009         	goto	u1990
  4947   001264                     u1991:
  4948   001264  EF3A  F009         	goto	l2363
  4949   001268                     u1990:
  4950   001268  90D8               	bcf	status,0,c
  4951   00126A  3010               	rrcf	___fladd@grs^0,w,c
  4952   00126C  0901               	iorlw	1
  4953   00126E  6E10               	movwf	___fladd@grs^0,c
  4954   001270  EF3C  F009         	goto	l2365
  4955   001274                     l2363:
  4956   001274  90D8               	bcf	status,0,c
  4957   001276  3210               	rrcf	___fladd@grs^0,f,c
  4958   001278                     l2365:
  4959   001278  A001               	btfss	___fladd@b^0,0,c
  4960   00127A  EF41  F009         	goto	u2001
  4961   00127E  EF43  F009         	goto	u2000
  4962   001282                     u2001:
  4963   001282  EF44  F009         	goto	l2369
  4964   001286                     u2000:
  4965   001286  8E10               	bsf	___fladd@grs^0,7,c
  4966   001288                     l2369:
  4967   001288  3404               	rlcf	(___fladd@b+3)^0,w,c
  4968   00128A  3204               	rrcf	(___fladd@b+3)^0,f,c
  4969   00128C  3203               	rrcf	(___fladd@b+2)^0,f,c
  4970   00128E  3202               	rrcf	(___fladd@b+1)^0,f,c
  4971   001290  3201               	rrcf	___fladd@b^0,f,c
  4972   001292  2A0F               	incf	___fladd@bexp^0,f,c
  4973   001294                     l630:
  4974   001294  500E               	movf	___fladd@aexp^0,w,c
  4975   001296  5C0F               	subwf	___fladd@bexp^0,w,c
  4976   001298  A0D8               	btfss	status,0,c
  4977   00129A  EF51  F009         	goto	u2011
  4978   00129E  EF53  F009         	goto	u2010
  4979   0012A2                     u2011:
  4980   0012A2  EF2D  F009         	goto	l631
  4981   0012A6                     u2010:
  4982   0012A6                     l629:
  4983   0012A6  BC0D               	btfsc	___fladd@signs^0,6,c
  4984   0012A8  EF58  F009         	goto	u2021
  4985   0012AC  EF5A  F009         	goto	u2020
  4986   0012B0                     u2021:
  4987   0012B0  EF9A  F009         	goto	l2397
  4988   0012B4                     u2020:
  4989   0012B4  500F               	movf	___fladd@bexp^0,w,c
  4990   0012B6  A4D8               	btfss	status,2,c
  4991   0012B8  EF60  F009         	goto	u2031
  4992   0012BC  EF62  F009         	goto	u2030
  4993   0012C0                     u2031:
  4994   0012C0  EF6C  F009         	goto	l2379
  4995   0012C4                     u2030:
  4996   0012C4  0E00               	movlw	0
  4997   0012C6  6E01               	movwf	?___fladd^0,c
  4998   0012C8  0E00               	movlw	0
  4999   0012CA  6E02               	movwf	(?___fladd+1)^0,c
  5000   0012CC  0E00               	movlw	0
  5001   0012CE  6E03               	movwf	(?___fladd+2)^0,c
  5002   0012D0  0E00               	movlw	0
  5003   0012D2  6E04               	movwf	(?___fladd+3)^0,c
  5004   0012D4  EFBB  F00A         	goto	l638
  5005   0012D8                     l2379:
  5006   0012D8  5005               	movf	___fladd@a^0,w,c
  5007   0012DA  2601               	addwf	___fladd@b^0,f,c
  5008   0012DC  5006               	movf	(___fladd@a+1)^0,w,c
  5009   0012DE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5010   0012E0  5007               	movf	(___fladd@a+2)^0,w,c
  5011   0012E2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5012   0012E4  5008               	movf	(___fladd@a+3)^0,w,c
  5013   0012E6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5014   0012E8  A004               	btfss	(___fladd@b+3)^0,0,c
  5015   0012EA  EF79  F009         	goto	u2041
  5016   0012EE  EF7B  F009         	goto	u2040
  5017   0012F2                     u2041:
  5018   0012F2  EF27  F00A         	goto	l2433
  5019   0012F6                     u2040:
  5020   0012F6  A010               	btfss	___fladd@grs^0,0,c
  5021   0012F8  EF80  F009         	goto	u2051
  5022   0012FC  EF82  F009         	goto	u2050
  5023   001300                     u2051:
  5024   001300  EF88  F009         	goto	l2387
  5025   001304                     u2050:
  5026   001304  90D8               	bcf	status,0,c
  5027   001306  3010               	rrcf	___fladd@grs^0,w,c
  5028   001308  0901               	iorlw	1
  5029   00130A  6E10               	movwf	___fladd@grs^0,c
  5030   00130C  EF8A  F009         	goto	l2389
  5031   001310                     l2387:
  5032   001310  90D8               	bcf	status,0,c
  5033   001312  3210               	rrcf	___fladd@grs^0,f,c
  5034   001314                     l2389:
  5035   001314  A001               	btfss	___fladd@b^0,0,c
  5036   001316  EF8F  F009         	goto	u2061
  5037   00131A  EF91  F009         	goto	u2060
  5038   00131E                     u2061:
  5039   00131E  EF92  F009         	goto	l2393
  5040   001322                     u2060:
  5041   001322  8E10               	bsf	___fladd@grs^0,7,c
  5042   001324                     l2393:
  5043   001324  3404               	rlcf	(___fladd@b+3)^0,w,c
  5044   001326  3204               	rrcf	(___fladd@b+3)^0,f,c
  5045   001328  3203               	rrcf	(___fladd@b+2)^0,f,c
  5046   00132A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5047   00132C  3201               	rrcf	___fladd@b^0,f,c
  5048   00132E  2A0F               	incf	___fladd@bexp^0,f,c
  5049   001330  EF27  F00A         	goto	l2433
  5050   001334                     l2397:
  5051   001334  5005               	movf	___fladd@a^0,w,c
  5052   001336  5C01               	subwf	___fladd@b^0,w,c
  5053   001338  5006               	movf	(___fladd@a+1)^0,w,c
  5054   00133A  5802               	subwfb	(___fladd@b+1)^0,w,c
  5055   00133C  5007               	movf	(___fladd@a+2)^0,w,c
  5056   00133E  5803               	subwfb	(___fladd@b+2)^0,w,c
  5057   001340  5004               	movf	(___fladd@b+3)^0,w,c
  5058   001342  0A80               	xorlw	128
  5059   001344  6E09               	movwf	??___fladd^0,c
  5060   001346  5008               	movf	(___fladd@a+3)^0,w,c
  5061   001348  0A80               	xorlw	128
  5062   00134A  5809               	subwfb	??___fladd^0,w,c
  5063   00134C  B0D8               	btfsc	status,0,c
  5064   00134E  EFAB  F009         	goto	u2071
  5065   001352  EFAD  F009         	goto	u2070
  5066   001356                     u2071:
  5067   001356  EFD8  F009         	goto	l2407
  5068   00135A                     u2070:
  5069   00135A  5001               	movf	___fladd@b^0,w,c
  5070   00135C  5C05               	subwf	___fladd@a^0,w,c
  5071   00135E  6E09               	movwf	??___fladd^0,c
  5072   001360  5002               	movf	(___fladd@b+1)^0,w,c
  5073   001362  5806               	subwfb	(___fladd@a+1)^0,w,c
  5074   001364  6E0A               	movwf	(??___fladd+1)^0,c
  5075   001366  5003               	movf	(___fladd@b+2)^0,w,c
  5076   001368  5807               	subwfb	(___fladd@a+2)^0,w,c
  5077   00136A  6E0B               	movwf	(??___fladd+2)^0,c
  5078   00136C  5004               	movf	(___fladd@b+3)^0,w,c
  5079   00136E  5808               	subwfb	(___fladd@a+3)^0,w,c
  5080   001370  6E0C               	movwf	(??___fladd+3)^0,c
  5081   001372  0EFF               	movlw	255
  5082   001374  2409               	addwf	??___fladd^0,w,c
  5083   001376  6E01               	movwf	___fladd@b^0,c
  5084   001378  0EFF               	movlw	255
  5085   00137A  200A               	addwfc	(??___fladd+1)^0,w,c
  5086   00137C  6E02               	movwf	(___fladd@b+1)^0,c
  5087   00137E  0EFF               	movlw	255
  5088   001380  200B               	addwfc	(??___fladd+2)^0,w,c
  5089   001382  6E03               	movwf	(___fladd@b+2)^0,c
  5090   001384  0EFF               	movlw	255
  5091   001386  200C               	addwfc	(??___fladd+3)^0,w,c
  5092   001388  6E04               	movwf	(___fladd@b+3)^0,c
  5093   00138A  0E80               	movlw	128
  5094   00138C  1A0D               	xorwf	___fladd@signs^0,f,c
  5095   00138E  6C10               	negf	___fladd@grs^0,c
  5096   001390  5010               	movf	___fladd@grs^0,w,c
  5097   001392  A4D8               	btfss	status,2,c
  5098   001394  EFCE  F009         	goto	u2081
  5099   001398  EFD0  F009         	goto	u2080
  5100   00139C                     u2081:
  5101   00139C  EFE0  F009         	goto	l646
  5102   0013A0                     u2080:
  5103   0013A0  0E01               	movlw	1
  5104   0013A2  2601               	addwf	___fladd@b^0,f,c
  5105   0013A4  0E00               	movlw	0
  5106   0013A6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5107   0013A8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5108   0013AA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5109   0013AC  EFE0  F009         	goto	l646
  5110   0013B0                     l2407:
  5111   0013B0  5005               	movf	___fladd@a^0,w,c
  5112   0013B2  5E01               	subwf	___fladd@b^0,f,c
  5113   0013B4  5006               	movf	(___fladd@a+1)^0,w,c
  5114   0013B6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5115   0013B8  5007               	movf	(___fladd@a+2)^0,w,c
  5116   0013BA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5117   0013BC  5008               	movf	(___fladd@a+3)^0,w,c
  5118   0013BE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5119   0013C0                     l646:
  5120   0013C0  5001               	movf	___fladd@b^0,w,c
  5121   0013C2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5122   0013C4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5123   0013C6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5124   0013C8  A4D8               	btfss	status,2,c
  5125   0013CA  EFE9  F009         	goto	u2091
  5126   0013CE  EFEB  F009         	goto	u2090
  5127   0013D2                     u2091:
  5128   0013D2  EF20  F00A         	goto	l2431
  5129   0013D6                     u2090:
  5130   0013D6  5010               	movf	___fladd@grs^0,w,c
  5131   0013D8  A4D8               	btfss	status,2,c
  5132   0013DA  EFF1  F009         	goto	u2101
  5133   0013DE  EFF3  F009         	goto	u2100
  5134   0013E2                     u2101:
  5135   0013E2  EF20  F00A         	goto	l2431
  5136   0013E6                     u2100:
  5137   0013E6  0E00               	movlw	0
  5138   0013E8  6E01               	movwf	?___fladd^0,c
  5139   0013EA  0E00               	movlw	0
  5140   0013EC  6E02               	movwf	(?___fladd+1)^0,c
  5141   0013EE  0E00               	movlw	0
  5142   0013F0  6E03               	movwf	(?___fladd+2)^0,c
  5143   0013F2  0E00               	movlw	0
  5144   0013F4  6E04               	movwf	(?___fladd+3)^0,c
  5145   0013F6  EFBB  F00A         	goto	l638
  5146   0013FA                     l2415:
  5147   0013FA  90D8               	bcf	status,0,c
  5148   0013FC  3601               	rlcf	___fladd@b^0,f,c
  5149   0013FE  3602               	rlcf	(___fladd@b+1)^0,f,c
  5150   001400  3603               	rlcf	(___fladd@b+2)^0,f,c
  5151   001402  3604               	rlcf	(___fladd@b+3)^0,f,c
  5152   001404  AE10               	btfss	___fladd@grs^0,7,c
  5153   001406  EF07  F00A         	goto	u2111
  5154   00140A  EF09  F00A         	goto	u2110
  5155   00140E                     u2111:
  5156   00140E  EF0A  F00A         	goto	l2421
  5157   001412                     u2110:
  5158   001412  8001               	bsf	___fladd@b^0,0,c
  5159   001414                     l2421:
  5160   001414  A010               	btfss	___fladd@grs^0,0,c
  5161   001416  EF0F  F00A         	goto	u2121
  5162   00141A  EF11  F00A         	goto	u2120
  5163   00141E                     u2121:
  5164   00141E  EF15  F00A         	goto	l2425
  5165   001422                     u2120:
  5166   001422  80D8               	bsf	status,0,c
  5167   001424  3610               	rlcf	___fladd@grs^0,f,c
  5168   001426  EF17  F00A         	goto	l2427
  5169   00142A                     l2425:
  5170   00142A  90D8               	bcf	status,0,c
  5171   00142C  3610               	rlcf	___fladd@grs^0,f,c
  5172   00142E                     l2427:
  5173   00142E  500F               	movf	___fladd@bexp^0,w,c
  5174   001430  B4D8               	btfsc	status,2,c
  5175   001432  EF1D  F00A         	goto	u2131
  5176   001436  EF1F  F00A         	goto	u2130
  5177   00143A                     u2131:
  5178   00143A  EF20  F00A         	goto	l2431
  5179   00143E                     u2130:
  5180   00143E  060F               	decf	___fladd@bexp^0,f,c
  5181   001440                     l2431:
  5182   001440  AE03               	btfss	(___fladd@b+2)^0,7,c
  5183   001442  EF25  F00A         	goto	u2141
  5184   001446  EF27  F00A         	goto	u2140
  5185   00144A                     u2141:
  5186   00144A  EFFD  F009         	goto	l2415
  5187   00144E                     u2140:
  5188   00144E                     l2433:
  5189   00144E  0E00               	movlw	0
  5190   001450  6E0E               	movwf	___fladd@aexp^0,c
  5191   001452  AE10               	btfss	___fladd@grs^0,7,c
  5192   001454  EF2E  F00A         	goto	u2151
  5193   001458  EF30  F00A         	goto	u2150
  5194   00145C                     u2151:
  5195   00145C  EF48  F00A         	goto	l655
  5196   001460                     u2150:
  5197   001460  C010  F009         	movff	___fladd@grs,??___fladd
  5198   001464  0E7F               	movlw	127
  5199   001466  1609               	andwf	??___fladd^0,f,c
  5200   001468  B4D8               	btfsc	status,2,c
  5201   00146A  EF39  F00A         	goto	u2161
  5202   00146E  EF3B  F00A         	goto	u2160
  5203   001472                     u2161:
  5204   001472  EF3F  F00A         	goto	l656
  5205   001476                     u2160:
  5206   001476                     l2439:
  5207   001476  0E01               	movlw	1
  5208   001478  6E0E               	movwf	___fladd@aexp^0,c
  5209   00147A  EF48  F00A         	goto	l655
  5210   00147E                     l656:
  5211   00147E  A001               	btfss	___fladd@b^0,0,c
  5212   001480  EF44  F00A         	goto	u2171
  5213   001484  EF46  F00A         	goto	u2170
  5214   001488                     u2171:
  5215   001488  EF48  F00A         	goto	l655
  5216   00148C                     u2170:
  5217   00148C  EF3B  F00A         	goto	l2439
  5218   001490                     l655:
  5219   001490  500E               	movf	___fladd@aexp^0,w,c
  5220   001492  B4D8               	btfsc	status,2,c
  5221   001494  EF4E  F00A         	goto	u2181
  5222   001498  EF50  F00A         	goto	u2180
  5223   00149C                     u2181:
  5224   00149C  EF7B  F00A         	goto	l2451
  5225   0014A0                     u2180:
  5226   0014A0  0E01               	movlw	1
  5227   0014A2  2601               	addwf	___fladd@b^0,f,c
  5228   0014A4  0E00               	movlw	0
  5229   0014A6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5230   0014A8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5231   0014AA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5232   0014AC  A004               	btfss	(___fladd@b+3)^0,0,c
  5233   0014AE  EF5B  F00A         	goto	u2191
  5234   0014B2  EF5D  F00A         	goto	u2190
  5235   0014B6                     u2191:
  5236   0014B6  EF7B  F00A         	goto	l2451
  5237   0014BA                     u2190:
  5238   0014BA  C001  F009         	movff	___fladd@b,??___fladd
  5239   0014BE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5240   0014C2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5241   0014C6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5242   0014CA  340C               	rlcf	(??___fladd+3)^0,w,c
  5243   0014CC  320C               	rrcf	(??___fladd+3)^0,f,c
  5244   0014CE  320B               	rrcf	(??___fladd+2)^0,f,c
  5245   0014D0  320A               	rrcf	(??___fladd+1)^0,f,c
  5246   0014D2  3209               	rrcf	??___fladd^0,f,c
  5247   0014D4  C009  F001         	movff	??___fladd,___fladd@b
  5248   0014D8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5249   0014DC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5250   0014E0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5251   0014E4  280F               	incf	___fladd@bexp^0,w,c
  5252   0014E6  B4D8               	btfsc	status,2,c
  5253   0014E8  EF78  F00A         	goto	u2201
  5254   0014EC  EF7A  F00A         	goto	u2200
  5255   0014F0                     u2201:
  5256   0014F0  EF7B  F00A         	goto	l2451
  5257   0014F4                     u2200:
  5258   0014F4  2A0F               	incf	___fladd@bexp^0,f,c
  5259   0014F6                     l2451:
  5260   0014F6  280F               	incf	___fladd@bexp^0,w,c
  5261   0014F8  B4D8               	btfsc	status,2,c
  5262   0014FA  EF81  F00A         	goto	u2211
  5263   0014FE  EF83  F00A         	goto	u2210
  5264   001502                     u2211:
  5265   001502  EF8B  F00A         	goto	l2455
  5266   001506                     u2210:
  5267   001506  500F               	movf	___fladd@bexp^0,w,c
  5268   001508  A4D8               	btfss	status,2,c
  5269   00150A  EF89  F00A         	goto	u2221
  5270   00150E  EF8B  F00A         	goto	u2220
  5271   001512                     u2221:
  5272   001512  EF9D  F00A         	goto	l2459
  5273   001516                     u2220:
  5274   001516                     l2455:
  5275   001516  0E00               	movlw	0
  5276   001518  6E01               	movwf	___fladd@b^0,c
  5277   00151A  0E00               	movlw	0
  5278   00151C  6E02               	movwf	(___fladd@b+1)^0,c
  5279   00151E  0E00               	movlw	0
  5280   001520  6E03               	movwf	(___fladd@b+2)^0,c
  5281   001522  0E00               	movlw	0
  5282   001524  6E04               	movwf	(___fladd@b+3)^0,c
  5283   001526  500F               	movf	___fladd@bexp^0,w,c
  5284   001528  A4D8               	btfss	status,2,c
  5285   00152A  EF99  F00A         	goto	u2231
  5286   00152E  EF9B  F00A         	goto	u2230
  5287   001532                     u2231:
  5288   001532  EF9D  F00A         	goto	l2459
  5289   001536                     u2230:
  5290   001536  0E00               	movlw	0
  5291   001538  6E0D               	movwf	___fladd@signs^0,c
  5292   00153A                     l2459:
  5293   00153A  A00F               	btfss	___fladd@bexp^0,0,c
  5294   00153C  EFA2  F00A         	goto	u2241
  5295   001540  EFA4  F00A         	goto	u2240
  5296   001544                     u2241:
  5297   001544  EFA7  F00A         	goto	l2463
  5298   001548                     u2240:
  5299   001548  8E03               	bsf	(___fladd@b+2)^0,7,c
  5300   00154A  EFA8  F00A         	goto	l2465
  5301   00154E                     l2463:
  5302   00154E  9E03               	bcf	(___fladd@b+2)^0,7,c
  5303   001550                     l2465:
  5304   001550  90D8               	bcf	status,0,c
  5305   001552  300F               	rrcf	___fladd@bexp^0,w,c
  5306   001554  6E04               	movwf	(___fladd@b+3)^0,c
  5307   001556  AE0D               	btfss	___fladd@signs^0,7,c
  5308   001558  EFB0  F00A         	goto	u2251
  5309   00155C  EFB2  F00A         	goto	u2250
  5310   001560                     u2251:
  5311   001560  EFB3  F00A         	goto	l2471
  5312   001564                     u2250:
  5313   001564  8E04               	bsf	(___fladd@b+3)^0,7,c
  5314   001566                     l2471:
  5315   001566  C001  F001         	movff	___fladd@b,?___fladd
  5316   00156A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5317   00156E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5318   001572  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5319   001576                     l638:
  5320   001576  0012               	return		;funcret
  5321   001578                     __end_of___fladd:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function ___flneg *****************
  5325 ;; Defined at:
  5326 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  f1              4    0[COMRAM] unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  4    0[COMRAM] unsigned char 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5340 ;;      Params:         4       0       0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0       0
  5343 ;;      Totals:         4       0       0       0       0       0       0
  5344 ;;Total ram usage:        4 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_efgtoa
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text19
  5354   00301A                     __ptext19:
  5355                           	callstack 0
  5356   00301A                     ___flneg:
  5357                           	callstack 26
  5358   00301A  5001               	movf	___flneg@f1^0,w,c
  5359   00301C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5360   00301E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5361   003020  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5362   003022  B4D8               	btfsc	status,2,c
  5363   003024  EF16  F018         	goto	u2771
  5364   003028  EF18  F018         	goto	u2770
  5365   00302C                     u2771:
  5366   00302C  EF20  F018         	goto	l2805
  5367   003030                     u2770:
  5368   003030  0E00               	movlw	0
  5369   003032  1A01               	xorwf	___flneg@f1^0,f,c
  5370   003034  0E00               	movlw	0
  5371   003036  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5372   003038  0E00               	movlw	0
  5373   00303A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5374   00303C  0E80               	movlw	128
  5375   00303E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5376   003040                     l2805:
  5377   003040  C001  F001         	movff	___flneg@f1,?___flneg
  5378   003044  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5379   003048  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5380   00304C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5381   003050  0012               	return		;funcret
  5382   003052                     __end_of___flneg:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function ___flmul *****************
  5386 ;; Defined at:
  5387 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  b               4   14[COMRAM] unsigned char 
  5390 ;;  a               4   18[COMRAM] unsigned char 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  prod            4   33[COMRAM] struct .
  5393 ;;  grs             4   27[COMRAM] unsigned long 
  5394 ;;  temp            2   37[COMRAM] struct .
  5395 ;;  bexp            1   32[COMRAM] unsigned char 
  5396 ;;  aexp            1   31[COMRAM] unsigned char 
  5397 ;;  sign            1   26[COMRAM] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  4   14[COMRAM] unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0, prodl, prodh
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5407 ;;      Params:         8       0       0       0       0       0       0
  5408 ;;      Locals:        13       0       0       0       0       0       0
  5409 ;;      Temps:          4       0       0       0       0       0       0
  5410 ;;      Totals:        25       0       0       0       0       0       0
  5411 ;;Total ram usage:       25 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;;		_efgtoa
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text20
  5422   001578                     __ptext20:
  5423                           	callstack 0
  5424   001578                     ___flmul:
  5425                           	callstack 26
  5426   001578  5012               	movf	(___flmul@b+3)^0,w,c
  5427   00157A  0B80               	andlw	128
  5428   00157C  6E1B               	movwf	___flmul@sign^0,c
  5429   00157E  5012               	movf	(___flmul@b+3)^0,w,c
  5430   001580  2412               	addwf	(___flmul@b+3)^0,w,c
  5431   001582  6E21               	movwf	___flmul@bexp^0,c
  5432   001584  AE11               	btfss	(___flmul@b+2)^0,7,c
  5433   001586  EFC7  F00A         	goto	u2501
  5434   00158A  EFC9  F00A         	goto	u2500
  5435   00158E                     u2501:
  5436   00158E  EFCA  F00A         	goto	l2633
  5437   001592                     u2500:
  5438   001592  8021               	bsf	___flmul@bexp^0,0,c
  5439   001594                     l2633:
  5440   001594  5021               	movf	___flmul@bexp^0,w,c
  5441   001596  B4D8               	btfsc	status,2,c
  5442   001598  EFD0  F00A         	goto	u2511
  5443   00159C  EFD2  F00A         	goto	u2510
  5444   0015A0                     u2511:
  5445   0015A0  EFE5  F00A         	goto	l2641
  5446   0015A4                     u2510:
  5447   0015A4  2821               	incf	___flmul@bexp^0,w,c
  5448   0015A6  A4D8               	btfss	status,2,c
  5449   0015A8  EFD8  F00A         	goto	u2521
  5450   0015AC  EFDA  F00A         	goto	u2520
  5451   0015B0                     u2521:
  5452   0015B0  EFE2  F00A         	goto	l2639
  5453   0015B4                     u2520:
  5454   0015B4  0E00               	movlw	0
  5455   0015B6  6E0F               	movwf	___flmul@b^0,c
  5456   0015B8  0E00               	movlw	0
  5457   0015BA  6E10               	movwf	(___flmul@b+1)^0,c
  5458   0015BC  0E00               	movlw	0
  5459   0015BE  6E11               	movwf	(___flmul@b+2)^0,c
  5460   0015C0  0E00               	movlw	0
  5461   0015C2  6E12               	movwf	(___flmul@b+3)^0,c
  5462   0015C4                     l2639:
  5463   0015C4  8E11               	bsf	(___flmul@b+2)^0,7,c
  5464   0015C6  EFED  F00A         	goto	l2643
  5465   0015CA                     l2641:
  5466   0015CA  0E00               	movlw	0
  5467   0015CC  6E0F               	movwf	___flmul@b^0,c
  5468   0015CE  0E00               	movlw	0
  5469   0015D0  6E10               	movwf	(___flmul@b+1)^0,c
  5470   0015D2  0E00               	movlw	0
  5471   0015D4  6E11               	movwf	(___flmul@b+2)^0,c
  5472   0015D6  0E00               	movlw	0
  5473   0015D8  6E12               	movwf	(___flmul@b+3)^0,c
  5474   0015DA                     l2643:
  5475   0015DA  5016               	movf	(___flmul@a+3)^0,w,c
  5476   0015DC  0B80               	andlw	128
  5477   0015DE  1A1B               	xorwf	___flmul@sign^0,f,c
  5478   0015E0  5016               	movf	(___flmul@a+3)^0,w,c
  5479   0015E2  2416               	addwf	(___flmul@a+3)^0,w,c
  5480   0015E4  6E20               	movwf	___flmul@aexp^0,c
  5481   0015E6  AE15               	btfss	(___flmul@a+2)^0,7,c
  5482   0015E8  EFF8  F00A         	goto	u2531
  5483   0015EC  EFFA  F00A         	goto	u2530
  5484   0015F0                     u2531:
  5485   0015F0  EFFB  F00A         	goto	l2651
  5486   0015F4                     u2530:
  5487   0015F4  8020               	bsf	___flmul@aexp^0,0,c
  5488   0015F6                     l2651:
  5489   0015F6  5020               	movf	___flmul@aexp^0,w,c
  5490   0015F8  B4D8               	btfsc	status,2,c
  5491   0015FA  EF01  F00B         	goto	u2541
  5492   0015FE  EF03  F00B         	goto	u2540
  5493   001602                     u2541:
  5494   001602  EF16  F00B         	goto	l2659
  5495   001606                     u2540:
  5496   001606  2820               	incf	___flmul@aexp^0,w,c
  5497   001608  A4D8               	btfss	status,2,c
  5498   00160A  EF09  F00B         	goto	u2551
  5499   00160E  EF0B  F00B         	goto	u2550
  5500   001612                     u2551:
  5501   001612  EF13  F00B         	goto	l2657
  5502   001616                     u2550:
  5503   001616  0E00               	movlw	0
  5504   001618  6E13               	movwf	___flmul@a^0,c
  5505   00161A  0E00               	movlw	0
  5506   00161C  6E14               	movwf	(___flmul@a+1)^0,c
  5507   00161E  0E00               	movlw	0
  5508   001620  6E15               	movwf	(___flmul@a+2)^0,c
  5509   001622  0E00               	movlw	0
  5510   001624  6E16               	movwf	(___flmul@a+3)^0,c
  5511   001626                     l2657:
  5512   001626  8E15               	bsf	(___flmul@a+2)^0,7,c
  5513   001628  EF1E  F00B         	goto	l715
  5514   00162C                     l2659:
  5515   00162C  0E00               	movlw	0
  5516   00162E  6E13               	movwf	___flmul@a^0,c
  5517   001630  0E00               	movlw	0
  5518   001632  6E14               	movwf	(___flmul@a+1)^0,c
  5519   001634  0E00               	movlw	0
  5520   001636  6E15               	movwf	(___flmul@a+2)^0,c
  5521   001638  0E00               	movlw	0
  5522   00163A  6E16               	movwf	(___flmul@a+3)^0,c
  5523   00163C                     l715:
  5524   00163C  5020               	movf	___flmul@aexp^0,w,c
  5525   00163E  B4D8               	btfsc	status,2,c
  5526   001640  EF24  F00B         	goto	u2561
  5527   001644  EF26  F00B         	goto	u2560
  5528   001648                     u2561:
  5529   001648  EF2E  F00B         	goto	l2663
  5530   00164C                     u2560:
  5531   00164C  5021               	movf	___flmul@bexp^0,w,c
  5532   00164E  A4D8               	btfss	status,2,c
  5533   001650  EF2C  F00B         	goto	u2571
  5534   001654  EF2E  F00B         	goto	u2570
  5535   001658                     u2571:
  5536   001658  EF38  F00B         	goto	l2667
  5537   00165C                     u2570:
  5538   00165C                     l2663:
  5539   00165C  0E00               	movlw	0
  5540   00165E  6E0F               	movwf	?___flmul^0,c
  5541   001660  0E00               	movlw	0
  5542   001662  6E10               	movwf	(?___flmul+1)^0,c
  5543   001664  0E00               	movlw	0
  5544   001666  6E11               	movwf	(?___flmul+2)^0,c
  5545   001668  0E00               	movlw	0
  5546   00166A  6E12               	movwf	(?___flmul+3)^0,c
  5547   00166C  EFD0  F00C         	goto	l719
  5548   001670                     l2667:
  5549   001670  5015               	movf	(___flmul@a+2)^0,w,c
  5550   001672  020F               	mulwf	___flmul@b^0,c
  5551   001674  CFF3 F026          	movff	prodl,___flmul@temp
  5552   001678  CFF4 F027          	movff	prodh,___flmul@temp+1
  5553   00167C  5026               	movf	___flmul@temp^0,w,c
  5554   00167E  6E1C               	movwf	___flmul@grs^0,c
  5555   001680  6A1D               	clrf	(___flmul@grs+1)^0,c
  5556   001682  6A1E               	clrf	(___flmul@grs+2)^0,c
  5557   001684  6A1F               	clrf	(___flmul@grs+3)^0,c
  5558   001686  5027               	movf	(___flmul@temp+1)^0,w,c
  5559   001688  6E22               	movwf	___flmul@prod^0,c
  5560   00168A  6A23               	clrf	(___flmul@prod+1)^0,c
  5561   00168C  6A24               	clrf	(___flmul@prod+2)^0,c
  5562   00168E  6A25               	clrf	(___flmul@prod+3)^0,c
  5563   001690  5014               	movf	(___flmul@a+1)^0,w,c
  5564   001692  0210               	mulwf	(___flmul@b+1)^0,c
  5565   001694  CFF3 F026          	movff	prodl,___flmul@temp
  5566   001698  CFF4 F027          	movff	prodh,___flmul@temp+1
  5567   00169C  5026               	movf	___flmul@temp^0,w,c
  5568   00169E  261C               	addwf	___flmul@grs^0,f,c
  5569   0016A0  0E00               	movlw	0
  5570   0016A2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5571   0016A4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5572   0016A6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5573   0016A8  5027               	movf	(___flmul@temp+1)^0,w,c
  5574   0016AA  2622               	addwf	___flmul@prod^0,f,c
  5575   0016AC  0E00               	movlw	0
  5576   0016AE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5577   0016B0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5578   0016B2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5579   0016B4  5013               	movf	___flmul@a^0,w,c
  5580   0016B6  0211               	mulwf	(___flmul@b+2)^0,c
  5581   0016B8  CFF3 F026          	movff	prodl,___flmul@temp
  5582   0016BC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5583   0016C0  5026               	movf	___flmul@temp^0,w,c
  5584   0016C2  261C               	addwf	___flmul@grs^0,f,c
  5585   0016C4  0E00               	movlw	0
  5586   0016C6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5587   0016C8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5588   0016CA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5589   0016CC  5027               	movf	(___flmul@temp+1)^0,w,c
  5590   0016CE  2622               	addwf	___flmul@prod^0,f,c
  5591   0016D0  0E00               	movlw	0
  5592   0016D2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5593   0016D4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5594   0016D6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5595   0016D8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5596   0016DC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5597   0016E0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5598   0016E4  6A1C               	clrf	___flmul@grs^0,c
  5599   0016E6  5013               	movf	___flmul@a^0,w,c
  5600   0016E8  0210               	mulwf	(___flmul@b+1)^0,c
  5601   0016EA  CFF3 F026          	movff	prodl,___flmul@temp
  5602   0016EE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5603   0016F2  5026               	movf	___flmul@temp^0,w,c
  5604   0016F4  261C               	addwf	___flmul@grs^0,f,c
  5605   0016F6  5027               	movf	(___flmul@temp+1)^0,w,c
  5606   0016F8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5607   0016FA  0E00               	movlw	0
  5608   0016FC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5609   0016FE  0E00               	movlw	0
  5610   001700  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5611   001702  5014               	movf	(___flmul@a+1)^0,w,c
  5612   001704  020F               	mulwf	___flmul@b^0,c
  5613   001706  CFF3 F026          	movff	prodl,___flmul@temp
  5614   00170A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5615   00170E  5026               	movf	___flmul@temp^0,w,c
  5616   001710  261C               	addwf	___flmul@grs^0,f,c
  5617   001712  5027               	movf	(___flmul@temp+1)^0,w,c
  5618   001714  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5619   001716  0E00               	movlw	0
  5620   001718  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5621   00171A  0E00               	movlw	0
  5622   00171C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5623   00171E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5624   001722  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5625   001726  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5626   00172A  6A1C               	clrf	___flmul@grs^0,c
  5627   00172C  5013               	movf	___flmul@a^0,w,c
  5628   00172E  020F               	mulwf	___flmul@b^0,c
  5629   001730  CFF3 F026          	movff	prodl,___flmul@temp
  5630   001734  CFF4 F027          	movff	prodh,___flmul@temp+1
  5631   001738  5026               	movf	___flmul@temp^0,w,c
  5632   00173A  261C               	addwf	___flmul@grs^0,f,c
  5633   00173C  5027               	movf	(___flmul@temp+1)^0,w,c
  5634   00173E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5635   001740  0E00               	movlw	0
  5636   001742  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5637   001744  0E00               	movlw	0
  5638   001746  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5639   001748  5015               	movf	(___flmul@a+2)^0,w,c
  5640   00174A  0210               	mulwf	(___flmul@b+1)^0,c
  5641   00174C  CFF3 F026          	movff	prodl,___flmul@temp
  5642   001750  CFF4 F027          	movff	prodh,___flmul@temp+1
  5643   001754  5026               	movf	___flmul@temp^0,w,c
  5644   001756  2622               	addwf	___flmul@prod^0,f,c
  5645   001758  5027               	movf	(___flmul@temp+1)^0,w,c
  5646   00175A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5647   00175C  0E00               	movlw	0
  5648   00175E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5649   001760  0E00               	movlw	0
  5650   001762  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5651   001764  5014               	movf	(___flmul@a+1)^0,w,c
  5652   001766  0211               	mulwf	(___flmul@b+2)^0,c
  5653   001768  CFF3 F026          	movff	prodl,___flmul@temp
  5654   00176C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5655   001770  5026               	movf	___flmul@temp^0,w,c
  5656   001772  2622               	addwf	___flmul@prod^0,f,c
  5657   001774  5027               	movf	(___flmul@temp+1)^0,w,c
  5658   001776  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5659   001778  0E00               	movlw	0
  5660   00177A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5661   00177C  0E00               	movlw	0
  5662   00177E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5663   001780  5015               	movf	(___flmul@a+2)^0,w,c
  5664   001782  0211               	mulwf	(___flmul@b+2)^0,c
  5665   001784  CFF3 F026          	movff	prodl,___flmul@temp
  5666   001788  CFF4 F027          	movff	prodh,___flmul@temp+1
  5667   00178C  5026               	movf	___flmul@temp^0,w,c
  5668   00178E  6E17               	movwf	??___flmul^0,c
  5669   001790  5027               	movf	(___flmul@temp+1)^0,w,c
  5670   001792  6E18               	movwf	(??___flmul+1)^0,c
  5671   001794  6A19               	clrf	(??___flmul+2)^0,c
  5672   001796  6A1A               	clrf	(??___flmul+3)^0,c
  5673   001798  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5674   00179C  C018  F019         	movff	??___flmul+1,??___flmul+2
  5675   0017A0  C017  F018         	movff	??___flmul,??___flmul+1
  5676   0017A4  6A17               	clrf	??___flmul^0,c
  5677   0017A6  5017               	movf	??___flmul^0,w,c
  5678   0017A8  2622               	addwf	___flmul@prod^0,f,c
  5679   0017AA  5018               	movf	(??___flmul+1)^0,w,c
  5680   0017AC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5681   0017AE  5019               	movf	(??___flmul+2)^0,w,c
  5682   0017B0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5683   0017B2  501A               	movf	(??___flmul+3)^0,w,c
  5684   0017B4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5685   0017B6  C01C  F017         	movff	___flmul@grs,??___flmul
  5686   0017BA  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5687   0017BE  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5688   0017C2  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5689   0017C6  0E19               	movlw	25
  5690   0017C8  EFEB  F00B         	goto	u2580
  5691   0017CC                     u2585:
  5692   0017CC  90D8               	bcf	status,0,c
  5693   0017CE  321A               	rrcf	(??___flmul+3)^0,f,c
  5694   0017D0  3219               	rrcf	(??___flmul+2)^0,f,c
  5695   0017D2  3218               	rrcf	(??___flmul+1)^0,f,c
  5696   0017D4  3217               	rrcf	??___flmul^0,f,c
  5697   0017D6                     u2580:
  5698   0017D6  2EE8               	decfsz	wreg,f,c
  5699   0017D8  EFE6  F00B         	goto	u2585
  5700   0017DC  5017               	movf	??___flmul^0,w,c
  5701   0017DE  2622               	addwf	___flmul@prod^0,f,c
  5702   0017E0  5018               	movf	(??___flmul+1)^0,w,c
  5703   0017E2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5704   0017E4  5019               	movf	(??___flmul+2)^0,w,c
  5705   0017E6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5706   0017E8  501A               	movf	(??___flmul+3)^0,w,c
  5707   0017EA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5708   0017EC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5709   0017F0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5710   0017F4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5711   0017F8  6A1C               	clrf	___flmul@grs^0,c
  5712   0017FA  5020               	movf	___flmul@aexp^0,w,c
  5713   0017FC  C021  F017         	movff	___flmul@bexp,??___flmul
  5714   001800  6A18               	clrf	(??___flmul+1)^0,c
  5715   001802  2617               	addwf	??___flmul^0,f,c
  5716   001804  0E00               	movlw	0
  5717   001806  2218               	addwfc	(??___flmul+1)^0,f,c
  5718   001808  0E82               	movlw	130
  5719   00180A  2417               	addwf	??___flmul^0,w,c
  5720   00180C  6E26               	movwf	___flmul@temp^0,c
  5721   00180E  0EFF               	movlw	255
  5722   001810  2018               	addwfc	(??___flmul+1)^0,w,c
  5723   001812  6E27               	movwf	(___flmul@temp+1)^0,c
  5724   001814  EF21  F00C         	goto	l2715
  5725   001818                     l2709:
  5726   001818  90D8               	bcf	status,0,c
  5727   00181A  3622               	rlcf	___flmul@prod^0,f,c
  5728   00181C  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5729   00181E  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5730   001820  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5731   001822  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5732   001824  EF16  F00C         	goto	u2591
  5733   001828  EF18  F00C         	goto	u2590
  5734   00182C                     u2591:
  5735   00182C  EF19  F00C         	goto	l722
  5736   001830                     u2590:
  5737   001830  8022               	bsf	___flmul@prod^0,0,c
  5738   001832                     l722:
  5739   001832  90D8               	bcf	status,0,c
  5740   001834  361C               	rlcf	___flmul@grs^0,f,c
  5741   001836  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5742   001838  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5743   00183A  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5744   00183C  0626               	decf	___flmul@temp^0,f,c
  5745   00183E  A0D8               	btfss	status,0,c
  5746   001840  0627               	decf	(___flmul@temp+1)^0,f,c
  5747   001842                     l2715:
  5748   001842  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5749   001844  EF26  F00C         	goto	u2601
  5750   001848  EF28  F00C         	goto	u2600
  5751   00184C                     u2601:
  5752   00184C  EF0C  F00C         	goto	l2709
  5753   001850                     u2600:
  5754   001850  0E00               	movlw	0
  5755   001852  6E20               	movwf	___flmul@aexp^0,c
  5756   001854  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5757   001856  EF2F  F00C         	goto	u2611
  5758   00185A  EF31  F00C         	goto	u2610
  5759   00185E                     u2611:
  5760   00185E  EF55  F00C         	goto	l724
  5761   001862                     u2610:
  5762   001862  0EFF               	movlw	255
  5763   001864  141C               	andwf	___flmul@grs^0,w,c
  5764   001866  6E17               	movwf	??___flmul^0,c
  5765   001868  0EFF               	movlw	255
  5766   00186A  141D               	andwf	(___flmul@grs+1)^0,w,c
  5767   00186C  6E18               	movwf	(??___flmul+1)^0,c
  5768   00186E  0EFF               	movlw	255
  5769   001870  141E               	andwf	(___flmul@grs+2)^0,w,c
  5770   001872  6E19               	movwf	(??___flmul+2)^0,c
  5771   001874  0E7F               	movlw	127
  5772   001876  141F               	andwf	(___flmul@grs+3)^0,w,c
  5773   001878  6E1A               	movwf	(??___flmul+3)^0,c
  5774   00187A  5017               	movf	??___flmul^0,w,c
  5775   00187C  1018               	iorwf	(??___flmul+1)^0,w,c
  5776   00187E  1019               	iorwf	(??___flmul+2)^0,w,c
  5777   001880  101A               	iorwf	(??___flmul+3)^0,w,c
  5778   001882  B4D8               	btfsc	status,2,c
  5779   001884  EF46  F00C         	goto	u2621
  5780   001888  EF48  F00C         	goto	u2620
  5781   00188C                     u2621:
  5782   00188C  EF4C  F00C         	goto	l725
  5783   001890                     u2620:
  5784   001890                     l2723:
  5785   001890  0E01               	movlw	1
  5786   001892  6E20               	movwf	___flmul@aexp^0,c
  5787   001894  EF55  F00C         	goto	l724
  5788   001898                     l725:
  5789   001898  A022               	btfss	___flmul@prod^0,0,c
  5790   00189A  EF51  F00C         	goto	u2631
  5791   00189E  EF53  F00C         	goto	u2630
  5792   0018A2                     u2631:
  5793   0018A2  EF55  F00C         	goto	l724
  5794   0018A6                     u2630:
  5795   0018A6  EF48  F00C         	goto	l2723
  5796   0018AA                     l724:
  5797   0018AA  5020               	movf	___flmul@aexp^0,w,c
  5798   0018AC  B4D8               	btfsc	status,2,c
  5799   0018AE  EF5B  F00C         	goto	u2641
  5800   0018B2  EF5D  F00C         	goto	u2640
  5801   0018B6                     u2641:
  5802   0018B6  EF81  F00C         	goto	l2735
  5803   0018BA                     u2640:
  5804   0018BA  0E01               	movlw	1
  5805   0018BC  2622               	addwf	___flmul@prod^0,f,c
  5806   0018BE  0E00               	movlw	0
  5807   0018C0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5808   0018C2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5809   0018C4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5810   0018C6  A025               	btfss	(___flmul@prod+3)^0,0,c
  5811   0018C8  EF68  F00C         	goto	u2651
  5812   0018CC  EF6A  F00C         	goto	u2650
  5813   0018D0                     u2651:
  5814   0018D0  EF81  F00C         	goto	l2735
  5815   0018D4                     u2650:
  5816   0018D4  C022  F017         	movff	___flmul@prod,??___flmul
  5817   0018D8  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5818   0018DC  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5819   0018E0  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5820   0018E4  341A               	rlcf	(??___flmul+3)^0,w,c
  5821   0018E6  321A               	rrcf	(??___flmul+3)^0,f,c
  5822   0018E8  3219               	rrcf	(??___flmul+2)^0,f,c
  5823   0018EA  3218               	rrcf	(??___flmul+1)^0,f,c
  5824   0018EC  3217               	rrcf	??___flmul^0,f,c
  5825   0018EE  C017  F022         	movff	??___flmul,___flmul@prod
  5826   0018F2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5827   0018F6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5828   0018FA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5829   0018FE  4A26               	infsnz	___flmul@temp^0,f,c
  5830   001900  2A27               	incf	(___flmul@temp+1)^0,f,c
  5831   001902                     l2735:
  5832   001902  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5833   001904  EF8C  F00C         	goto	u2661
  5834   001908  5027               	movf	(___flmul@temp+1)^0,w,c
  5835   00190A  E108               	bnz	u2660
  5836   00190C  2826               	incf	___flmul@temp^0,w,c
  5837   00190E  A0D8               	btfss	status,0,c
  5838   001910  EF8C  F00C         	goto	u2661
  5839   001914  EF8E  F00C         	goto	u2660
  5840   001918                     u2661:
  5841   001918  EF98  F00C         	goto	l2739
  5842   00191C                     u2660:
  5843   00191C  0E00               	movlw	0
  5844   00191E  6E22               	movwf	___flmul@prod^0,c
  5845   001920  0E00               	movlw	0
  5846   001922  6E23               	movwf	(___flmul@prod+1)^0,c
  5847   001924  0E80               	movlw	128
  5848   001926  6E24               	movwf	(___flmul@prod+2)^0,c
  5849   001928  0E7F               	movlw	127
  5850   00192A  6E25               	movwf	(___flmul@prod+3)^0,c
  5851   00192C  EFC6  F00C         	goto	l2751
  5852   001930                     l2739:
  5853   001930  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5854   001932  EFA5  F00C         	goto	u2670
  5855   001936  5027               	movf	(___flmul@temp+1)^0,w,c
  5856   001938  E106               	bnz	u2671
  5857   00193A  0426               	decf	___flmul@temp^0,w,c
  5858   00193C  B0D8               	btfsc	status,0,c
  5859   00193E  EFA3  F00C         	goto	u2671
  5860   001942  EFA5  F00C         	goto	u2670
  5861   001946                     u2671:
  5862   001946  EFB1  F00C         	goto	l732
  5863   00194A                     u2670:
  5864   00194A  0E00               	movlw	0
  5865   00194C  6E22               	movwf	___flmul@prod^0,c
  5866   00194E  0E00               	movlw	0
  5867   001950  6E23               	movwf	(___flmul@prod+1)^0,c
  5868   001952  0E00               	movlw	0
  5869   001954  6E24               	movwf	(___flmul@prod+2)^0,c
  5870   001956  0E00               	movlw	0
  5871   001958  6E25               	movwf	(___flmul@prod+3)^0,c
  5872   00195A  0E00               	movlw	0
  5873   00195C  6E1B               	movwf	___flmul@sign^0,c
  5874   00195E  EFC6  F00C         	goto	l2751
  5875   001962                     l732:
  5876   001962  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5877   001966  0EFF               	movlw	255
  5878   001968  1622               	andwf	___flmul@prod^0,f,c
  5879   00196A  0EFF               	movlw	255
  5880   00196C  1623               	andwf	(___flmul@prod+1)^0,f,c
  5881   00196E  0E7F               	movlw	127
  5882   001970  1624               	andwf	(___flmul@prod+2)^0,f,c
  5883   001972  0E00               	movlw	0
  5884   001974  1625               	andwf	(___flmul@prod+3)^0,f,c
  5885   001976  A021               	btfss	___flmul@bexp^0,0,c
  5886   001978  EFC0  F00C         	goto	u2681
  5887   00197C  EFC2  F00C         	goto	u2680
  5888   001980                     u2681:
  5889   001980  EFC3  F00C         	goto	l2749
  5890   001984                     u2680:
  5891   001984  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5892   001986                     l2749:
  5893   001986  90D8               	bcf	status,0,c
  5894   001988  3021               	rrcf	___flmul@bexp^0,w,c
  5895   00198A  6E25               	movwf	(___flmul@prod+3)^0,c
  5896   00198C                     l2751:
  5897   00198C  501B               	movf	___flmul@sign^0,w,c
  5898   00198E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5899   001990  C022  F00F         	movff	___flmul@prod,?___flmul
  5900   001994  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5901   001998  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5902   00199C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5903   0019A0                     l719:
  5904   0019A0  0012               	return		;funcret
  5905   0019A2                     __end_of___flmul:
  5906                           	callstack 0
  5907                           
  5908 ;; *************** function ___flge *****************
  5909 ;; Defined at:
  5910 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  ff1             4   39[COMRAM] unsigned char 
  5913 ;;  ff2             4   43[COMRAM] unsigned char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;		None               void
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5925 ;;      Params:         8       0       0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0
  5927 ;;      Temps:          4       0       0       0       0       0       0
  5928 ;;      Totals:        12       0       0       0       0       0       0
  5929 ;;Total ram usage:       12 bytes
  5930 ;; Hardware stack levels used: 1
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_efgtoa
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text21
  5939   0027E2                     __ptext21:
  5940                           	callstack 0
  5941   0027E2                     ___flge:
  5942                           	callstack 26
  5943   0027E2  0E00               	movlw	0
  5944   0027E4  1428               	andwf	___flge@ff1^0,w,c
  5945   0027E6  6E30               	movwf	??___flge^0,c
  5946   0027E8  0E00               	movlw	0
  5947   0027EA  1429               	andwf	(___flge@ff1+1)^0,w,c
  5948   0027EC  6E31               	movwf	(??___flge+1)^0,c
  5949   0027EE  0E80               	movlw	128
  5950   0027F0  142A               	andwf	(___flge@ff1+2)^0,w,c
  5951   0027F2  6E32               	movwf	(??___flge+2)^0,c
  5952   0027F4  0E7F               	movlw	127
  5953   0027F6  142B               	andwf	(___flge@ff1+3)^0,w,c
  5954   0027F8  6E33               	movwf	(??___flge+3)^0,c
  5955   0027FA  5030               	movf	??___flge^0,w,c
  5956   0027FC  1031               	iorwf	(??___flge+1)^0,w,c
  5957   0027FE  1032               	iorwf	(??___flge+2)^0,w,c
  5958   002800  1033               	iorwf	(??___flge+3)^0,w,c
  5959   002802  A4D8               	btfss	status,2,c
  5960   002804  EF06  F014         	goto	u2721
  5961   002808  EF08  F014         	goto	u2720
  5962   00280C                     u2721:
  5963   00280C  EF10  F014         	goto	l2783
  5964   002810                     u2720:
  5965   002810  0E00               	movlw	0
  5966   002812  6E28               	movwf	___flge@ff1^0,c
  5967   002814  0E00               	movlw	0
  5968   002816  6E29               	movwf	(___flge@ff1+1)^0,c
  5969   002818  0E00               	movlw	0
  5970   00281A  6E2A               	movwf	(___flge@ff1+2)^0,c
  5971   00281C  0E00               	movlw	0
  5972   00281E  6E2B               	movwf	(___flge@ff1+3)^0,c
  5973   002820                     l2783:
  5974   002820  0E00               	movlw	0
  5975   002822  142C               	andwf	___flge@ff2^0,w,c
  5976   002824  6E30               	movwf	??___flge^0,c
  5977   002826  0E00               	movlw	0
  5978   002828  142D               	andwf	(___flge@ff2+1)^0,w,c
  5979   00282A  6E31               	movwf	(??___flge+1)^0,c
  5980   00282C  0E80               	movlw	128
  5981   00282E  142E               	andwf	(___flge@ff2+2)^0,w,c
  5982   002830  6E32               	movwf	(??___flge+2)^0,c
  5983   002832  0E7F               	movlw	127
  5984   002834  142F               	andwf	(___flge@ff2+3)^0,w,c
  5985   002836  6E33               	movwf	(??___flge+3)^0,c
  5986   002838  5030               	movf	??___flge^0,w,c
  5987   00283A  1031               	iorwf	(??___flge+1)^0,w,c
  5988   00283C  1032               	iorwf	(??___flge+2)^0,w,c
  5989   00283E  1033               	iorwf	(??___flge+3)^0,w,c
  5990   002840  A4D8               	btfss	status,2,c
  5991   002842  EF25  F014         	goto	u2731
  5992   002846  EF27  F014         	goto	u2730
  5993   00284A                     u2731:
  5994   00284A  EF2F  F014         	goto	l2787
  5995   00284E                     u2730:
  5996   00284E  0E00               	movlw	0
  5997   002850  6E2C               	movwf	___flge@ff2^0,c
  5998   002852  0E00               	movlw	0
  5999   002854  6E2D               	movwf	(___flge@ff2+1)^0,c
  6000   002856  0E00               	movlw	0
  6001   002858  6E2E               	movwf	(___flge@ff2+2)^0,c
  6002   00285A  0E00               	movlw	0
  6003   00285C  6E2F               	movwf	(___flge@ff2+3)^0,c
  6004   00285E                     l2787:
  6005   00285E  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6006   002860  EF34  F014         	goto	u2741
  6007   002864  EF36  F014         	goto	u2740
  6008   002868                     u2741:
  6009   002868  EF3F  F014         	goto	l2791
  6010   00286C                     u2740:
  6011   00286C  6C28               	negf	___flge@ff1^0,c
  6012   00286E  1E29               	comf	(___flge@ff1+1)^0,f,c
  6013   002870  B0D8               	btfsc	status,0,c
  6014   002872  2A29               	incf	(___flge@ff1+1)^0,f,c
  6015   002874  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6016   002876  B0D8               	btfsc	status,0,c
  6017   002878  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6018   00287A  0E80               	movlw	128
  6019   00287C  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6020   00287E                     l2791:
  6021   00287E  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6022   002880  EF44  F014         	goto	u2751
  6023   002884  EF46  F014         	goto	u2750
  6024   002888                     u2751:
  6025   002888  EF4F  F014         	goto	l366
  6026   00288C                     u2750:
  6027   00288C  6C2C               	negf	___flge@ff2^0,c
  6028   00288E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6029   002890  B0D8               	btfsc	status,0,c
  6030   002892  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6031   002894  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6032   002896  B0D8               	btfsc	status,0,c
  6033   002898  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6034   00289A  0E80               	movlw	128
  6035   00289C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6036   00289E                     l366:
  6037   00289E  0E00               	movlw	0
  6038   0028A0  1A28               	xorwf	___flge@ff1^0,f,c
  6039   0028A2  0E00               	movlw	0
  6040   0028A4  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6041   0028A6  0E00               	movlw	0
  6042   0028A8  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6043   0028AA  0E80               	movlw	128
  6044   0028AC  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6045   0028AE  0E00               	movlw	0
  6046   0028B0  1A2C               	xorwf	___flge@ff2^0,f,c
  6047   0028B2  0E00               	movlw	0
  6048   0028B4  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6049   0028B6  0E00               	movlw	0
  6050   0028B8  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6051   0028BA  0E80               	movlw	128
  6052   0028BC  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6053   0028BE  502C               	movf	___flge@ff2^0,w,c
  6054   0028C0  5C28               	subwf	___flge@ff1^0,w,c
  6055   0028C2  502D               	movf	(___flge@ff2+1)^0,w,c
  6056   0028C4  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6057   0028C6  502E               	movf	(___flge@ff2+2)^0,w,c
  6058   0028C8  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6059   0028CA  502F               	movf	(___flge@ff2+3)^0,w,c
  6060   0028CC  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6061   0028CE  B0D8               	btfsc	status,0,c
  6062   0028D0  EF6C  F014         	goto	u2761
  6063   0028D4  EF6E  F014         	goto	u2760
  6064   0028D8                     u2761:
  6065   0028D8  EF71  F014         	goto	l2797
  6066   0028DC                     u2760:
  6067   0028DC  90D8               	bcf	status,0,c
  6068   0028DE  EF72  F014         	goto	l371
  6069   0028E2                     l2797:
  6070   0028E2  80D8               	bsf	status,0,c
  6071   0028E4                     l371:
  6072   0028E4  0012               	return		;funcret
  6073   0028E6                     __end_of___flge:
  6074                           	callstack 0
  6075                           
  6076 ;; *************** function ___fleq *****************
  6077 ;; Defined at:
  6078 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  ff1             4    0[COMRAM] unsigned char 
  6081 ;;  ff2             4    4[COMRAM] unsigned char 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;		None               void
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6093 ;;      Params:         8       0       0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0
  6095 ;;      Temps:          4       0       0       0       0       0       0
  6096 ;;      Totals:        12       0       0       0       0       0       0
  6097 ;;Total ram usage:       12 bytes
  6098 ;; Hardware stack levels used: 1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_efgtoa
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text22
  6107   002C1E                     __ptext22:
  6108                           	callstack 0
  6109   002C1E                     ___fleq:
  6110                           	callstack 26
  6111   002C1E  0E00               	movlw	0
  6112   002C20  1401               	andwf	___fleq@ff1^0,w,c
  6113   002C22  6E09               	movwf	??___fleq^0,c
  6114   002C24  0E00               	movlw	0
  6115   002C26  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6116   002C28  6E0A               	movwf	(??___fleq+1)^0,c
  6117   002C2A  0E80               	movlw	128
  6118   002C2C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6119   002C2E  6E0B               	movwf	(??___fleq+2)^0,c
  6120   002C30  0E7F               	movlw	127
  6121   002C32  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6122   002C34  6E0C               	movwf	(??___fleq+3)^0,c
  6123   002C36  5009               	movf	??___fleq^0,w,c
  6124   002C38  100A               	iorwf	(??___fleq+1)^0,w,c
  6125   002C3A  100B               	iorwf	(??___fleq+2)^0,w,c
  6126   002C3C  100C               	iorwf	(??___fleq+3)^0,w,c
  6127   002C3E  A4D8               	btfss	status,2,c
  6128   002C40  EF24  F016         	goto	u2691
  6129   002C44  EF26  F016         	goto	u2690
  6130   002C48                     u2691:
  6131   002C48  EF2E  F016         	goto	l2767
  6132   002C4C                     u2690:
  6133   002C4C  0E00               	movlw	0
  6134   002C4E  6E01               	movwf	___fleq@ff1^0,c
  6135   002C50  0E00               	movlw	0
  6136   002C52  6E02               	movwf	(___fleq@ff1+1)^0,c
  6137   002C54  0E00               	movlw	0
  6138   002C56  6E03               	movwf	(___fleq@ff1+2)^0,c
  6139   002C58  0E00               	movlw	0
  6140   002C5A  6E04               	movwf	(___fleq@ff1+3)^0,c
  6141   002C5C                     l2767:
  6142   002C5C  0E00               	movlw	0
  6143   002C5E  1405               	andwf	___fleq@ff2^0,w,c
  6144   002C60  6E09               	movwf	??___fleq^0,c
  6145   002C62  0E00               	movlw	0
  6146   002C64  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6147   002C66  6E0A               	movwf	(??___fleq+1)^0,c
  6148   002C68  0E80               	movlw	128
  6149   002C6A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6150   002C6C  6E0B               	movwf	(??___fleq+2)^0,c
  6151   002C6E  0E7F               	movlw	127
  6152   002C70  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6153   002C72  6E0C               	movwf	(??___fleq+3)^0,c
  6154   002C74  5009               	movf	??___fleq^0,w,c
  6155   002C76  100A               	iorwf	(??___fleq+1)^0,w,c
  6156   002C78  100B               	iorwf	(??___fleq+2)^0,w,c
  6157   002C7A  100C               	iorwf	(??___fleq+3)^0,w,c
  6158   002C7C  A4D8               	btfss	status,2,c
  6159   002C7E  EF43  F016         	goto	u2701
  6160   002C82  EF45  F016         	goto	u2700
  6161   002C86                     u2701:
  6162   002C86  EF4D  F016         	goto	l2771
  6163   002C8A                     u2700:
  6164   002C8A  0E00               	movlw	0
  6165   002C8C  6E05               	movwf	___fleq@ff2^0,c
  6166   002C8E  0E00               	movlw	0
  6167   002C90  6E06               	movwf	(___fleq@ff2+1)^0,c
  6168   002C92  0E00               	movlw	0
  6169   002C94  6E07               	movwf	(___fleq@ff2+2)^0,c
  6170   002C96  0E00               	movlw	0
  6171   002C98  6E08               	movwf	(___fleq@ff2+3)^0,c
  6172   002C9A                     l2771:
  6173   002C9A  5005               	movf	___fleq@ff2^0,w,c
  6174   002C9C  1801               	xorwf	___fleq@ff1^0,w,c
  6175   002C9E  E10F               	bnz	u2710
  6176   002CA0  5006               	movf	(___fleq@ff2+1)^0,w,c
  6177   002CA2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6178   002CA4  E10C               	bnz	u2710
  6179   002CA6  5007               	movf	(___fleq@ff2+2)^0,w,c
  6180   002CA8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6181   002CAA  E109               	bnz	u2710
  6182   002CAC  5008               	movf	(___fleq@ff2+3)^0,w,c
  6183   002CAE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6184   002CB0  B4D8               	btfsc	status,2,c
  6185   002CB2  EF5D  F016         	goto	u2711
  6186   002CB6  EF5F  F016         	goto	u2710
  6187   002CBA                     u2711:
  6188   002CBA  EF62  F016         	goto	l2775
  6189   002CBE                     u2710:
  6190   002CBE  90D8               	bcf	status,0,c
  6191   002CC0  EF63  F016         	goto	l360
  6192   002CC4                     l2775:
  6193   002CC4  80D8               	bsf	status,0,c
  6194   002CC6                     l360:
  6195   002CC6  0012               	return		;funcret
  6196   002CC8                     __end_of___fleq:
  6197                           	callstack 0
  6198                           
  6199 ;; *************** function ___fldiv *****************
  6200 ;; Defined at:
  6201 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  b               4    0[COMRAM] unsigned char 
  6204 ;;  a               4    4[COMRAM] unsigned char 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  grs             4   19[COMRAM] unsigned long 
  6207 ;;  rem             4   12[COMRAM] unsigned long 
  6208 ;;  new_exp         2   17[COMRAM] short 
  6209 ;;  aexp            1   24[COMRAM] unsigned char 
  6210 ;;  bexp            1   23[COMRAM] unsigned char 
  6211 ;;  sign            1   16[COMRAM] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  4    0[COMRAM] unsigned char 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6221 ;;      Params:         8       0       0       0       0       0       0
  6222 ;;      Locals:        13       0       0       0       0       0       0
  6223 ;;      Temps:          4       0       0       0       0       0       0
  6224 ;;      Totals:        25       0       0       0       0       0       0
  6225 ;;Total ram usage:       25 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_efgtoa
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text23
  6235   0019A2                     __ptext23:
  6236                           	callstack 0
  6237   0019A2                     ___fldiv:
  6238                           	callstack 26
  6239   0019A2  5004               	movf	(___fldiv@b+3)^0,w,c
  6240   0019A4  0B80               	andlw	128
  6241   0019A6  6E11               	movwf	___fldiv@sign^0,c
  6242   0019A8  5004               	movf	(___fldiv@b+3)^0,w,c
  6243   0019AA  2404               	addwf	(___fldiv@b+3)^0,w,c
  6244   0019AC  6E18               	movwf	___fldiv@bexp^0,c
  6245   0019AE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6246   0019B0  EFDC  F00C         	goto	u2271
  6247   0019B4  EFDE  F00C         	goto	u2270
  6248   0019B8                     u2271:
  6249   0019B8  EFDF  F00C         	goto	l2495
  6250   0019BC                     u2270:
  6251   0019BC  8018               	bsf	___fldiv@bexp^0,0,c
  6252   0019BE                     l2495:
  6253   0019BE  5018               	movf	___fldiv@bexp^0,w,c
  6254   0019C0  B4D8               	btfsc	status,2,c
  6255   0019C2  EFE5  F00C         	goto	u2281
  6256   0019C6  EFE7  F00C         	goto	u2280
  6257   0019CA                     u2281:
  6258   0019CA  EFFC  F00C         	goto	l2505
  6259   0019CE                     u2280:
  6260   0019CE  2818               	incf	___fldiv@bexp^0,w,c
  6261   0019D0  A4D8               	btfss	status,2,c
  6262   0019D2  EFED  F00C         	goto	u2291
  6263   0019D6  EFEF  F00C         	goto	u2290
  6264   0019DA                     u2291:
  6265   0019DA  EFF7  F00C         	goto	l2501
  6266   0019DE                     u2290:
  6267   0019DE  0E00               	movlw	0
  6268   0019E0  6E01               	movwf	___fldiv@b^0,c
  6269   0019E2  0E00               	movlw	0
  6270   0019E4  6E02               	movwf	(___fldiv@b+1)^0,c
  6271   0019E6  0E00               	movlw	0
  6272   0019E8  6E03               	movwf	(___fldiv@b+2)^0,c
  6273   0019EA  0E00               	movlw	0
  6274   0019EC  6E04               	movwf	(___fldiv@b+3)^0,c
  6275   0019EE                     l2501:
  6276   0019EE  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6277   0019F0  0E00               	movlw	0
  6278   0019F2  6E04               	movwf	(___fldiv@b+3)^0,c
  6279   0019F4  EF04  F00D         	goto	l2507
  6280   0019F8                     l2505:
  6281   0019F8  0E00               	movlw	0
  6282   0019FA  6E01               	movwf	___fldiv@b^0,c
  6283   0019FC  0E00               	movlw	0
  6284   0019FE  6E02               	movwf	(___fldiv@b+1)^0,c
  6285   001A00  0E00               	movlw	0
  6286   001A02  6E03               	movwf	(___fldiv@b+2)^0,c
  6287   001A04  0E00               	movlw	0
  6288   001A06  6E04               	movwf	(___fldiv@b+3)^0,c
  6289   001A08                     l2507:
  6290   001A08  5008               	movf	(___fldiv@a+3)^0,w,c
  6291   001A0A  0B80               	andlw	128
  6292   001A0C  1A11               	xorwf	___fldiv@sign^0,f,c
  6293   001A0E  5008               	movf	(___fldiv@a+3)^0,w,c
  6294   001A10  2408               	addwf	(___fldiv@a+3)^0,w,c
  6295   001A12  6E19               	movwf	___fldiv@aexp^0,c
  6296   001A14  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6297   001A16  EF0F  F00D         	goto	u2301
  6298   001A1A  EF11  F00D         	goto	u2300
  6299   001A1E                     u2301:
  6300   001A1E  EF12  F00D         	goto	l2515
  6301   001A22                     u2300:
  6302   001A22  8019               	bsf	___fldiv@aexp^0,0,c
  6303   001A24                     l2515:
  6304   001A24  5019               	movf	___fldiv@aexp^0,w,c
  6305   001A26  B4D8               	btfsc	status,2,c
  6306   001A28  EF18  F00D         	goto	u2311
  6307   001A2C  EF1A  F00D         	goto	u2310
  6308   001A30                     u2311:
  6309   001A30  EF2F  F00D         	goto	l2525
  6310   001A34                     u2310:
  6311   001A34  2819               	incf	___fldiv@aexp^0,w,c
  6312   001A36  A4D8               	btfss	status,2,c
  6313   001A38  EF20  F00D         	goto	u2321
  6314   001A3C  EF22  F00D         	goto	u2320
  6315   001A40                     u2321:
  6316   001A40  EF2A  F00D         	goto	l2521
  6317   001A44                     u2320:
  6318   001A44  0E00               	movlw	0
  6319   001A46  6E05               	movwf	___fldiv@a^0,c
  6320   001A48  0E00               	movlw	0
  6321   001A4A  6E06               	movwf	(___fldiv@a+1)^0,c
  6322   001A4C  0E00               	movlw	0
  6323   001A4E  6E07               	movwf	(___fldiv@a+2)^0,c
  6324   001A50  0E00               	movlw	0
  6325   001A52  6E08               	movwf	(___fldiv@a+3)^0,c
  6326   001A54                     l2521:
  6327   001A54  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6328   001A56  0E00               	movlw	0
  6329   001A58  6E08               	movwf	(___fldiv@a+3)^0,c
  6330   001A5A  EF37  F00D         	goto	l2527
  6331   001A5E                     l2525:
  6332   001A5E  0E00               	movlw	0
  6333   001A60  6E05               	movwf	___fldiv@a^0,c
  6334   001A62  0E00               	movlw	0
  6335   001A64  6E06               	movwf	(___fldiv@a+1)^0,c
  6336   001A66  0E00               	movlw	0
  6337   001A68  6E07               	movwf	(___fldiv@a+2)^0,c
  6338   001A6A  0E00               	movlw	0
  6339   001A6C  6E08               	movwf	(___fldiv@a+3)^0,c
  6340   001A6E                     l2527:
  6341   001A6E  5005               	movf	___fldiv@a^0,w,c
  6342   001A70  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6343   001A72  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6344   001A74  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6345   001A76  A4D8               	btfss	status,2,c
  6346   001A78  EF40  F00D         	goto	u2331
  6347   001A7C  EF42  F00D         	goto	u2330
  6348   001A80                     u2331:
  6349   001A80  EF5A  F00D         	goto	l2539
  6350   001A84                     u2330:
  6351   001A84  0E00               	movlw	0
  6352   001A86  6E01               	movwf	___fldiv@b^0,c
  6353   001A88  0E00               	movlw	0
  6354   001A8A  6E02               	movwf	(___fldiv@b+1)^0,c
  6355   001A8C  0E00               	movlw	0
  6356   001A8E  6E03               	movwf	(___fldiv@b+2)^0,c
  6357   001A90  0E00               	movlw	0
  6358   001A92  6E04               	movwf	(___fldiv@b+3)^0,c
  6359   001A94  0E80               	movlw	128
  6360   001A96  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6361   001A98  0E7F               	movlw	127
  6362   001A9A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6363   001A9C                     l2533:
  6364   001A9C  5011               	movf	___fldiv@sign^0,w,c
  6365   001A9E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6366   001AA0  C001  F001         	movff	___fldiv@b,?___fldiv
  6367   001AA4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6368   001AA8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6369   001AAC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6370   001AB0  EF9D  F00E         	goto	l683
  6371   001AB4                     l2539:
  6372   001AB4  5018               	movf	___fldiv@bexp^0,w,c
  6373   001AB6  A4D8               	btfss	status,2,c
  6374   001AB8  EF60  F00D         	goto	u2341
  6375   001ABC  EF62  F00D         	goto	u2340
  6376   001AC0                     u2341:
  6377   001AC0  EF6C  F00D         	goto	l2547
  6378   001AC4                     u2340:
  6379   001AC4  0E00               	movlw	0
  6380   001AC6  6E01               	movwf	?___fldiv^0,c
  6381   001AC8  0E00               	movlw	0
  6382   001ACA  6E02               	movwf	(?___fldiv+1)^0,c
  6383   001ACC  0E00               	movlw	0
  6384   001ACE  6E03               	movwf	(?___fldiv+2)^0,c
  6385   001AD0  0E00               	movlw	0
  6386   001AD2  6E04               	movwf	(?___fldiv+3)^0,c
  6387   001AD4  EF9D  F00E         	goto	l683
  6388   001AD8                     l2547:
  6389   001AD8  5019               	movf	___fldiv@aexp^0,w,c
  6390   001ADA  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6391   001ADE  6A0A               	clrf	(??___fldiv+1)^0,c
  6392   001AE0  5E09               	subwf	??___fldiv^0,f,c
  6393   001AE2  0E00               	movlw	0
  6394   001AE4  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6395   001AE6  0E7F               	movlw	127
  6396   001AE8  2409               	addwf	??___fldiv^0,w,c
  6397   001AEA  6E12               	movwf	___fldiv@new_exp^0,c
  6398   001AEC  0E00               	movlw	0
  6399   001AEE  200A               	addwfc	(??___fldiv+1)^0,w,c
  6400   001AF0  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6401   001AF2  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6402   001AF6  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6403   001AFA  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6404   001AFE  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6405   001B02  0E00               	movlw	0
  6406   001B04  6E01               	movwf	___fldiv@b^0,c
  6407   001B06  0E00               	movlw	0
  6408   001B08  6E02               	movwf	(___fldiv@b+1)^0,c
  6409   001B0A  0E00               	movlw	0
  6410   001B0C  6E03               	movwf	(___fldiv@b+2)^0,c
  6411   001B0E  0E00               	movlw	0
  6412   001B10  6E04               	movwf	(___fldiv@b+3)^0,c
  6413   001B12  0E00               	movlw	0
  6414   001B14  6E14               	movwf	___fldiv@grs^0,c
  6415   001B16  0E00               	movlw	0
  6416   001B18  6E15               	movwf	(___fldiv@grs+1)^0,c
  6417   001B1A  0E00               	movlw	0
  6418   001B1C  6E16               	movwf	(___fldiv@grs+2)^0,c
  6419   001B1E  0E00               	movlw	0
  6420   001B20  6E17               	movwf	(___fldiv@grs+3)^0,c
  6421   001B22  0E00               	movlw	0
  6422   001B24  6E19               	movwf	___fldiv@aexp^0,c
  6423   001B26  EFCD  F00D         	goto	l685
  6424   001B2A                     l2557:
  6425   001B2A  5019               	movf	___fldiv@aexp^0,w,c
  6426   001B2C  B4D8               	btfsc	status,2,c
  6427   001B2E  EF9B  F00D         	goto	u2351
  6428   001B32  EF9D  F00D         	goto	u2350
  6429   001B36                     u2351:
  6430   001B36  EFB4  F00D         	goto	l2565
  6431   001B3A                     u2350:
  6432   001B3A  90D8               	bcf	status,0,c
  6433   001B3C  360D               	rlcf	___fldiv@rem^0,f,c
  6434   001B3E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6435   001B40  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6436   001B42  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6437   001B44  90D8               	bcf	status,0,c
  6438   001B46  3601               	rlcf	___fldiv@b^0,f,c
  6439   001B48  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6440   001B4A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6441   001B4C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6442   001B4E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6443   001B50  EFAC  F00D         	goto	u2361
  6444   001B54  EFAE  F00D         	goto	u2360
  6445   001B58                     u2361:
  6446   001B58  EFAF  F00D         	goto	l688
  6447   001B5C                     u2360:
  6448   001B5C  8001               	bsf	___fldiv@b^0,0,c
  6449   001B5E                     l688:
  6450   001B5E  90D8               	bcf	status,0,c
  6451   001B60  3614               	rlcf	___fldiv@grs^0,f,c
  6452   001B62  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6453   001B64  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6454   001B66  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6455   001B68                     l2565:
  6456   001B68  5005               	movf	___fldiv@a^0,w,c
  6457   001B6A  5C0D               	subwf	___fldiv@rem^0,w,c
  6458   001B6C  5006               	movf	(___fldiv@a+1)^0,w,c
  6459   001B6E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6460   001B70  5007               	movf	(___fldiv@a+2)^0,w,c
  6461   001B72  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6462   001B74  5008               	movf	(___fldiv@a+3)^0,w,c
  6463   001B76  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6464   001B78  A0D8               	btfss	status,0,c
  6465   001B7A  EFC1  F00D         	goto	u2371
  6466   001B7E  EFC3  F00D         	goto	u2370
  6467   001B82                     u2371:
  6468   001B82  EFCC  F00D         	goto	l2571
  6469   001B86                     u2370:
  6470   001B86  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6471   001B88  5005               	movf	___fldiv@a^0,w,c
  6472   001B8A  5E0D               	subwf	___fldiv@rem^0,f,c
  6473   001B8C  5006               	movf	(___fldiv@a+1)^0,w,c
  6474   001B8E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6475   001B90  5007               	movf	(___fldiv@a+2)^0,w,c
  6476   001B92  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6477   001B94  5008               	movf	(___fldiv@a+3)^0,w,c
  6478   001B96  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6479   001B98                     l2571:
  6480   001B98  2A19               	incf	___fldiv@aexp^0,f,c
  6481   001B9A                     l685:
  6482   001B9A  0E19               	movlw	25
  6483   001B9C  6419               	cpfsgt	___fldiv@aexp^0,c
  6484   001B9E  EFD3  F00D         	goto	u2381
  6485   001BA2  EFD5  F00D         	goto	u2380
  6486   001BA6                     u2381:
  6487   001BA6  EF95  F00D         	goto	l2557
  6488   001BAA                     u2380:
  6489   001BAA  500D               	movf	___fldiv@rem^0,w,c
  6490   001BAC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6491   001BAE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6492   001BB0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6493   001BB2  B4D8               	btfsc	status,2,c
  6494   001BB4  EFDE  F00D         	goto	u2391
  6495   001BB8  EFE0  F00D         	goto	u2390
  6496   001BBC                     u2391:
  6497   001BBC  EFF8  F00D         	goto	l2583
  6498   001BC0                     u2390:
  6499   001BC0  8014               	bsf	___fldiv@grs^0,0,c
  6500   001BC2  EFF8  F00D         	goto	l2583
  6501   001BC6                     l2577:
  6502   001BC6  90D8               	bcf	status,0,c
  6503   001BC8  3601               	rlcf	___fldiv@b^0,f,c
  6504   001BCA  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6505   001BCC  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6506   001BCE  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6507   001BD0  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6508   001BD2  EFED  F00D         	goto	u2401
  6509   001BD6  EFEF  F00D         	goto	u2400
  6510   001BDA                     u2401:
  6511   001BDA  EFF0  F00D         	goto	l694
  6512   001BDE                     u2400:
  6513   001BDE  8001               	bsf	___fldiv@b^0,0,c
  6514   001BE0                     l694:
  6515   001BE0  90D8               	bcf	status,0,c
  6516   001BE2  3614               	rlcf	___fldiv@grs^0,f,c
  6517   001BE4  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6518   001BE6  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6519   001BE8  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6520   001BEA  0612               	decf	___fldiv@new_exp^0,f,c
  6521   001BEC  A0D8               	btfss	status,0,c
  6522   001BEE  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6523   001BF0                     l2583:
  6524   001BF0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6525   001BF2  EFFD  F00D         	goto	u2411
  6526   001BF6  EFFF  F00D         	goto	u2410
  6527   001BFA                     u2411:
  6528   001BFA  EFE3  F00D         	goto	l2577
  6529   001BFE                     u2410:
  6530   001BFE  0E00               	movlw	0
  6531   001C00  6E19               	movwf	___fldiv@aexp^0,c
  6532   001C02  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6533   001C04  EF06  F00E         	goto	u2421
  6534   001C08  EF08  F00E         	goto	u2420
  6535   001C0C                     u2421:
  6536   001C0C  EF2C  F00E         	goto	l696
  6537   001C10                     u2420:
  6538   001C10  0EFF               	movlw	255
  6539   001C12  1414               	andwf	___fldiv@grs^0,w,c
  6540   001C14  6E09               	movwf	??___fldiv^0,c
  6541   001C16  0EFF               	movlw	255
  6542   001C18  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6543   001C1A  6E0A               	movwf	(??___fldiv+1)^0,c
  6544   001C1C  0EFF               	movlw	255
  6545   001C1E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6546   001C20  6E0B               	movwf	(??___fldiv+2)^0,c
  6547   001C22  0E7F               	movlw	127
  6548   001C24  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6549   001C26  6E0C               	movwf	(??___fldiv+3)^0,c
  6550   001C28  5009               	movf	??___fldiv^0,w,c
  6551   001C2A  100A               	iorwf	(??___fldiv+1)^0,w,c
  6552   001C2C  100B               	iorwf	(??___fldiv+2)^0,w,c
  6553   001C2E  100C               	iorwf	(??___fldiv+3)^0,w,c
  6554   001C30  B4D8               	btfsc	status,2,c
  6555   001C32  EF1D  F00E         	goto	u2431
  6556   001C36  EF1F  F00E         	goto	u2430
  6557   001C3A                     u2431:
  6558   001C3A  EF23  F00E         	goto	l697
  6559   001C3E                     u2430:
  6560   001C3E                     l2591:
  6561   001C3E  0E01               	movlw	1
  6562   001C40  6E19               	movwf	___fldiv@aexp^0,c
  6563   001C42  EF2C  F00E         	goto	l696
  6564   001C46                     l697:
  6565   001C46  A001               	btfss	___fldiv@b^0,0,c
  6566   001C48  EF28  F00E         	goto	u2441
  6567   001C4C  EF2A  F00E         	goto	u2440
  6568   001C50                     u2441:
  6569   001C50  EF2C  F00E         	goto	l696
  6570   001C54                     u2440:
  6571   001C54  EF1F  F00E         	goto	l2591
  6572   001C58                     l696:
  6573   001C58  5019               	movf	___fldiv@aexp^0,w,c
  6574   001C5A  B4D8               	btfsc	status,2,c
  6575   001C5C  EF32  F00E         	goto	u2451
  6576   001C60  EF34  F00E         	goto	u2450
  6577   001C64                     u2451:
  6578   001C64  EF58  F00E         	goto	l2603
  6579   001C68                     u2450:
  6580   001C68  0E01               	movlw	1
  6581   001C6A  2601               	addwf	___fldiv@b^0,f,c
  6582   001C6C  0E00               	movlw	0
  6583   001C6E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6584   001C70  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6585   001C72  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6586   001C74  A004               	btfss	(___fldiv@b+3)^0,0,c
  6587   001C76  EF3F  F00E         	goto	u2461
  6588   001C7A  EF41  F00E         	goto	u2460
  6589   001C7E                     u2461:
  6590   001C7E  EF58  F00E         	goto	l2603
  6591   001C82                     u2460:
  6592   001C82  C001  F009         	movff	___fldiv@b,??___fldiv
  6593   001C86  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6594   001C8A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6595   001C8E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6596   001C92  340C               	rlcf	(??___fldiv+3)^0,w,c
  6597   001C94  320C               	rrcf	(??___fldiv+3)^0,f,c
  6598   001C96  320B               	rrcf	(??___fldiv+2)^0,f,c
  6599   001C98  320A               	rrcf	(??___fldiv+1)^0,f,c
  6600   001C9A  3209               	rrcf	??___fldiv^0,f,c
  6601   001C9C  C009  F001         	movff	??___fldiv,___fldiv@b
  6602   001CA0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6603   001CA4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6604   001CA8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6605   001CAC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6606   001CAE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6607   001CB0                     l2603:
  6608   001CB0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6609   001CB2  EF63  F00E         	goto	u2471
  6610   001CB6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6611   001CB8  E108               	bnz	u2470
  6612   001CBA  2812               	incf	___fldiv@new_exp^0,w,c
  6613   001CBC  A0D8               	btfss	status,0,c
  6614   001CBE  EF63  F00E         	goto	u2471
  6615   001CC2  EF65  F00E         	goto	u2470
  6616   001CC6                     u2471:
  6617   001CC6  EF70  F00E         	goto	l2607
  6618   001CCA                     u2470:
  6619   001CCA  0E00               	movlw	0
  6620   001CCC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6621   001CCE  6812               	setf	___fldiv@new_exp^0,c
  6622   001CD0  0E00               	movlw	0
  6623   001CD2  6E01               	movwf	___fldiv@b^0,c
  6624   001CD4  0E00               	movlw	0
  6625   001CD6  6E02               	movwf	(___fldiv@b+1)^0,c
  6626   001CD8  0E00               	movlw	0
  6627   001CDA  6E03               	movwf	(___fldiv@b+2)^0,c
  6628   001CDC  0E00               	movlw	0
  6629   001CDE  6E04               	movwf	(___fldiv@b+3)^0,c
  6630   001CE0                     l2607:
  6631   001CE0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6632   001CE2  EF7D  F00E         	goto	u2480
  6633   001CE6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6634   001CE8  E106               	bnz	u2481
  6635   001CEA  0412               	decf	___fldiv@new_exp^0,w,c
  6636   001CEC  B0D8               	btfsc	status,0,c
  6637   001CEE  EF7B  F00E         	goto	u2481
  6638   001CF2  EF7D  F00E         	goto	u2480
  6639   001CF6                     u2481:
  6640   001CF6  EF8B  F00E         	goto	l2611
  6641   001CFA                     u2480:
  6642   001CFA  0E00               	movlw	0
  6643   001CFC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6644   001CFE  0E00               	movlw	0
  6645   001D00  6E12               	movwf	___fldiv@new_exp^0,c
  6646   001D02  0E00               	movlw	0
  6647   001D04  6E01               	movwf	___fldiv@b^0,c
  6648   001D06  0E00               	movlw	0
  6649   001D08  6E02               	movwf	(___fldiv@b+1)^0,c
  6650   001D0A  0E00               	movlw	0
  6651   001D0C  6E03               	movwf	(___fldiv@b+2)^0,c
  6652   001D0E  0E00               	movlw	0
  6653   001D10  6E04               	movwf	(___fldiv@b+3)^0,c
  6654   001D12  0E00               	movlw	0
  6655   001D14  6E11               	movwf	___fldiv@sign^0,c
  6656   001D16                     l2611:
  6657   001D16  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6658   001D1A  A018               	btfss	___fldiv@bexp^0,0,c
  6659   001D1C  EF92  F00E         	goto	u2491
  6660   001D20  EF94  F00E         	goto	u2490
  6661   001D24                     u2491:
  6662   001D24  EF97  F00E         	goto	l2617
  6663   001D28                     u2490:
  6664   001D28  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6665   001D2A  EF98  F00E         	goto	l2619
  6666   001D2E                     l2617:
  6667   001D2E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6668   001D30                     l2619:
  6669   001D30  90D8               	bcf	status,0,c
  6670   001D32  3018               	rrcf	___fldiv@bexp^0,w,c
  6671   001D34  6E04               	movwf	(___fldiv@b+3)^0,c
  6672   001D36  EF4E  F00D         	goto	l2533
  6673   001D3A                     l683:
  6674   001D3A  0012               	return		;funcret
  6675   001D3C                     __end_of___fldiv:
  6676                           	callstack 0
  6677                           
  6678 ;; *************** function _lcd_puts *****************
  6679 ;; Defined at:
  6680 ;;		line 56 in file "LCD4.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6683 ;;		 -> line(41), 
  6684 ;;  lcd_no          1    6[COMRAM] unsigned char 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6696 ;;      Params:         3       0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0
  6699 ;;      Totals:         3       0       0       0       0       0       0
  6700 ;;Total ram usage:        3 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 2
  6703 ;; This function calls:
  6704 ;;		_lcd_write
  6705 ;; This function is called by:
  6706 ;;		_main
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text24
  6711   003052                     __ptext24:
  6712                           	callstack 0
  6713   003052                     _lcd_puts:
  6714                           	callstack 28
  6715   003052                     
  6716                           ;LCD4.c: 57:     PORTDbits.RD4 = 1;
  6717   003052  8883               	bsf	131,4,c	;volatile
  6718                           
  6719                           ;LCD4.c: 58:     while (*s)
  6720   003054  EF37  F018         	goto	l3337
  6721   003058                     l3333:
  6722                           
  6723                           ;LCD4.c: 59:         lcd_write(*s++, lcd_no);
  6724   003058  C007  F002         	movff	lcd_puts@lcd_no,lcd_write@lcd_no
  6725   00305C  C005  FFD9         	movff	lcd_puts@s,fsr2l
  6726   003060  C006  FFDA         	movff	lcd_puts@s+1,fsr2h
  6727   003064  50DF               	movf	indf2,w,c
  6728   003066  ECEE  F017         	call	_lcd_write
  6729   00306A  4A05               	infsnz	lcd_puts@s^0,f,c
  6730   00306C  2A06               	incf	(lcd_puts@s+1)^0,f,c
  6731   00306E                     l3337:
  6732                           
  6733                           ;LCD4.c: 58:     while (*s)
  6734   00306E  C005  FFD9         	movff	lcd_puts@s,fsr2l
  6735   003072  C006  FFDA         	movff	lcd_puts@s+1,fsr2h
  6736   003076  50DF               	movf	indf2,w,c
  6737   003078  A4D8               	btfss	status,2,c
  6738   00307A  EF41  F018         	goto	u3521
  6739   00307E  EF43  F018         	goto	u3520
  6740   003082                     u3521:
  6741   003082  EF2C  F018         	goto	l3333
  6742   003086                     u3520:
  6743   003086  0012               	return		;funcret
  6744   003088                     __end_of_lcd_puts:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function _lcd_init *****************
  6748 ;; Defined at:
  6749 ;;		line 78 in file "LCD4.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  lcd_no          1    wreg     unsigned char 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  lcd_no          1    7[COMRAM] unsigned char 
  6754 ;;  init_value      1    0        unsigned char 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg, status,2, status,0, cstack
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6764 ;;      Params:         0       0       0       0       0       0       0
  6765 ;;      Locals:         1       0       0       0       0       0       0
  6766 ;;      Temps:          1       0       0       0       0       0       0
  6767 ;;      Totals:         2       0       0       0       0       0       0
  6768 ;;Total ram usage:        2 bytes
  6769 ;; Hardware stack levels used: 1
  6770 ;; Hardware stack levels required when called: 3
  6771 ;; This function calls:
  6772 ;;		_LCD_STROBE
  6773 ;;		_lcd_clear
  6774 ;;		_lcd_write
  6775 ;; This function is called by:
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text25
  6781   002CC8                     __ptext25:
  6782                           	callstack 0
  6783   002CC8                     _lcd_init:
  6784                           	callstack 27
  6785                           
  6786                           ;incstack = 0
  6787                           ;lcd_init@lcd_no stored from wreg
  6788   002CC8  6E08               	movwf	lcd_init@lcd_no^0,c
  6789   002CCA                     
  6790                           ;LCD4.c: 81:     PORTDbits.RD4 = 0;
  6791   002CCA  9883               	bcf	131,4,c	;volatile
  6792   002CCC                     
  6793                           ;LCD4.c: 82:     if (lcd_no == 1) {
  6794   002CCC  0408               	decf	lcd_init@lcd_no^0,w,c
  6795   002CCE  A4D8               	btfss	status,2,c
  6796   002CD0  EF6C  F016         	goto	u3501
  6797   002CD4  EF6E  F016         	goto	u3500
  6798   002CD8                     u3501:
  6799   002CD8  EF6F  F016         	goto	l3293
  6800   002CDC                     u3500:
  6801   002CDC                     
  6802                           ;LCD4.c: 83:         PORTDbits.RD5 = 0;
  6803   002CDC  9A83               	bcf	131,5,c	;volatile
  6804   002CDE                     l3293:
  6805                           
  6806                           ;LCD4.c: 85:     if (lcd_no == 2) {
  6807   002CDE  0E02               	movlw	2
  6808   002CE0  1808               	xorwf	lcd_init@lcd_no^0,w,c
  6809   002CE2  A4D8               	btfss	status,2,c
  6810   002CE4  EF76  F016         	goto	u3511
  6811   002CE8  EF78  F016         	goto	u3510
  6812   002CEC                     u3511:
  6813   002CEC  EF79  F016         	goto	l3297
  6814   002CF0                     u3510:
  6815   002CF0                     
  6816                           ;LCD4.c: 86:         PORTDbits.RD6 = 0;
  6817   002CF0  9C83               	bcf	131,6,c	;volatile
  6818   002CF2                     l3297:
  6819                           
  6820                           ;LCD4.c: 88:     _delay((unsigned long)((15)*(8000000/4000.0)));
  6821   002CF2  0E27               	movlw	39
  6822   002CF4  6E07               	movwf	??_lcd_init^0,c
  6823   002CF6  0EF5               	movlw	245
  6824   002CF8                     u3657:
  6825   002CF8  2EE8               	decfsz	wreg,f,c
  6826   002CFA  D7FE               	bra	u3657
  6827   002CFC  2E07               	decfsz	??_lcd_init^0,f,c
  6828   002CFE  D7FC               	bra	u3657
  6829   002D00  F000               	nop	
  6830   002D02                     
  6831                           ;LCD4.c: 89:     PORTD = (PORTD & 0xF0) + init_value;
  6832   002D02  5083               	movf	131,w,c	;volatile
  6833   002D04  0BF0               	andlw	240
  6834   002D06  0F03               	addlw	3
  6835   002D08  6E83               	movwf	131,c	;volatile
  6836   002D0A                     
  6837                           ;LCD4.c: 90:     LCD_STROBE(lcd_no);
  6838   002D0A  5008               	movf	lcd_init@lcd_no^0,w,c
  6839   002D0C  EC44  F018         	call	_LCD_STROBE
  6840   002D10                     
  6841                           ;LCD4.c: 91:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6842   002D10  0E0D               	movlw	13
  6843   002D12  6E07               	movwf	??_lcd_init^0,c
  6844   002D14  0EFC               	movlw	252
  6845   002D16                     u3667:
  6846   002D16  2EE8               	decfsz	wreg,f,c
  6847   002D18  D7FE               	bra	u3667
  6848   002D1A  2E07               	decfsz	??_lcd_init^0,f,c
  6849   002D1C  D7FC               	bra	u3667
  6850   002D1E                     
  6851                           ;LCD4.c: 92:     LCD_STROBE(lcd_no);
  6852   002D1E  5008               	movf	lcd_init@lcd_no^0,w,c
  6853   002D20  EC44  F018         	call	_LCD_STROBE
  6854   002D24                     
  6855                           ;LCD4.c: 93:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  6856   002D24  0E85               	movlw	133
  6857   002D26                     u3677:
  6858   002D26  2EE8               	decfsz	wreg,f,c
  6859   002D28  D7FE               	bra	u3677
  6860   002D2A  F000               	nop	
  6861   002D2C                     
  6862                           ;LCD4.c: 94:     LCD_STROBE(lcd_no);
  6863   002D2C  5008               	movf	lcd_init@lcd_no^0,w,c
  6864   002D2E  EC44  F018         	call	_LCD_STROBE
  6865   002D32                     
  6866                           ;LCD4.c: 95:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  6867   002D32  0E85               	movlw	133
  6868   002D34                     u3687:
  6869   002D34  2EE8               	decfsz	wreg,f,c
  6870   002D36  D7FE               	bra	u3687
  6871   002D38  F000               	nop	
  6872   002D3A                     
  6873                           ;LCD4.c: 96:     PORTD = (PORTD & 0xF0) + 2;
  6874   002D3A  5083               	movf	131,w,c	;volatile
  6875   002D3C  0BF0               	andlw	240
  6876   002D3E  0F02               	addlw	2
  6877   002D40  6E83               	movwf	131,c	;volatile
  6878                           
  6879                           ;LCD4.c: 97:     LCD_STROBE(lcd_no);
  6880   002D42  5008               	movf	lcd_init@lcd_no^0,w,c
  6881   002D44  EC44  F018         	call	_LCD_STROBE
  6882                           
  6883                           ;LCD4.c: 98:     lcd_write(0x28, lcd_no);
  6884   002D48  C008  F002         	movff	lcd_init@lcd_no,lcd_write@lcd_no
  6885   002D4C  0E28               	movlw	40
  6886   002D4E  ECEE  F017         	call	_lcd_write
  6887                           
  6888                           ;LCD4.c: 99:     lcd_write(0xC, lcd_no);
  6889   002D52  C008  F002         	movff	lcd_init@lcd_no,lcd_write@lcd_no
  6890   002D56  0E0C               	movlw	12
  6891   002D58  ECEE  F017         	call	_lcd_write
  6892                           
  6893                           ;LCD4.c: 100:     lcd_clear(lcd_no);
  6894   002D5C  5008               	movf	lcd_init@lcd_no^0,w,c
  6895   002D5E  EC83  F018         	call	_lcd_clear
  6896                           
  6897                           ;LCD4.c: 101:     lcd_write(0x6, lcd_no);
  6898   002D62  C008  F002         	movff	lcd_init@lcd_no,lcd_write@lcd_no
  6899   002D66  0E06               	movlw	6
  6900   002D68  ECEE  F017         	call	_lcd_write
  6901   002D6C  0012               	return		;funcret
  6902   002D6E                     __end_of_lcd_init:
  6903                           	callstack 0
  6904                           
  6905 ;; *************** function _lcd_clear *****************
  6906 ;; Defined at:
  6907 ;;		line 48 in file "LCD4.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  lcd_no          1    wreg     unsigned char 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  lcd_no          1    5[COMRAM] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2, status,0, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6921 ;;      Params:         0       0       0       0       0       0       0
  6922 ;;      Locals:         1       0       0       0       0       0       0
  6923 ;;      Temps:          1       0       0       0       0       0       0
  6924 ;;      Totals:         2       0       0       0       0       0       0
  6925 ;;Total ram usage:        2 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; Hardware stack levels required when called: 2
  6928 ;; This function calls:
  6929 ;;		_lcd_write
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;;		_lcd_init
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text26
  6937   003106                     __ptext26:
  6938                           	callstack 0
  6939   003106                     _lcd_clear:
  6940                           	callstack 27
  6941                           
  6942                           ;incstack = 0
  6943                           ;lcd_clear@lcd_no stored from wreg
  6944   003106  6E06               	movwf	lcd_clear@lcd_no^0,c
  6945   003108                     
  6946                           ;LCD4.c: 49:     PORTDbits.RD4 = 0;
  6947   003108  9883               	bcf	131,4,c	;volatile
  6948   00310A                     
  6949                           ;LCD4.c: 50:     lcd_write(0x1, lcd_no);
  6950   00310A  C006  F002         	movff	lcd_clear@lcd_no,lcd_write@lcd_no
  6951   00310E  0E01               	movlw	1
  6952   003110  ECEE  F017         	call	_lcd_write
  6953   003114                     
  6954                           ;LCD4.c: 51:     _delay((unsigned long)((2)*(8000000/4000.0)));
  6955   003114  0E06               	movlw	6
  6956   003116  6E05               	movwf	??_lcd_clear^0,c
  6957   003118  0E30               	movlw	48
  6958   00311A                     u3697:
  6959   00311A  2EE8               	decfsz	wreg,f,c
  6960   00311C  D7FE               	bra	u3697
  6961   00311E  2E05               	decfsz	??_lcd_clear^0,f,c
  6962   003120  D7FC               	bra	u3697
  6963   003122  D000               	nop2	
  6964   003124  0012               	return		;funcret
  6965   003126                     __end_of_lcd_clear:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function _lcd_goto *****************
  6969 ;; Defined at:
  6970 ;;		line 71 in file "LCD4.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  pos             1    wreg     unsigned char 
  6973 ;;  lcd_no          1    4[COMRAM] unsigned char 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  pos             1    5[COMRAM] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6985 ;;      Params:         1       0       0       0       0       0       0
  6986 ;;      Locals:         1       0       0       0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0
  6988 ;;      Totals:         2       0       0       0       0       0       0
  6989 ;;Total ram usage:        2 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; Hardware stack levels required when called: 2
  6992 ;; This function calls:
  6993 ;;		_lcd_write
  6994 ;; This function is called by:
  6995 ;;		_main
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text27
  7000   003126                     __ptext27:
  7001                           	callstack 0
  7002   003126                     _lcd_goto:
  7003                           	callstack 28
  7004                           
  7005                           ;incstack = 0
  7006                           ;lcd_goto@pos stored from wreg
  7007   003126  6E06               	movwf	lcd_goto@pos^0,c
  7008   003128                     
  7009                           ;LCD4.c: 72:     PORTDbits.RD4 = 0;
  7010   003128  9883               	bcf	131,4,c	;volatile
  7011   00312A                     
  7012                           ;LCD4.c: 73:     lcd_write(0x80 + pos, lcd_no);
  7013   00312A  C005  F002         	movff	lcd_goto@lcd_no,lcd_write@lcd_no
  7014   00312E  5006               	movf	lcd_goto@pos^0,w,c
  7015   003130  0F80               	addlw	128
  7016   003132  ECEE  F017         	call	_lcd_write
  7017   003136  0012               	return		;funcret
  7018   003138                     __end_of_lcd_goto:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _lcd_write *****************
  7022 ;; Defined at:
  7023 ;;		line 38 in file "LCD4.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  c               1    wreg     unsigned char 
  7026 ;;  lcd_no          1    1[COMRAM] unsigned char 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  c               1    3[COMRAM] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7038 ;;      Params:         1       0       0       0       0       0       0
  7039 ;;      Locals:         1       0       0       0       0       0       0
  7040 ;;      Temps:          1       0       0       0       0       0       0
  7041 ;;      Totals:         3       0       0       0       0       0       0
  7042 ;;Total ram usage:        3 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; Hardware stack levels required when called: 1
  7045 ;; This function calls:
  7046 ;;		_LCD_STROBE
  7047 ;; This function is called by:
  7048 ;;		_lcd_clear
  7049 ;;		_lcd_puts
  7050 ;;		_lcd_goto
  7051 ;;		_lcd_init
  7052 ;;		_lcd_putch
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text28
  7057   002FDC                     __ptext28:
  7058                           	callstack 0
  7059   002FDC                     _lcd_write:
  7060                           	callstack 28
  7061                           
  7062                           ;incstack = 0
  7063                           ;lcd_write@c stored from wreg
  7064   002FDC  6E04               	movwf	lcd_write@c^0,c
  7065   002FDE                     
  7066                           ;LCD4.c: 39:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7067   002FDE  0E1A               	movlw	26
  7068   002FE0                     u3707:
  7069   002FE0  2EE8               	decfsz	wreg,f,c
  7070   002FE2  D7FE               	bra	u3707
  7071   002FE4  D000               	nop2	
  7072   002FE6                     
  7073                           ;LCD4.c: 40:     PORTD = (PORTD & 0xF0)+((c >> 4) & 0x0F);
  7074   002FE6  C004  F003         	movff	lcd_write@c,??_lcd_write
  7075   002FEA  3A03               	swapf	??_lcd_write^0,f,c
  7076   002FEC  0E0F               	movlw	15
  7077   002FEE  1603               	andwf	??_lcd_write^0,f,c
  7078   002FF0  0E0F               	movlw	15
  7079   002FF2  1603               	andwf	??_lcd_write^0,f,c
  7080   002FF4  5083               	movf	131,w,c	;volatile
  7081   002FF6  0BF0               	andlw	240
  7082   002FF8  2403               	addwf	??_lcd_write^0,w,c
  7083   002FFA  6E83               	movwf	131,c	;volatile
  7084   002FFC                     
  7085                           ;LCD4.c: 41:     LCD_STROBE(lcd_no);
  7086   002FFC  5002               	movf	lcd_write@lcd_no^0,w,c
  7087   002FFE  EC44  F018         	call	_LCD_STROBE
  7088   003002                     
  7089                           ;LCD4.c: 42:     PORTD = (PORTD & 0xF0)+(c & 0x0F);
  7090   003002  C004  F003         	movff	lcd_write@c,??_lcd_write
  7091   003006  0E0F               	movlw	15
  7092   003008  1603               	andwf	??_lcd_write^0,f,c
  7093   00300A  5083               	movf	131,w,c	;volatile
  7094   00300C  0BF0               	andlw	240
  7095   00300E  2403               	addwf	??_lcd_write^0,w,c
  7096   003010  6E83               	movwf	131,c	;volatile
  7097   003012                     
  7098                           ;LCD4.c: 43:     LCD_STROBE(lcd_no);
  7099   003012  5002               	movf	lcd_write@lcd_no^0,w,c
  7100   003014  EC44  F018         	call	_LCD_STROBE
  7101   003018  0012               	return		;funcret
  7102   00301A                     __end_of_lcd_write:
  7103                           	callstack 0
  7104                           
  7105 ;; *************** function _LCD_STROBE *****************
  7106 ;; Defined at:
  7107 ;;		line 25 in file "LCD4.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  lcd_no          1    wreg     unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  lcd_no          1    0[COMRAM] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7121 ;;      Params:         0       0       0       0       0       0       0
  7122 ;;      Locals:         1       0       0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0
  7124 ;;      Totals:         1       0       0       0       0       0       0
  7125 ;;Total ram usage:        1 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; This function calls:
  7128 ;;		Nothing
  7129 ;; This function is called by:
  7130 ;;		_lcd_write
  7131 ;;		_lcd_init
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text29
  7136   003088                     __ptext29:
  7137                           	callstack 0
  7138   003088                     _LCD_STROBE:
  7139                           	callstack 28
  7140                           
  7141                           ;incstack = 0
  7142                           ;LCD_STROBE@lcd_no stored from wreg
  7143   003088  6E01               	movwf	LCD_STROBE@lcd_no^0,c
  7144   00308A                     
  7145                           ;LCD4.c: 26:     if (lcd_no == 1) {
  7146   00308A  0401               	decf	LCD_STROBE@lcd_no^0,w,c
  7147   00308C  A4D8               	btfss	status,2,c
  7148   00308E  EF4B  F018         	goto	u3091
  7149   003092  EF4D  F018         	goto	u3090
  7150   003096                     u3091:
  7151   003096  EF4F  F018         	goto	l2945
  7152   00309A                     u3090:
  7153   00309A                     
  7154                           ;LCD4.c: 27:         PORTDbits.RD5 = 1;
  7155   00309A  8A83               	bsf	131,5,c	;volatile
  7156                           
  7157                           ;LCD4.c: 28:         PORTDbits.RD5 = 0;
  7158   00309C  9A83               	bcf	131,5,c	;volatile
  7159   00309E                     l2945:
  7160                           
  7161                           ;LCD4.c: 30:     if (lcd_no == 2) {
  7162   00309E  0E02               	movlw	2
  7163   0030A0  1801               	xorwf	LCD_STROBE@lcd_no^0,w,c
  7164   0030A2  A4D8               	btfss	status,2,c
  7165   0030A4  EF56  F018         	goto	u3101
  7166   0030A8  EF58  F018         	goto	u3100
  7167   0030AC                     u3101:
  7168   0030AC  EF5A  F018         	goto	l75
  7169   0030B0                     u3100:
  7170   0030B0                     
  7171                           ;LCD4.c: 31:         PORTDbits.RD6 = 1;
  7172   0030B0  8C83               	bsf	131,6,c	;volatile
  7173                           
  7174                           ;LCD4.c: 32:         PORTDbits.RD6 = 0;
  7175   0030B2  9C83               	bcf	131,6,c	;volatile
  7176   0030B4                     l75:
  7177   0030B4  0012               	return		;funcret
  7178   0030B6                     __end_of_LCD_STROBE:
  7179                           	callstack 0
  7180                           
  7181 ;; *************** function ___xxtofl *****************
  7182 ;; Defined at:
  7183 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  sign            1    wreg     unsigned char 
  7186 ;;  val             4    0[COMRAM] long 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  sign            1    8[COMRAM] unsigned char 
  7189 ;;  arg             4   10[COMRAM] unsigned long 
  7190 ;;  exp             1    9[COMRAM] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  4    0[COMRAM] unsigned char 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7200 ;;      Params:         4       0       0       0       0       0       0
  7201 ;;      Locals:         6       0       0       0       0       0       0
  7202 ;;      Temps:          4       0       0       0       0       0       0
  7203 ;;      Totals:        14       0       0       0       0       0       0
  7204 ;;Total ram usage:       14 bytes
  7205 ;; Hardware stack levels used: 1
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_main
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           	psect	text30
  7214   002528                     __ptext30:
  7215                           	callstack 0
  7216   002528                     ___xxtofl:
  7217                           	callstack 30
  7218                           
  7219                           ;incstack = 0
  7220                           ;___xxtofl@sign stored from wreg
  7221   002528  6E09               	movwf	___xxtofl@sign^0,c
  7222   00252A  5009               	movf	___xxtofl@sign^0,w,c
  7223   00252C  B4D8               	btfsc	status,2,c
  7224   00252E  EF9B  F012         	goto	u3531
  7225   002532  EF9D  F012         	goto	u3530
  7226   002536                     u3531:
  7227   002536  EFBF  F012         	goto	l756
  7228   00253A                     u3530:
  7229   00253A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7230   00253C  EFA4  F012         	goto	u3540
  7231   002540  EFA2  F012         	goto	u3541
  7232   002544                     u3541:
  7233   002544  EFBF  F012         	goto	l756
  7234   002548                     u3540:
  7235   002548  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7236   00254C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7237   002550  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7238   002554  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7239   002558  1E05               	comf	??___xxtofl^0,f,c
  7240   00255A  1E06               	comf	(??___xxtofl+1)^0,f,c
  7241   00255C  1E07               	comf	(??___xxtofl+2)^0,f,c
  7242   00255E  1E08               	comf	(??___xxtofl+3)^0,f,c
  7243   002560  2A05               	incf	??___xxtofl^0,f,c
  7244   002562  0E00               	movlw	0
  7245   002564  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7246   002566  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7247   002568  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7248   00256A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7249   00256E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7250   002572  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7251   002576  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7252   00257A  EFC7  F012         	goto	l3345
  7253   00257E                     l756:
  7254   00257E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7255   002582  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7256   002586  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7257   00258A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7258   00258E                     l3345:
  7259   00258E  5001               	movf	___xxtofl@val^0,w,c
  7260   002590  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7261   002592  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7262   002594  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7263   002596  A4D8               	btfss	status,2,c
  7264   002598  EFD0  F012         	goto	u3551
  7265   00259C  EFD2  F012         	goto	u3550
  7266   0025A0                     u3551:
  7267   0025A0  EFDC  F012         	goto	l3351
  7268   0025A4                     u3550:
  7269   0025A4  0E00               	movlw	0
  7270   0025A6  6E01               	movwf	?___xxtofl^0,c
  7271   0025A8  0E00               	movlw	0
  7272   0025AA  6E02               	movwf	(?___xxtofl+1)^0,c
  7273   0025AC  0E00               	movlw	0
  7274   0025AE  6E03               	movwf	(?___xxtofl+2)^0,c
  7275   0025B0  0E00               	movlw	0
  7276   0025B2  6E04               	movwf	(?___xxtofl+3)^0,c
  7277   0025B4  EF6D  F013         	goto	l759
  7278   0025B8                     l3351:
  7279   0025B8  0E96               	movlw	150
  7280   0025BA  6E0A               	movwf	___xxtofl@exp^0,c
  7281   0025BC  EFE6  F012         	goto	l3355
  7282   0025C0                     l3353:
  7283   0025C0  2A0A               	incf	___xxtofl@exp^0,f,c
  7284   0025C2  90D8               	bcf	status,0,c
  7285   0025C4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7286   0025C6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7287   0025C8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7288   0025CA  320B               	rrcf	___xxtofl@arg^0,f,c
  7289   0025CC                     l3355:
  7290   0025CC  0E00               	movlw	0
  7291   0025CE  140B               	andwf	___xxtofl@arg^0,w,c
  7292   0025D0  6E05               	movwf	??___xxtofl^0,c
  7293   0025D2  0E00               	movlw	0
  7294   0025D4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7295   0025D6  6E06               	movwf	(??___xxtofl+1)^0,c
  7296   0025D8  0E00               	movlw	0
  7297   0025DA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7298   0025DC  6E07               	movwf	(??___xxtofl+2)^0,c
  7299   0025DE  0EFE               	movlw	254
  7300   0025E0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7301   0025E2  6E08               	movwf	(??___xxtofl+3)^0,c
  7302   0025E4  5005               	movf	??___xxtofl^0,w,c
  7303   0025E6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7304   0025E8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7305   0025EA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7306   0025EC  A4D8               	btfss	status,2,c
  7307   0025EE  EFFB  F012         	goto	u3561
  7308   0025F2  EFFD  F012         	goto	u3560
  7309   0025F6                     u3561:
  7310   0025F6  EFE0  F012         	goto	l3353
  7311   0025FA                     u3560:
  7312   0025FA  EF0B  F013         	goto	l763
  7313   0025FE                     l3357:
  7314   0025FE  2A0A               	incf	___xxtofl@exp^0,f,c
  7315   002600  0E01               	movlw	1
  7316   002602  260B               	addwf	___xxtofl@arg^0,f,c
  7317   002604  0E00               	movlw	0
  7318   002606  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7319   002608  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7320   00260A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7321   00260C  90D8               	bcf	status,0,c
  7322   00260E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7323   002610  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7324   002612  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7325   002614  320B               	rrcf	___xxtofl@arg^0,f,c
  7326   002616                     l763:
  7327   002616  0E00               	movlw	0
  7328   002618  140B               	andwf	___xxtofl@arg^0,w,c
  7329   00261A  6E05               	movwf	??___xxtofl^0,c
  7330   00261C  0E00               	movlw	0
  7331   00261E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7332   002620  6E06               	movwf	(??___xxtofl+1)^0,c
  7333   002622  0E00               	movlw	0
  7334   002624  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7335   002626  6E07               	movwf	(??___xxtofl+2)^0,c
  7336   002628  0EFF               	movlw	255
  7337   00262A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7338   00262C  6E08               	movwf	(??___xxtofl+3)^0,c
  7339   00262E  5005               	movf	??___xxtofl^0,w,c
  7340   002630  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7341   002632  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7342   002634  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7343   002636  A4D8               	btfss	status,2,c
  7344   002638  EF20  F013         	goto	u3571
  7345   00263C  EF22  F013         	goto	u3570
  7346   002640                     u3571:
  7347   002640  EFFF  F012         	goto	l3357
  7348   002644                     u3570:
  7349   002644  EF2A  F013         	goto	l3365
  7350   002648                     l3363:
  7351   002648  060A               	decf	___xxtofl@exp^0,f,c
  7352   00264A  90D8               	bcf	status,0,c
  7353   00264C  360B               	rlcf	___xxtofl@arg^0,f,c
  7354   00264E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7355   002650  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7356   002652  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7357   002654                     l3365:
  7358   002654  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7359   002656  EF2F  F013         	goto	u3581
  7360   00265A  EF31  F013         	goto	u3580
  7361   00265E                     u3581:
  7362   00265E  EF39  F013         	goto	l770
  7363   002662                     u3580:
  7364   002662  0E02               	movlw	2
  7365   002664  600A               	cpfslt	___xxtofl@exp^0,c
  7366   002666  EF37  F013         	goto	u3591
  7367   00266A  EF39  F013         	goto	u3590
  7368   00266E                     u3591:
  7369   00266E  EF24  F013         	goto	l3363
  7370   002672                     u3590:
  7371   002672                     l770:
  7372   002672  B00A               	btfsc	___xxtofl@exp^0,0,c
  7373   002674  EF3E  F013         	goto	u3601
  7374   002678  EF40  F013         	goto	u3600
  7375   00267C                     u3601:
  7376   00267C  EF41  F013         	goto	l3371
  7377   002680                     u3600:
  7378   002680  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7379   002682                     l3371:
  7380   002682  90D8               	bcf	status,0,c
  7381   002684  320A               	rrcf	___xxtofl@exp^0,f,c
  7382   002686  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7383   00268A  6A06               	clrf	(??___xxtofl+1)^0,c
  7384   00268C  6A07               	clrf	(??___xxtofl+2)^0,c
  7385   00268E  6A08               	clrf	(??___xxtofl+3)^0,c
  7386   002690  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7387   002694  6A07               	clrf	(??___xxtofl+2)^0,c
  7388   002696  6A06               	clrf	(??___xxtofl+1)^0,c
  7389   002698  6A05               	clrf	??___xxtofl^0,c
  7390   00269A  5005               	movf	??___xxtofl^0,w,c
  7391   00269C  120B               	iorwf	___xxtofl@arg^0,f,c
  7392   00269E  5006               	movf	(??___xxtofl+1)^0,w,c
  7393   0026A0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7394   0026A2  5007               	movf	(??___xxtofl+2)^0,w,c
  7395   0026A4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7396   0026A6  5008               	movf	(??___xxtofl+3)^0,w,c
  7397   0026A8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7398   0026AA  5009               	movf	___xxtofl@sign^0,w,c
  7399   0026AC  B4D8               	btfsc	status,2,c
  7400   0026AE  EF5B  F013         	goto	u3611
  7401   0026B2  EF5D  F013         	goto	u3610
  7402   0026B6                     u3611:
  7403   0026B6  EF65  F013         	goto	l3381
  7404   0026BA                     u3610:
  7405   0026BA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7406   0026BC  EF64  F013         	goto	u3620
  7407   0026C0  EF62  F013         	goto	u3621
  7408   0026C4                     u3621:
  7409   0026C4  EF65  F013         	goto	l3381
  7410   0026C8                     u3620:
  7411   0026C8  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7412   0026CA                     l3381:
  7413   0026CA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7414   0026CE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7415   0026D2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7416   0026D6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7417   0026DA                     l759:
  7418   0026DA  0012               	return		;funcret
  7419   0026DC                     __end_of___xxtofl:
  7420                           	callstack 0
  7421                           
  7422                           	psect	rparam
  7423   000000                     
  7424                           	psect	idloc
  7425                           
  7426                           ;Config register IDLOC0 @ 0x200000
  7427                           ;	unspecified, using default values
  7428   200000                     	org	2097152
  7429   200000  FF                 	db	255
  7430                           
  7431                           ;Config register IDLOC1 @ 0x200001
  7432                           ;	unspecified, using default values
  7433   200001                     	org	2097153
  7434   200001  FF                 	db	255
  7435                           
  7436                           ;Config register IDLOC2 @ 0x200002
  7437                           ;	unspecified, using default values
  7438   200002                     	org	2097154
  7439   200002  FF                 	db	255
  7440                           
  7441                           ;Config register IDLOC3 @ 0x200003
  7442                           ;	unspecified, using default values
  7443   200003                     	org	2097155
  7444   200003  FF                 	db	255
  7445                           
  7446                           ;Config register IDLOC4 @ 0x200004
  7447                           ;	unspecified, using default values
  7448   200004                     	org	2097156
  7449   200004  FF                 	db	255
  7450                           
  7451                           ;Config register IDLOC5 @ 0x200005
  7452                           ;	unspecified, using default values
  7453   200005                     	org	2097157
  7454   200005  FF                 	db	255
  7455                           
  7456                           ;Config register IDLOC6 @ 0x200006
  7457                           ;	unspecified, using default values
  7458   200006                     	org	2097158
  7459   200006  FF                 	db	255
  7460                           
  7461                           ;Config register IDLOC7 @ 0x200007
  7462                           ;	unspecified, using default values
  7463   200007                     	org	2097159
  7464   200007  FF                 	db	255
  7465                           
  7466                           	psect	config
  7467                           
  7468                           ; Padding undefined space
  7469   300000                     	org	3145728
  7470   300000  FF                 	db	255
  7471                           
  7472                           ;Config register CONFIG1H @ 0x300001
  7473                           ;	Oscillator Selection bits
  7474                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  7475                           ;	4X PLL Enable
  7476                           ;	PLLCFG = 0x0, unprogrammed default
  7477                           ;	Primary clock enable bit
  7478                           ;	PRICLKEN = 0x1, unprogrammed default
  7479                           ;	Fail-Safe Clock Monitor Enable bit
  7480                           ;	FCMEN = 0x0, unprogrammed default
  7481                           ;	Internal/External Oscillator Switchover bit
  7482                           ;	IESO = 0x0, unprogrammed default
  7483   300001                     	org	3145729
  7484   300001  22                 	db	34
  7485                           
  7486                           ;Config register CONFIG2L @ 0x300002
  7487                           ;	unspecified, using default values
  7488                           ;	Power-up Timer Enable bit
  7489                           ;	PWRTEN = 0x1, unprogrammed default
  7490                           ;	Brown-out Reset Enable bits
  7491                           ;	BOREN = 0x3, unprogrammed default
  7492                           ;	Brown Out Reset Voltage bits
  7493                           ;	BORV = 0x3, unprogrammed default
  7494   300002                     	org	3145730
  7495   300002  1F                 	db	31
  7496                           
  7497                           ;Config register CONFIG2H @ 0x300003
  7498                           ;	Watchdog Timer Enable bits
  7499                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7500                           ;	Watchdog Timer Postscale Select bits
  7501                           ;	WDTPS = 0xF, unprogrammed default
  7502   300003                     	org	3145731
  7503   300003  3C                 	db	60
  7504                           
  7505                           ; Padding undefined space
  7506   300004                     	org	3145732
  7507   300004  FF                 	db	255
  7508                           
  7509                           ;Config register CONFIG3H @ 0x300005
  7510                           ;	unspecified, using default values
  7511                           ;	CCP2 MUX bit
  7512                           ;	CCP2MX = 0x1, unprogrammed default
  7513                           ;	PORTB A/D Enable bit
  7514                           ;	PBADEN = 0x1, unprogrammed default
  7515                           ;	P3A/CCP3 Mux bit
  7516                           ;	CCP3MX = 0x1, unprogrammed default
  7517                           ;	HFINTOSC Fast Start-up
  7518                           ;	HFOFST = 0x1, unprogrammed default
  7519                           ;	Timer3 Clock input mux bit
  7520                           ;	T3CMX = 0x1, unprogrammed default
  7521                           ;	ECCP2 B output mux bit
  7522                           ;	P2BMX = 0x1, unprogrammed default
  7523                           ;	MCLR Pin Enable bit
  7524                           ;	MCLRE = 0x1, unprogrammed default
  7525   300005                     	org	3145733
  7526   300005  BF                 	db	191
  7527                           
  7528                           ;Config register CONFIG4L @ 0x300006
  7529                           ;	unspecified, using default values
  7530                           ;	Stack Full/Underflow Reset Enable bit
  7531                           ;	STVREN = 0x1, unprogrammed default
  7532                           ;	Single-Supply ICSP Enable bit
  7533                           ;	LVP = 0x1, unprogrammed default
  7534                           ;	Extended Instruction Set Enable bit
  7535                           ;	XINST = 0x0, unprogrammed default
  7536                           ;	Background Debug
  7537                           ;	DEBUG = 0x1, unprogrammed default
  7538   300006                     	org	3145734
  7539   300006  85                 	db	133
  7540                           
  7541                           ; Padding undefined space
  7542   300007                     	org	3145735
  7543   300007  FF                 	db	255
  7544                           
  7545                           ;Config register CONFIG5L @ 0x300008
  7546                           ;	unspecified, using default values
  7547                           ;	Code Protection Block 0
  7548                           ;	CP0 = 0x1, unprogrammed default
  7549                           ;	Code Protection Block 1
  7550                           ;	CP1 = 0x1, unprogrammed default
  7551                           ;	Code Protection Block 2
  7552                           ;	CP2 = 0x1, unprogrammed default
  7553                           ;	Code Protection Block 3
  7554                           ;	CP3 = 0x1, unprogrammed default
  7555   300008                     	org	3145736
  7556   300008  0F                 	db	15
  7557                           
  7558                           ;Config register CONFIG5H @ 0x300009
  7559                           ;	unspecified, using default values
  7560                           ;	Boot Block Code Protection bit
  7561                           ;	CPB = 0x1, unprogrammed default
  7562                           ;	Data EEPROM Code Protection bit
  7563                           ;	CPD = 0x1, unprogrammed default
  7564   300009                     	org	3145737
  7565   300009  C0                 	db	192
  7566                           
  7567                           ;Config register CONFIG6L @ 0x30000A
  7568                           ;	unspecified, using default values
  7569                           ;	Write Protection Block 0
  7570                           ;	WRT0 = 0x1, unprogrammed default
  7571                           ;	Write Protection Block 1
  7572                           ;	WRT1 = 0x1, unprogrammed default
  7573                           ;	Write Protection Block 2
  7574                           ;	WRT2 = 0x1, unprogrammed default
  7575                           ;	Write Protection Block 3
  7576                           ;	WRT3 = 0x1, unprogrammed default
  7577   30000A                     	org	3145738
  7578   30000A  0F                 	db	15
  7579                           
  7580                           ;Config register CONFIG6H @ 0x30000B
  7581                           ;	unspecified, using default values
  7582                           ;	Configuration Register Write Protection bit
  7583                           ;	WRTC = 0x1, unprogrammed default
  7584                           ;	Boot Block Write Protection bit
  7585                           ;	WRTB = 0x1, unprogrammed default
  7586                           ;	Data EEPROM Write Protection bit
  7587                           ;	WRTD = 0x1, unprogrammed default
  7588   30000B                     	org	3145739
  7589   30000B  E0                 	db	224
  7590                           
  7591                           ;Config register CONFIG7L @ 0x30000C
  7592                           ;	unspecified, using default values
  7593                           ;	Table Read Protection Block 0
  7594                           ;	EBTR0 = 0x1, unprogrammed default
  7595                           ;	Table Read Protection Block 1
  7596                           ;	EBTR1 = 0x1, unprogrammed default
  7597                           ;	Table Read Protection Block 2
  7598                           ;	EBTR2 = 0x1, unprogrammed default
  7599                           ;	Table Read Protection Block 3
  7600                           ;	EBTR3 = 0x1, unprogrammed default
  7601   30000C                     	org	3145740
  7602   30000C  0F                 	db	15
  7603                           
  7604                           ;Config register CONFIG7H @ 0x30000D
  7605                           ;	unspecified, using default values
  7606                           ;	Boot Block Table Read Protection bit
  7607                           ;	EBTRB = 0x1, unprogrammed default
  7608   30000D                     	org	3145741
  7609   30000D  40                 	db	64
  7610                           tosu	equ	0xFFF
  7611                           tosh	equ	0xFFE
  7612                           tosl	equ	0xFFD
  7613                           stkptr	equ	0xFFC
  7614                           pclatu	equ	0xFFB
  7615                           pclath	equ	0xFFA
  7616                           pcl	equ	0xFF9
  7617                           tblptru	equ	0xFF8
  7618                           tblptrh	equ	0xFF7
  7619                           tblptrl	equ	0xFF6
  7620                           tablat	equ	0xFF5
  7621                           prodh	equ	0xFF4
  7622                           prodl	equ	0xFF3
  7623                           indf0	equ	0xFEF
  7624                           postinc0	equ	0xFEE
  7625                           postdec0	equ	0xFED
  7626                           preinc0	equ	0xFEC
  7627                           plusw0	equ	0xFEB
  7628                           fsr0h	equ	0xFEA
  7629                           fsr0l	equ	0xFE9
  7630                           wreg	equ	0xFE8
  7631                           indf1	equ	0xFE7
  7632                           postinc1	equ	0xFE6
  7633                           postdec1	equ	0xFE5
  7634                           preinc1	equ	0xFE4
  7635                           plusw1	equ	0xFE3
  7636                           fsr1h	equ	0xFE2
  7637                           fsr1l	equ	0xFE1
  7638                           bsr	equ	0xFE0
  7639                           indf2	equ	0xFDF
  7640                           postinc2	equ	0xFDE
  7641                           postdec2	equ	0xFDD
  7642                           preinc2	equ	0xFDC
  7643                           plusw2	equ	0xFDB
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8

Data Sizes:
    Strings     188
    Constant    0
    Data        41
    BSS         214
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     87      92
    BANK0           160     80     130
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_8(CODE[4]), STR_5(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_8(CODE[4]), STR_5(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_4(CODE[45]), STR_3(CODE[45]), STR_2(CODE[45]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_4(CODE[45]), STR_3(CODE[45]), STR_2(CODE[45]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_4(CODE[45]), STR_3(CODE[45]), STR_2(CODE[45]), STR_1(CODE[45]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S818$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_4(CODE[45]), STR_3(CODE[45]), STR_2(CODE[45]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 41
		 -> line(BANK0[41]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S733$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S733$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 41
		 -> line(BANK0[41]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_clear
    _lcd_clear->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_write->_LCD_STROBE

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   30241
                                             85 COMRAM     2     2      0
                            ___flmul
                           ___xxtofl
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             40    16     24   22361
                                             71 COMRAM    14    14      0
                                             56 BANK0     24     0     24
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21550
                                             69 COMRAM     2     2      0
                                             50 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   21191
                                             60 COMRAM     9     9      0
                                             44 BANK0      6     0      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     795
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   18929
                                             51 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2651
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     0      3    1339
                                              4 COMRAM     3     0      3
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1637
                                              6 COMRAM     2     2      0
                         _LCD_STROBE
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            2     2      0     686
                                              4 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     1      1    1164
                                              4 COMRAM     2     1      1
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            3     2      1     664
                                              1 COMRAM     3     2      1
                         _LCD_STROBE
 ---------------------------------------------------------------------------------
 (3) _LCD_STROBE                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_clear
     _lcd_write
       _LCD_STROBE
   _lcd_goto
     _lcd_write
   _lcd_init
     _LCD_STROBE
     _lcd_clear
     _lcd_write
   _lcd_puts
     _lcd_write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      C8       6       78.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     50      82       4       81.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     57      5C       1       96.8%
BITBIGSFRll         46      0       0      18        0.0%
BITBIGSFRhhh        3B      0       0      15        0.0%
BITBIGSFRhl         29      0       0      16        0.0%
BITBIGSFRlh          E      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A6      19        0.0%
DATA                 0      0     1A6      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 23 12:25:28 2023

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                ___fldiv@sign 0011  
                        _AN 01A0                          l81 3124                          l58 1DB4  
                        l75 30B4                          l93 3136                          l78 3018  
                        l87 3086                          l98 2D6C         ___wmul@multiplicand 0003  
           lcd_write@lcd_no 0002                         l101 3104                         l360 2CC6  
                       l371 28E4                         l366 289E                         l630 1294  
                       l375 3050                         l631 125A                         l722 1832  
                       l810 2BB8                         l715 163C                         l732 1962  
                       l724 18AA                         l725 1898                         l629 12A6  
                       l813 2BFA                         l646 13C0                         l638 1576  
                       l398 27E0                         l719 19A0                         l655 1490  
                       l671 2F56                         l815 2C1C                         l831 0896  
                       l903 2E24                         l656 147E                         l920 2526  
                       l913 29E2                         l770 2672                         l826 10B6  
                       l763 2616                         l683 1D3A                         l923 246A  
                       l931 2DC2                         l756 257E                         l940 2EC4  
                       l685 1B9A                         l829 0A50                         l694 1BE0  
                       l934 2DD2                         l759 26DA                         l871 2B6A  
                       l696 1C58                         l688 1B5E                         l952 2AAC  
                       l960 2F9A                         l697 1C46                         l963 3138  
                       l859 0E9A                         l875 2B72                         l779 2E74  
                       l896 2314                         l969 2FDA                         _pad 2B74  
                       prod 0FF3                 lcd_goto@pos 0006                         wreg 0FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021            LCD_STROBE@lcd_no 0001  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
              ___fltol@exp1 000A                        l3001 082A                        l3011 0860  
                      l2301 114C                        l3101 0DDE                        l3021 091E  
                      l2311 1180                        l2303 114E                        l3111 0E90  
                      l3103 0DE4                        l3031 09DE                        l3023 0950  
                      l3015 08A6                        l2401 138E                        l2321 11BC  
                      l2305 115E                        l2313 1188                        l3121 0ED4  
                      l3113 0EAC                        l3105 0DEC                        l3041 0A72  
                      l3025 098E                        l3017 08AC                        l3009 0846  
                      l3201 20C0                        l2411 13E6                        l2403 1390  
                      l2331 11D0                        l2323 11C0                        l2315 1198  
                      l2307 116E                        l3123 0EDC                        l3115 0EBA  
                      l3131 0EFC                        l3107 0DF8                        l3051 0AAA  
                      l3043 0A7C                        l3027 09A2                        l3035 0A1E  
                      l3019 08E0                        l3211 2126                        l3203 20DC  
                      l3301 2D0A                        l2501 19EE                        l2421 1414  
                      l2405 13A0                        l2341 11E4                        l2333 11D4  
                      l2325 11C4                        l2317 11AA                        l2309 117E  
                      l2261 29F6                        l3141 0F82                        l3133 0F0E  
                      l3125 0EEC                        l3117 0ECA                        l3109 0E70  
                      l3061 0AF4                        l3053 0AC2                        l3045 0A84  
                      l3037 0A58                        l3029 09D6                        l3221 2174  
                      l3213 2142                        l3205 20EA                        l3311 2D32  
                      l3303 2D10                        l2511 1A14                        l2503 19F0  
                      l2423 1422                        l2415 13FA                        l2431 1440  
                      l2407 13B0                        l2343 11E8                        l2335 11D8  
                      l2327 11C8                        l2319 11B8                        l2351 11F8  
                      l2263 2A08                        l3151 0FFC                        l3143 0FB6  
                      l3135 0F20                        l3127 0EF0                        l3119 0ECE  
                      l3063 0B08                        l3071 0BFE                        l3055 0AD4  
                      l3047 0A8A                        l3039 0A66                        l3231 2202  
                      l3215 2152                        l3207 20F4                        l3313 2D3A  
                      l3305 2D1E                        l2601 1CAC                        l2521 1A54  
                      l2513 1A22                        l2505 19F8                        l2425 142A  
                      l2417 1404                        l2409 13D6                        l2433 144E  
                      l2361 1268                        l2353 11FC                        l2345 11EC  
                      l2337 11DC                        l2329 11CC                        l2281 10E4  
                      l2273 10B8                        l2265 2A12                        l3161 1068  
                      l3153 1004                        l3145 0FBE                        l3137 0F24  
                      l3129 0EF6                        l3081 0CCA                        l3073 0C1C  
                      l3065 0B6C                        l3049 0A9C                        l3057 0ADC  
                      l3217 2164                        l3225 217C                        l3209 2118  
                      l3321 2E36                        l3401 1D7C                        l3315 3128  
                      l3307 2D24                        l3331 3052                        l2611 1D16  
                      l2603 1CB0                        l2531 1A94                        l2523 1A56  
                      l2515 1A24                        l2507 1A08                        l2443 14A0  
                      l2451 14F6                        l2435 1452                        l2427 142E  
                      l2419 1412                        l2371 1292                        l2363 1274  
                      l2355 1226                        l2347 11F0                        l2339 11E0  
                      l2291 111E                        l2283 10F4                        l2275 10C4  
                      l2267 2A30                        l2259 29E4                        l3163 1078  
                      l3155 1012                        l3139 0F2A                        l3147 0FC2  
                      l3091 0D7A                        l3083 0CDA                        l3075 0C50  
                      l3067 0BC4                        l3059 0AE4                        l3171 2AAE  
                      l3235 2236                        l3219 216C                        l3227 21AE  
                      l3251 22EC                        l3323 2E3E                        l3411 1DB2  
                      l3403 1D82                        l3341 253A                        l3317 312A  
                      l3309 2D2C                        l3333 3058                        l2613 1D1A  
                      l2605 1CCA                        l2541 1AC4                        l2533 1A9C  
                      l2517 1A34                        l2525 1A5E                        l2509 1A0E  
                      l2701 178C                        l2461 1548                        l2453 1506  
                      l2445 14AC                        l2437 1460                        l2429 143E  
                      l2381 12E8                        l2373 12B4                        l2365 1278  
                      l2357 1242                        l2349 11F4                        l2293 1124  
                      l2285 1104                        l2277 10D2                        l2269 2A66  
                      l3165 108E                        l3157 1042                        l3149 0FE0  
                      l3093 0DAE                        l3085 0CEA                        l3077 0C82  
                      l3069 0BF8                        l3181 2B42                        l3173 2AB6  
                      l3245 22AE                        l3237 2260                        l3229 21CE  
                      l3325 2E46                        l3421 1E74                        l3413 1DC2  
                      l3405 1D88                        l3351 25B8                        l3343 2548  
                      l3191 3012                        l3183 2FDE                        l3271 310A  
                      l3335 306A                        l2615 1D28                        l2607 1CE0  
                      l2551 1B02                        l2543 1AC4                        l2535 1AA0  
                      l2527 1A6E                        l2519 1A44                        l2711 1822  
                      l2703 17B6                        l2631 1592                        l2471 1566  
                      l2463 154E                        l2455 1516                        l2447 14BA  
                      l2439 1476                        l2391 1322                        l2383 12F6  
                      l2375 12C4                        l2367 1286                        l2359 1252  
                      l2295 1136                        l2287 1106                        l2279 10D4  
                      l3167 1096                        l3159 1050                        l3095 0DC2  
                      l3087 0D1E                        l3079 0C98                        l3175 2ADA  
                      l3239 2280                        l3247 22DA                        l3511 2190  
                      l3327 2E64                        l3319 2E26                        l3431 1F5C  
                      l3423 1E78                        l3415 1DF0                        l3407 1D92  
                      l3361 260C                        l3353 25C0                        l3345 258E  
                      l3185 2FE6                        l3273 3114                        l3337 306E  
                      l2617 1D2E                        l2609 1CFA                        l2561 1B4E  
                      l2553 1B12                        l2529 1A84                        l2721 1862  
                      l2713 1830                        l2705 17EC                        l2641 15CA  
                      l2633 1594                        l2801 301A                        l2465 1550  
                      l2457 1536                        l2449 14F4                        l2393 1324  
                      l2385 1304                        l2369 1288                        l2297 1138  
                      l2289 110E                        l2481 2F7A                        l3089 0D74  
                      l3097 0DC6                        l3177 2B14                        l3513 224A  
                      l3193 207E                        l3281 2E1A                        l3441 1FF6  
                      l3433 1F66                        l3425 1EDC                        l3417 1E60  
                      l3409 1DA0                        l3371 2682                        l3363 2648  
                      l3355 25CC                        l3347 25A4                        l3339 252A  
                      l3187 2FFC                        l3291 2CDC                        l2619 1D30  
                      l2571 1B98                        l2563 1B5C                        l2555 1B22  
                      l2547 1AD8                        l2539 1AB4                        l2491 19AE  
                      l2731 18D4                        l2723 1890                        l2715 1842  
                      l2707 17FA                        l2651 15F6                        l2643 15DA  
                      l2635 15A4                        l2627 1578                        l2803 3030  
                      l2467 1556                        l2459 153A                        l2395 132E  
                      l2387 1310                        l2379 12D8                        l2299 113E  
                      l2811 26F2                        l2475 2F58                        l3099 0DD6  
                      l2483 30E0                        l3179 2B34                        l3515 22CC  
                      l3195 20A2                        l3275 2DD4                        l3443 205C  
                      l3435 1F76                        l3427 1EE6                        l3419 1E62  
                      l3381 26CA                        l3373 2686                        l3365 2654  
                      l3357 25FE                        l3189 3002                        l3269 3108  
                      l3293 2CDE                        l3285 2CCA                        l2581 1BDE  
                      l2573 1BAA                        l2565 1B68                        l2557 1B2A  
                      l2549 1AF2                        l2493 19BC                        l2741 194A  
                      l2733 18FE                        l2717 1850                        l2709 1818  
                      l2661 164C                        l2653 1606                        l2645 15E0  
                      l2637 15B4                        l2629 1584                        l2805 3040  
                      l2469 1564                        l2389 1314                        l2397 1334  
                      l2821 2742                        l2901 2316                        l2477 2F64  
                      l2485 30FC                        l3197 20B0                        l3277 2DE0  
                      l3445 2066                        l3437 1FDC                        l3429 1EF6  
                      l3375 26AA                        l3367 2662                        l3359 2600  
                      l3295 2CF0                        l3287 2CCA                        l2591 1C3E  
                      l2575 1BC0                        l2583 1BF0                        l2567 1B86  
                      l2559 1B3A                        l2495 19BE                        l2743 1966  
                      l2751 198C                        l2727 18BA                        l2735 1902  
                      l2719 1854                        l2671 1686                        l2663 165C  
                      l2655 1616                        l2647 15E6                        l2639 15C4  
                      l2399 135A                        l2831 276C                        l2823 2746  
                      l2815 2706                        l2903 2336                        l2479 2F76  
                      l3199 20BC                        l3279 2DFE                        l3439 1FE6  
                      l3391 1D4E                        l3377 26BA                        l3369 2680  
                      l3297 2CF2                        l3289 2CCC                        l2585 1BFE  
                      l2577 1BC6                        l2569 1B88                        l2497 19CE  
                      l2489 19A2                        l2753 1990                        l2745 1976  
                      l2737 191C                        l2729 18C6                        l2681 16D8  
                      l2673 169C                        l2657 1626                        l2649 15F4  
                      l2841 2794                        l2833 2776                        l2825 2754  
                      l2817 2730                        l2809 26DC                        l2921 24DE  
                      l2913 241E                        l2905 238C                        l3393 1D6C  
                      l3385 1D3C                        l3379 26C8                        l3299 2D02  
                      l2595 1C68                        l2587 1C02                        l2579 1BD0  
                      l2499 19DE                        l2771 2C9A                        l2763 2C1E  
                      l2747 1984                        l2739 1930                        l2691 171E  
                      l2683 16E6                        l2675 16A8                        l2667 1670  
                      l2659 162C                        l2843 27A0                        l2835 2780  
                      l2819 2732                        l2923 2506                        l2915 245A  
                      l2907 23A0                        l2931 2E8A                        l3395 1D6E  
                      l3387 1D42                        l2941 308A                        l2597 1C74  
                      l2589 1C10                        l2773 2CBE                        l2765 2C4C  
                      l2781 2810                        l2749 1986                        l2693 1738  
                      l2685 16F2                        l2677 16C0                        l2669 167C  
                      l2757 2F12                        l2845 27B0                        l2925 2516  
                      l2909 23AE                        l2917 248E                        l2933 2E96  
                      l2861 2BB0                        l2853 2B74                        l3397 1D70  
                      l3389 1D48                        ?_pad 0011                        l2943 309A  
                      l2599 1C82                        l2775 2CC4                        l2767 2C5C  
                      l2791 287E                        l2783 2820                        l2695 1748  
                      l2687 1702                        l2679 16CC                        l2759 2F22  
                      l2847 27C0                        l2871 28E6                        l2919 24CA  
                      l2935 2E9A                        l2863 2BC4                        l2855 2B82  
                      l2951 06C4                        l3399 1D76                        l2945 309E  
                      l2769 2C8A                        l2793 288C                        l2785 284E  
                      l2697 1764                        l2689 170E                        l2849 27D0  
                      l2873 2906                        l2937 2EA6                        l2929 2E76  
                      l2865 2BD8                        l2857 2B96                        l2961 0714  
                      l2953 06D4                        l2947 30B0                        l2795 28DC  
                      l2787 285E                        l2779 27E2                        l2699 1770  
                      l2875 2944                        l2883 2984                        l2939 2EAA  
                      l2867 2BDC                        l2859 2BA4                        l2971 0750  
                      l2963 071C                        l2955 06E2                        l2797 28E2  
                      l2789 286C                        l2885 2996                        l2877 296C  
                      l2869 2C08                        l2893 2F9C                        l2981 0796  
                      l2965 072C                        l2973 0754                        l2957 06E6  
                      l2949 06BE                        l2879 2978                        l2895 2FAC  
                      l2983 079E                        l2975 077A                        l2991 07E0  
                      l2967 073C                        l2959 070A                        l2889 29DA  
                      l2897 2D6E                        l2993 0806                        l2985 07B6  
                      l2977 078C                        l2969 0748                        l2899 2D8C  
                      l2995 0818                        l2987 07C0                        l2979 0790  
                      l2997 081C                        l2999 0822                        STR_1 0601  
                      STR_2 065B                        STR_3 062E                        STR_4 0688  
                      STR_5 06B5                        STR_8 06B9                        u2000 1286  
                      u2001 1282                        u2010 12A6                        u2011 12A2  
                      u2100 13E6                        u2020 12B4                        u2101 13E2  
                      u2021 12B0                        u2110 1412                        u2030 12C4  
                      u2111 140E                        u2031 12C0                        u2200 14F4  
                      u2120 1422                        u2040 12F6                        u3000 23AE  
                      u2201 14F0                        u2121 141E                        u2041 12F2  
                      u3001 23AA                        u2210 1506                        u2130 143E  
                      u2050 1304                        u2211 1502                        u2131 143A  
                      u2051 1300                        u3100 30B0                        u2300 1A22  
                      u2220 1516                        u2140 144E                        u2060 1322  
                      u3020 241A                        u3101 30AC                        u2301 1A1E  
                      u2221 1512                        u2141 144A                        u2061 131E  
                      u3021 2416                        u2310 1A34                        u2230 1536  
                      u2150 1460                        u2070 135A                        u3030 243E  
                      u3110 06E2                        u2311 1A30                        u2231 1532  
                      u2151 145C                        u2071 1356                        u3015 23C2  
                      u3111 06DE                        u2400 1BDE                        u2320 1A44  
                      u2240 1548                        u2160 1476                        u2080 13A0  
                      u3040 245A                        u3016 23CC                        u3200 0950  
                      u3120 072C                        u2401 1BDA                        u2321 1A40  
                      u2241 1544                        u2161 1472                        u2081 139C  
                      u3041 2456                        u3017 23DC                        u3201 094C  
                      u3121 0728                        u2410 1BFE                        u2330 1A84  
                      u2250 1564                        u2170 148C                        u2090 13D6  
                      u3050 24AE                        u3210 098E                        u3130 073C  
                      u2411 1BFA                        u2331 1A80                        u2251 1560  
                      u2171 1488                        u2091 13D2                        u3035 2434  
                      u3211 098A                        u3131 0738                        u2420 1C10  
                      u2340 1AC4                        u2500 1592                        u2180 14A0  
                      u3060 24CA                        u2260 2F9A                        u3300 0CCA  
                      u3220 0A1A                        u3140 077A                        u2421 1C0C  
                      u2341 1AC0                        u2501 158E                        u2181 149C  
                      u3061 24C6                        u2261 2F96                        u3301 0CC6  
                      u3221 0A16                        u3141 0776                        u2430 1C3E  
                      u2350 1B3A                        u2270 19BC                        u2510 15A4  
                      u2190 14BA                        u3070 2506                        u3310 0CDA  
                      u3230 0A50                        u3150 078C                        u2431 1C3A  
                      u2351 1B36                        u2271 19B8                        u2511 15A0  
                      u2191 14B6                        u3071 2502                        u3055 24A4  
                      u3311 0CD6                        u3231 0A4C                        u3151 0788  
                      u2440 1C54                        u2360 1B5C                        u2280 19CE  
                      u2600 1850                        u2520 15B4                        u3080 2EC4  
                      u3400 1062                        u3320 0D74                        u3240 0A66  
                      u3160 0806                        u2441 1C50                        u2361 1B58  
                      u2281 19CA                        u2601 184C                        u2521 15B0  
                      u3081 2EC0                        u3401 105C                        u3321 0D70  
                      u3241 0A62                        u3161 0802                        u3090 309A  
                      u2450 1C68                        u2370 1B86                        u2290 19DE  
                      u2610 1862                        u2530 15F4                        u3410 1064  
                      u3330 0DC2                        u3250 0A9C                        u3170 0818  
                      u3091 3096                        u2451 1C64                        u2371 1B82  
                      u2291 19DA                        u2611 185E                        u2531 15F0  
                      u3331 0DBE                        u3251 0A98                        u3171 0814  
                      u3500 2CDC                        u2460 1C82                        u2380 1BAA  
                      u2700 2C8A                        u2620 1890                        u2540 1606  
                      u1900 1136                        u3420 1078                        u3340 0E70  
                      u3260 0AAA                        u3180 0892                        u3501 2CD8  
                      u2461 1C7E                        u2381 1BA6                        u2701 2C86  
                      u2621 188C                        u2541 1602                        u1901 1132  
                      u3421 1074                        u3341 0E6C                        u3261 0AA6  
                      u3181 088E                        u3510 2CF0                        u2470 1CCA  
                      u2390 1BC0                        u2710 2CBE                        u2630 18A6  
                      u2550 1616                        u1910 114C                        u1830 29F6  
                      u3350 0EAC                        u3270 0AD4                        u3190 091E  
                      u3430 2ADA                        u3511 2CEC                        u2471 1CC6  
                      u2391 1BBC                        u2711 2CBA                        u2631 18A2  
                      u2551 1612                        u1911 1148                        u1831 29F2  
                      u3351 0EA8                        u3271 0AD0                        u3191 091A  
                      u3431 2AD6                        u3600 2680                        u3520 3086  
                      u2480 1CFA                        u2720 2810                        u2640 18BA  
                      u2560 164C                        u1920 115E                        u2800 2754  
                      u1840 2A08                        u3360 0EBA                        u3280 0C1C  
                      u3440 2B6A                        u3601 267C                        u3521 3082  
                      u2481 1CF6                        u2721 280C                        u2641 18B6  
                      u2561 1648                        u1921 115A                        u2801 2750  
                      u1841 2A04                        u3361 0EB6                        u3281 0C18  
                      u3441 2B66                        u3610 26BA                        u3530 253A  
                      u2490 1D28                        u2730 284E                        u2650 18D4  
                      u2570 165C                        u1930 116E                        u2810 2768  
                      u1850 2A30                        u3370 0F0E                        u3290 0C82  
                      u3450 20A2                        u3611 26B6                        u3531 2536  
                      u2491 1D24                        u2731 284A                        u2651 18D0  
                      u2571 1658                        u1931 116A                        u2811 2764  
                      u1851 2A2C                        u3371 0F0A                        u3291 0C7E  
                      u3451 209E                        u3620 26C8                        u3540 2548  
                      u2740 286C                        u2660 191C                        u2580 17D6  
                      u1940 11AA                        u2820 2790                        u2900 2944  
                      u1860 2A66                        u3380 0FE0                        u3460 20EA  
                      u3621 26C4                        u3541 2544                        u2741 2868  
                      u2661 1918                        u1941 11A6                        u2821 278C  
                      u2901 2940                        u1861 2A62                        u3381 0FDC  
                      u3461 20E6                        u3550 25A4                        u2750 288C  
                      u2670 194A                        u2590 1830                        u1950 11B8  
                      u1870 10D2                        u2830 27B0                        u2910 296C  
                      u3390 0FFC                        u3470 2118                        u3630 1DC2  
                      u3551 25A0                        u2751 2888                        u2671 1946  
                      u2591 182C                        u1951 11B4                        u1871 10CE  
                      u2831 27AC                        u2911 2968                        u3391 0FF8  
                      u3471 2114                        u3631 1DBE                        u3560 25FA  
                      u2760 28DC                        u2680 1984                        u1960 1226  
                      u1880 10E4                        u2840 27C0                        u2920 2996  
                      u3480 21CA                        u3640 1E74                        u3561 25F6  
                      u2761 28D8                        u2681 1980                        u2585 17CC  
                      u1961 1222                        u1881 10E0                        u2841 27BC  
                      u2921 2992                        u3481 21C6                        u3641 1E70  
                      u3570 2644                        u2690 2C4C                        u2770 3030  
                      u1970 123E                        u1890 10F4                        u2850 2B82  
                      u3490 2E1A                        u3571 2640                        u3707 2FE0  
                      u2691 2C48                        u2771 302C                        u1971 1238  
                      u1891 10F0                        u2851 2B7E                        u3491 2E16  
                      u3580 2662                        u1980 1240                        u2780 26F2  
                      u2940 29D0                        u2860 2BA4                        u3581 265E  
                      u2781 26EE                        u2941 29CA                        u2861 2BA0  
                      u3590 2672                        u1990 1268                        u2790 2726  
                      u2950 29D2                        u2870 2BFA                        u3591 266E  
                      u1991 1264                        u2935 29A8                        u2871 2BF6  
                      u2880 2C08                        u2960 2FDA                        u3657 2CF8  
                      u2881 2C04                        u2961 2FD6                        u2890 2926  
                      u2970 2D8C                        u3667 2D16                        u2795 271C  
                      u2971 2D88                        u2980 235E                        u3677 2D26  
                      u2990 238C                        u3687 2D34                        u2895 291C  
                      u2991 2388                        u3697 311A                        u2985 2354  
                      _dbuf 0150                        _labs 2D6E                        _main 1D3C  
                      _line 00B0                        _prec 005A                        pad@i 0018  
                      pad@p 0015                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf2 0FDF                        fsr1l 0FE1                        pad@w 001A  
                      fsr2l 0FD9               ___fpclassifyf 28E6                        prodh 0FF4  
                      prodl 0FF3                        start 0000             ___fldiv@new_exp 0012  
              ___param_bank 0000                       ??_pad 0017               ___fltol@sign1 0009  
                     ?_labs 0001             __end_of___fladd 1578                       ?_main 0001  
           __end_of___fldiv 1D3C             __end_of___flneg 3052             __end_of___flmul 19A2  
           __end_of___flsub 2F58             __end_of___fltol 27E2                vfpfcnvrt@fmt 008E  
                     _PORTD 0F83                       _TRISA 0F92                       _TRISB 0F93  
                     _TRISC 0F94                       _TRISD 0F95                       _TRISE 0F96  
                     _flags 005C         read_prec_or_width@c 000D         read_prec_or_width@n 000E  
                     _fputc 29E4                       _fputs 2F58                       labs@a 0001  
                     pad@fp 0011                       _width 0058                       _putch 3138  
                     tablat 0FF5                       status 0FD8             __end_of_sprintf 2E76  
            ?___fpclassifyf 0001             __initialization 2EC6                __end_of_labs 2DD4  
              __end_of_main 207E                      ??_labs 0005                      ??_main 0056  
           lcd_clear@lcd_no 0006               __activetblptr 0002  __end_of_read_prec_or_width 2B74  
                    _ADCON1 0FC1                      _ADCON2 0FC0                      ?_fputc 0001  
                    ?_fputs 000A                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _ANSELA 0F38                      ?_putch 0001                      _ANSELB 0F39  
                    _ANSELC 0F3A                      _ANSELD 0F3B                      _ANSELE 0F3C  
                    _GODONE 7E11            __end_of___xxtofl 26DC                vfprintf@cfmt 0046  
          __end_of_lcd_init 2D6E            __end_of_lcd_goto 3138                      ___flge 27E2  
                    ___fleq 2C1E            __end_of_lcd_puts 3088                   ??___fladd 0009  
                    ___wmul 30E0                   ??___fldiv 0009                   ??___flneg 0005  
                    _an_cnt 00E1                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 06BE                      _floorf 2316  
                    _memcpy 2E76        read_prec_or_width@ap 0009                      clear_0 2EEC  
                    clear_1 2EF8                      isa$std 0001                      pad@buf 0013  
            lcd_init@lcd_no 0008                      _strcpy 2F9C                      fputc@c 0001  
                    fputs@c 000E                      fputs@i 000F                      fputs@s 000A  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 0000              lcd_goto@lcd_no 0005                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 2E26                   ??_sprintf 0048                  ___flge@ff1 0028  
                ___flge@ff2 002C             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 2F08  
                ___flneg@f1 0001               ___rparam_used 0001                  ___fltol@f1 0001  
              ??_LCD_STROBE 0001              __pcstackCOMRAM 0001                __pidataBANK0 30B6  
             __end_of_fputc 2AAE               __end_of_fputs 2F9C               __end_of_putch 313A  
                   ??_fputc 0005                     ??_fputs 000E          __end_of_LCD_STROBE 30B6  
                   ??_putch 0001                  __pbssBANK0 00D9                  __pbssBANK1 0100  
                _efgtoa$860 0066                     ?___flge 0028                     ?___fleq 0001  
                   ?___wmul 0001                     ?_efgtoa 0034                     ?_floorf 001A  
                   ?_memcpy 0001                     ?_strcpy 0001                   ?___xxtofl 0001  
                 ?_lcd_init 0001                   ?_lcd_goto 0005                   ?_lcd_puts 0005  
                   __Hparam 0000                     __Lparam 0000           __end_of_lcd_clear 3126  
                   ___fladd 10B8                     ___fldiv 19A2                     ___flneg 301A  
                   ___flmul 1578                     _Voltage 0100                     ___flsub 2F12  
                   ___fltol 26DC           __end_of_lcd_write 301A                   ?_vfprintf 0092  
              __psmallconst 0600                     __pcinit 2EC6                     __ramtop 0600  
                   __ptext0 1D3C                     __ptext1 2E26                     __ptext2 2DD4  
                   __ptext3 207E                     __ptext4 2AAE                     __ptext5 30E0  
                   __ptext6 06BE                     __ptext7 2F9C                     __ptext8 2B74  
                   __ptext9 2F58       read_prec_or_width@fmt 0007                  ??___xxtofl 0005  
                   efgtoa@c 003A                     efgtoa@d 006B                     efgtoa@e 006F  
                   efgtoa@f 0036                     efgtoa@g 0084                     efgtoa@h 0079  
                   efgtoa@i 0077                     efgtoa@l 007D                     efgtoa@m 006D  
                   efgtoa@n 0082                     efgtoa@p 0062                     efgtoa@t 0064  
                   efgtoa@u 0088                     efgtoa@w 0071                     _sprintf 2E26  
                ??_lcd_init 0007                  ??_lcd_goto 0006              lcd_puts@lcd_no 0007  
                ??_lcd_puts 0008        end_of_initialization 2F08                     floorf@e 0028  
                   floorf@m 0024                     floorf@u 002A                     floorf@x 001A  
                   memcpy@d 0007                     memcpy@n 0005                     memcpy@s 0009  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000C  
        _read_prec_or_width 2AAE           __end_of_vfpfcnvrt 2316                  efgtoa@mode 0069  
                efgtoa@sign 0081                     postdec1 0FE5                     postdec2 0FDD  
       ?_read_prec_or_width 0007                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 003F                  ??_vfprintf 0046  
                   strcpy@d 0007                     strcpy@s 0005                   _PORTDbits 0F83  
               ___fladd@grs 0010               ___xxtofl@sign 0009        ??_read_prec_or_width 000B  
               ___fldiv@grs 0014                 ___fldiv@rem 000D                 ___flmul@grs 001C  
                lcd_write@c 0004              __end_of___flge 28E6              __end_of___fleq 2CC8  
               vfpfcnvrt@ap 0090                 vfpfcnvrt@cp 0044                 vfpfcnvrt@fp 008C  
            __end_of___wmul 3106              __end_of_efgtoa 10B8              __end_of_floorf 2528  
            __end_of_memcpy 2EC6                  floorf@F526 00D9              __end_of_strcpy 2FDC  
       start_initialization 2EC6                 __end_of_pad 2C1E       __end_of___fpclassifyf 29E4  
               vfprintf@fmt 0094                    ??___flge 0030                    ??___fleq 0009  
                  ??___wmul 0005                    ??_efgtoa 003B                 __pdataBANK0 00B0  
                  ??_floorf 001E                    ??_memcpy 0007                    ??_strcpy 0005  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 0005  
                 ___fldiv@b 0001                   ___flmul@a 0013                   ___flmul@b 000F  
               __pbssCOMRAM 0058                   ___flsub@a 002C                   ___flsub@b 0028  
             __pcstackBANK0 0060                    ?___fladd 0001                    ?___fldiv 0001  
                  ?___flneg 0001                    ?___flmul 000F                    ?___flsub 0028  
                  ?___fltol 0001                   _lcd_clear 3106                   _lcd_write 2FDC  
               __smallconst 0600                    ?_sprintf 0098              ___wmul@product 0005  
                ?_lcd_clear 0001                   _vfpfcnvrt 207E                  _ADCON0bits 0FC2  
                ?_lcd_write 0002           ___wmul@multiplier 0001                   lcd_puts@s 0005  
                vfpfcnvrt@c 0043                   copy_data0 2EDA                    __Hrparam 0000  
                 memcpy@tmp 000B                  vfprintf@ap 0096                    __Lrparam 0000  
                vfprintf@fp 0092                  ?_vfpfcnvrt 008C          ___fpclassifyf@F465 00DD  
                sprintf@fmt 009A                    ___xxtofl 2528                    __ptext10 29E4  
                  __ptext11 3138                    __ptext20 1578                    __ptext12 2E76  
                  __ptext21 27E2                    __ptext13 2D6E                    __ptext30 2528  
                  __ptext22 2C1E                    __ptext14 2316                    __ptext23 19A2  
                  __ptext15 28E6                    __ptext24 3052                    __ptext16 26DC  
                  __ptext25 2CC8                    __ptext17 2F12                    __ptext26 3106  
                  __ptext18 10B8                    __ptext27 3126                    __ptext19 301A  
                  __ptext28 2FDC                    __ptext29 3088                    _lcd_init 2CC8  
                  _lcd_goto 3126                    _lcd_puts 3052                  strcpy@dest 0001  
                _LCD_STROBE 3088                    efgtoa@fp 0034                    efgtoa@ne 0060  
                  efgtoa@pp 0068                    efgtoa@ou 0073                    isa$xinst 0000  
                  _vfprintf 2DD4                 ??_lcd_clear 0005                 ??_lcd_write 0003  
                  memcpy@d1 0001                    memcpy@s1 0003                   sprintf@ap 0048  
                 strcpy@src 0003                 efgtoa@nmode 006A                 ??_vfpfcnvrt 003D  
                  sprintf@f 004A                    sprintf@s 0098               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F                 ?_LCD_STROBE 0001  
