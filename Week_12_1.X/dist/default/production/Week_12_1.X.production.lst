

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 22 22:44:34 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 06/04/2022 GMT
    17                           ; 
    18                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   007EB2                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _an_list
    56   007EB2  00                 	db	0
    57   007EB3  01                 	db	1
    58   000000                     _ADRESL	set	4035
    59   000000                     _ADRESH	set	4036
    60   000000                     _ADCON0bits	set	4034
    61   000000                     _GODONE	set	32273
    62   000000                     _CCP2CON	set	3942
    63   000000                     _ANSELE	set	3900
    64   000000                     _ANSELD	set	3899
    65   000000                     _ANSELC	set	3898
    66   000000                     _ANSELB	set	3897
    67   000000                     _TRISA	set	3986
    68   000000                     _ANSELA	set	3896
    69   000000                     _T2CON	set	4026
    70   000000                     _ADCON2	set	4032
    71   000000                     _TRISE	set	3990
    72   000000                     _TRISD	set	3989
    73   000000                     _TRISC	set	3988
    74   000000                     _TRISB	set	3987
    75   000000                     _ADCON0	set	4034
    76   000000                     _CCP1CON	set	4029
    77   000000                     _PR2	set	4027
    78   000000                     _CCPR1L	set	4030
    79   000000                     _CCPR2L	set	3943
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84   007EB4                     __pcinit:
    85                           	callstack 0
    86   007EB4                     start_initialization:
    87                           	callstack 0
    88   007EB4                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Initialize objects allocated to COMRAM (2 bytes)
    92                           ; load TBLPTR registers with __pidataCOMRAM
    93   007EB4  0EB2               	movlw	low __pidataCOMRAM
    94   007EB6  6EF6               	movwf	tblptrl,c
    95   007EB8  0E7E               	movlw	high __pidataCOMRAM
    96   007EBA  6EF7               	movwf	tblptrh,c
    97   007EBC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    98   007EBE  6EF8               	movwf	tblptru,c
    99   007EC0  0009               	tblrd		*+	;fetch initializer
   100   007EC2  CFF5 F006          	movff	tablat,__pdataCOMRAM
   101   007EC6  0009               	tblrd		*+	;fetch initializer
   102   007EC8  CFF5 F007          	movff	tablat,__pdataCOMRAM+1
   103                           
   104                           ; Clear objects allocated to COMRAM (5 bytes)
   105   007ECC  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
   106   007ECE  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   107   007ED0  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   108   007ED2  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   109   007ED4  6A01               	clrf	__pbssCOMRAM& (0+255),c
   110   007ED6                     end_of_initialization:
   111                           	callstack 0
   112   007ED6                     __end_of__initialization:
   113                           	callstack 0
   114   007ED6  0100               	movlb	0
   115   007ED8  EF6E  F03F         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118   000001                     __pbssCOMRAM:
   119                           	callstack 0
   120   000001                     _value:
   121                           	callstack 0
   122   000001                     	ds	4
   123   000005                     _an_cnt:
   124                           	callstack 0
   125   000005                     	ds	1
   126                           
   127                           	psect	dataCOMRAM
   128   000006                     __pdataCOMRAM:
   129                           	callstack 0
   130   000006                     _an_list:
   131                           	callstack 0
   132   000006                     	ds	2
   133                           
   134                           	psect	cstackCOMRAM
   135   000008                     __pcstackCOMRAM:
   136                           	callstack 0
   137   000008                     ??_main:
   138                           
   139                           ; 1 bytes @ 0x0
   140   000008                     	ds	2
   141                           
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 22 in file "newmain.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   161 ;;      Params:         0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0
   163 ;;      Temps:          2       0       0       0       0       0       0
   164 ;;      Totals:         2       0       0       0       0       0       0
   165 ;;Total ram usage:        2 bytes
   166 ;; This function calls:
   167 ;;		Nothing
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           	psect	text0
   174   007EDC                     __ptext0:
   175                           	callstack 0
   176   007EDC                     _main:
   177                           	callstack 31
   178   007EDC                     
   179                           ;newmain.c: 23:     ADCON0bits.CHS = an_list[0];
   180   007EDC  0E03               	movlw	3
   181   007EDE  010F               	movlb	15	; () banked
   182   007EE0  6F38               	movwf	56,b	;volatile
   183   007EE2                     
   184                           ; BSR set to: 15
   185                           ;newmain.c: 24:     ADCON0bits.ADON = 1;
   186   007EE2  6892               	setf	146,c	;volatile
   187                           
   188                           ;newmain.c: 26: 
   189   007EE4  0E00               	movlw	0
   190   007EE6  6F39               	movwf	57,b	;volatile
   191   007EE8                     
   192                           ; BSR set to: 15
   193                           ;newmain.c: 27:     T2CON=0x04;
   194   007EE8  6893               	setf	147,c	;volatile
   195                           
   196                           ;newmain.c: 29:     CCP1CON=0x0C;
   197   007EEA  0E00               	movlw	0
   198   007EEC  6F3A               	movwf	58,b	;volatile
   199                           
   200                           ;newmain.c: 30:     CCP2CON=0x0C;
   201   007EEE  0EF9               	movlw	249
   202   007EF0  6E94               	movwf	148,c	;volatile
   203                           
   204                           ;newmain.c: 32:     while (1) {
   205   007EF2  0E00               	movlw	0
   206   007EF4  6F3B               	movwf	59,b	;volatile
   207   007EF6                     
   208                           ; BSR set to: 15
   209                           ;newmain.c: 33:         if (!GODONE) {
   210   007EF6  6895               	setf	149,c	;volatile
   211                           
   212                           ;newmain.c: 35:             an_cnt++;
   213   007EF8  0E00               	movlw	0
   214   007EFA  6F3C               	movwf	60,b	;volatile
   215                           
   216                           ;newmain.c: 36:             if (an_cnt >= 2) {
   217   007EFC  0E7F               	movlw	127
   218   007EFE  6E96               	movwf	150,c	;volatile
   219                           
   220                           ;newmain.c: 38:             }
   221   007F00  0EA1               	movlw	161
   222   007F02  6EC0               	movwf	192,c	;volatile
   223                           
   224                           ;newmain.c: 39:             ADCON0bits.CHS = an_list[an_cnt];
   225   007F04  0E00               	movlw	0
   226   007F06  6EC2               	movwf	194,c	;volatile
   227   007F08                     
   228                           ; BSR set to: 15
   229                           ;newmain.c: 41:         }
   230   007F08  C006  F008         	movff	_an_list,??_main
   231   007F0C  4608               	rlncf	??_main^0,f,c
   232   007F0E  4608               	rlncf	??_main^0,f,c
   233   007F10  50C2               	movf	194,w,c	;volatile
   234   007F12  1808               	xorwf	??_main^0,w,c
   235   007F14  0B83               	andlw	-125
   236   007F16  1808               	xorwf	??_main^0,w,c
   237   007F18  6EC2               	movwf	194,c	;volatile
   238   007F1A                     
   239                           ; BSR set to: 15
   240                           ;newmain.c: 42:         CCPR1L=value[0]>>2;
   241   007F1A  80C2               	bsf	194,0,c	;volatile
   242   007F1C                     
   243                           ; BSR set to: 15
   244                           ;newmain.c: 43:         CCP1CON=(CCP1CON & 0xCF)+((value[0]&0x0003)<<4);
   245   007F1C  82C2               	bsf	4034,1,c	;volatile
   246   007F1E                     
   247                           ; BSR set to: 15
   248                           ;newmain.c: 45:         CCP2CON=(CCP2CON & 0xCF)+((value[1]&0x0003)<<4);
   249   007F1E  0E04               	movlw	4
   250   007F20  6EBA               	movwf	186,c	;volatile
   251   007F22                     
   252                           ; BSR set to: 15
   253                           ;newmain.c: 46:     }
   254   007F22  68BB               	setf	187,c	;volatile
   255   007F24                     
   256                           ; BSR set to: 15
   257                           ;newmain.c: 47: }
   258   007F24  0E0C               	movlw	12
   259   007F26  6EBD               	movwf	189,c	;volatile
   260   007F28                     
   261                           ; BSR set to: 15
   262   007F28  0E0C               	movlw	12
   263   007F2A  6E66               	movwf	102,c	;volatile
   264   007F2C                     l758:
   265   007F2C  B2C2               	btfsc	4034,1,c	;volatile
   266   007F2E  EF9B  F03F         	goto	u11
   267   007F32  EF9D  F03F         	goto	u10
   268   007F36                     u11:
   269   007F36  EFCE  F03F         	goto	l772
   270   007F3A                     u10:
   271   007F3A  50C3               	movf	195,w,c	;volatile
   272   007F3C  CFC4 F008          	movff	4036,??_main	;volatile
   273   007F40  6A09               	clrf	(??_main+1)^0,c
   274   007F42  C008  F009         	movff	??_main,??_main+1
   275   007F46  6A08               	clrf	??_main^0,c
   276   007F48  2608               	addwf	??_main^0,f,c
   277   007F4A  0E00               	movlw	0
   278   007F4C  2209               	addwfc	(??_main+1)^0,f,c
   279   007F4E  5005               	movf	_an_cnt^0,w,c
   280   007F50  0D02               	mullw	2
   281   007F52  0E01               	movlw	low _value
   282   007F54  24F3               	addwf	243,w,c
   283   007F56  6ED9               	movwf	fsr2l,c
   284   007F58  0E00               	movlw	high _value
   285   007F5A  20F4               	addwfc	prodh,w,c
   286   007F5C  6EDA               	movwf	fsr2h,c
   287   007F5E  C008  FFDE         	movff	??_main,postinc2
   288   007F62  C009  FFDD         	movff	??_main+1,postdec2
   289   007F66  2A05               	incf	_an_cnt^0,f,c
   290   007F68  0E01               	movlw	1
   291   007F6A  6405               	cpfsgt	_an_cnt^0,c
   292   007F6C  EFBA  F03F         	goto	u21
   293   007F70  EFBC  F03F         	goto	u20
   294   007F74                     u21:
   295   007F74  EFBE  F03F         	goto	l768
   296   007F78                     u20:
   297   007F78  0E00               	movlw	0
   298   007F7A  6E05               	movwf	_an_cnt^0,c
   299   007F7C                     l768:
   300   007F7C  0E06               	movlw	low _an_list
   301   007F7E  2405               	addwf	_an_cnt^0,w,c
   302   007F80  6ED9               	movwf	fsr2l,c
   303   007F82  6ADA               	clrf	fsr2h,c
   304   007F84  0E00               	movlw	high _an_list
   305   007F86  22DA               	addwfc	fsr2h,f,c
   306   007F88  50DF               	movf	indf2,w,c
   307   007F8A  6E08               	movwf	??_main^0,c
   308   007F8C  4608               	rlncf	??_main^0,f,c
   309   007F8E  4608               	rlncf	??_main^0,f,c
   310   007F90  50C2               	movf	194,w,c	;volatile
   311   007F92  1808               	xorwf	??_main^0,w,c
   312   007F94  0B83               	andlw	-125
   313   007F96  1808               	xorwf	??_main^0,w,c
   314   007F98  6EC2               	movwf	194,c	;volatile
   315   007F9A  82C2               	bsf	4034,1,c	;volatile
   316   007F9C                     l772:
   317   007F9C  C001  F008         	movff	_value,??_main
   318   007FA0  C002  F009         	movff	_value+1,??_main+1
   319   007FA4  90D8               	bcf	status,0,c
   320   007FA6  3209               	rrcf	(??_main+1)^0,f,c
   321   007FA8  3208               	rrcf	??_main^0,f,c
   322   007FAA  90D8               	bcf	status,0,c
   323   007FAC  3209               	rrcf	(??_main+1)^0,f,c
   324   007FAE  3208               	rrcf	??_main^0,f,c
   325   007FB0  5008               	movf	??_main^0,w,c
   326   007FB2  6EBE               	movwf	190,c	;volatile
   327   007FB4  CFBD F008          	movff	4029,??_main	;volatile
   328   007FB8  0ECF               	movlw	207
   329   007FBA  1608               	andwf	??_main^0,f,c
   330   007FBC  5001               	movf	_value^0,w,c
   331   007FBE  0B03               	andlw	3
   332   007FC0  0D10               	mullw	16
   333   007FC2  50F3               	movf	243,w,c
   334   007FC4  2408               	addwf	??_main^0,w,c
   335   007FC6  6EBD               	movwf	189,c	;volatile
   336   007FC8  EE20  F003         	lfsr	2,_value+2
   337   007FCC  CFDE F008          	movff	postinc2,??_main
   338   007FD0  CFDD F009          	movff	postdec2,??_main+1
   339   007FD4  90D8               	bcf	status,0,c
   340   007FD6  3209               	rrcf	(??_main+1)^0,f,c
   341   007FD8  3208               	rrcf	??_main^0,f,c
   342   007FDA  90D8               	bcf	status,0,c
   343   007FDC  3209               	rrcf	(??_main+1)^0,f,c
   344   007FDE  3208               	rrcf	??_main^0,f,c
   345   007FE0  5008               	movf	??_main^0,w,c
   346   007FE2  6E67               	movwf	103,c	;volatile
   347   007FE4  CF66 F008          	movff	3942,??_main	;volatile
   348   007FE8  0ECF               	movlw	207
   349   007FEA  1608               	andwf	??_main^0,f,c
   350   007FEC  5003               	movf	(_value+2)^0,w,c
   351   007FEE  0B03               	andlw	3
   352   007FF0  0D10               	mullw	16
   353   007FF2  50F3               	movf	243,w,c
   354   007FF4  2408               	addwf	??_main^0,w,c
   355   007FF6  6E66               	movwf	102,c	;volatile
   356   007FF8  EF96  F03F         	goto	l758
   357   007FFC  EF00  F000         	goto	start
   358   008000                     __end_of_main:
   359                           	callstack 0
   360   000000                     
   361                           	psect	rparam
   362   000000                     
   363                           	psect	idloc
   364                           
   365                           ;Config register IDLOC0 @ 0x200000
   366                           ;	unspecified, using default values
   367   200000                     	org	2097152
   368   200000  FF                 	db	255
   369                           
   370                           ;Config register IDLOC1 @ 0x200001
   371                           ;	unspecified, using default values
   372   200001                     	org	2097153
   373   200001  FF                 	db	255
   374                           
   375                           ;Config register IDLOC2 @ 0x200002
   376                           ;	unspecified, using default values
   377   200002                     	org	2097154
   378   200002  FF                 	db	255
   379                           
   380                           ;Config register IDLOC3 @ 0x200003
   381                           ;	unspecified, using default values
   382   200003                     	org	2097155
   383   200003  FF                 	db	255
   384                           
   385                           ;Config register IDLOC4 @ 0x200004
   386                           ;	unspecified, using default values
   387   200004                     	org	2097156
   388   200004  FF                 	db	255
   389                           
   390                           ;Config register IDLOC5 @ 0x200005
   391                           ;	unspecified, using default values
   392   200005                     	org	2097157
   393   200005  FF                 	db	255
   394                           
   395                           ;Config register IDLOC6 @ 0x200006
   396                           ;	unspecified, using default values
   397   200006                     	org	2097158
   398   200006  FF                 	db	255
   399                           
   400                           ;Config register IDLOC7 @ 0x200007
   401                           ;	unspecified, using default values
   402   200007                     	org	2097159
   403   200007  FF                 	db	255
   404                           
   405                           	psect	config
   406                           
   407                           ; Padding undefined space
   408   300000                     	org	3145728
   409   300000  FF                 	db	255
   410                           
   411                           ;Config register CONFIG1H @ 0x300001
   412                           ;	Oscillator Selection bits
   413                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
   414                           ;	4X PLL Enable
   415                           ;	PLLCFG = 0x0, unprogrammed default
   416                           ;	Primary clock enable bit
   417                           ;	PRICLKEN = 0x1, unprogrammed default
   418                           ;	Fail-Safe Clock Monitor Enable bit
   419                           ;	FCMEN = 0x0, unprogrammed default
   420                           ;	Internal/External Oscillator Switchover bit
   421                           ;	IESO = 0x0, unprogrammed default
   422   300001                     	org	3145729
   423   300001  22                 	db	34
   424                           
   425                           ;Config register CONFIG2L @ 0x300002
   426                           ;	unspecified, using default values
   427                           ;	Power-up Timer Enable bit
   428                           ;	PWRTEN = 0x1, unprogrammed default
   429                           ;	Brown-out Reset Enable bits
   430                           ;	BOREN = 0x3, unprogrammed default
   431                           ;	Brown Out Reset Voltage bits
   432                           ;	BORV = 0x3, unprogrammed default
   433   300002                     	org	3145730
   434   300002  1F                 	db	31
   435                           
   436                           ;Config register CONFIG2H @ 0x300003
   437                           ;	Watchdog Timer Enable bits
   438                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   439                           ;	Watchdog Timer Postscale Select bits
   440                           ;	WDTPS = 0xF, unprogrammed default
   441   300003                     	org	3145731
   442   300003  3C                 	db	60
   443                           
   444                           ; Padding undefined space
   445   300004                     	org	3145732
   446   300004  FF                 	db	255
   447                           
   448                           ;Config register CONFIG3H @ 0x300005
   449                           ;	unspecified, using default values
   450                           ;	CCP2 MUX bit
   451                           ;	CCP2MX = 0x1, unprogrammed default
   452                           ;	PORTB A/D Enable bit
   453                           ;	PBADEN = 0x1, unprogrammed default
   454                           ;	P3A/CCP3 Mux bit
   455                           ;	CCP3MX = 0x1, unprogrammed default
   456                           ;	HFINTOSC Fast Start-up
   457                           ;	HFOFST = 0x1, unprogrammed default
   458                           ;	Timer3 Clock input mux bit
   459                           ;	T3CMX = 0x1, unprogrammed default
   460                           ;	ECCP2 B output mux bit
   461                           ;	P2BMX = 0x1, unprogrammed default
   462                           ;	MCLR Pin Enable bit
   463                           ;	MCLRE = 0x1, unprogrammed default
   464   300005                     	org	3145733
   465   300005  BF                 	db	191
   466                           
   467                           ;Config register CONFIG4L @ 0x300006
   468                           ;	unspecified, using default values
   469                           ;	Stack Full/Underflow Reset Enable bit
   470                           ;	STVREN = 0x1, unprogrammed default
   471                           ;	Single-Supply ICSP Enable bit
   472                           ;	LVP = 0x1, unprogrammed default
   473                           ;	Extended Instruction Set Enable bit
   474                           ;	XINST = 0x0, unprogrammed default
   475                           ;	Background Debug
   476                           ;	DEBUG = 0x1, unprogrammed default
   477   300006                     	org	3145734
   478   300006  85                 	db	133
   479                           
   480                           ; Padding undefined space
   481   300007                     	org	3145735
   482   300007  FF                 	db	255
   483                           
   484                           ;Config register CONFIG5L @ 0x300008
   485                           ;	unspecified, using default values
   486                           ;	Code Protection Block 0
   487                           ;	CP0 = 0x1, unprogrammed default
   488                           ;	Code Protection Block 1
   489                           ;	CP1 = 0x1, unprogrammed default
   490                           ;	Code Protection Block 2
   491                           ;	CP2 = 0x1, unprogrammed default
   492                           ;	Code Protection Block 3
   493                           ;	CP3 = 0x1, unprogrammed default
   494   300008                     	org	3145736
   495   300008  0F                 	db	15
   496                           
   497                           ;Config register CONFIG5H @ 0x300009
   498                           ;	unspecified, using default values
   499                           ;	Boot Block Code Protection bit
   500                           ;	CPB = 0x1, unprogrammed default
   501                           ;	Data EEPROM Code Protection bit
   502                           ;	CPD = 0x1, unprogrammed default
   503   300009                     	org	3145737
   504   300009  C0                 	db	192
   505                           
   506                           ;Config register CONFIG6L @ 0x30000A
   507                           ;	unspecified, using default values
   508                           ;	Write Protection Block 0
   509                           ;	WRT0 = 0x1, unprogrammed default
   510                           ;	Write Protection Block 1
   511                           ;	WRT1 = 0x1, unprogrammed default
   512                           ;	Write Protection Block 2
   513                           ;	WRT2 = 0x1, unprogrammed default
   514                           ;	Write Protection Block 3
   515                           ;	WRT3 = 0x1, unprogrammed default
   516   30000A                     	org	3145738
   517   30000A  0F                 	db	15
   518                           
   519                           ;Config register CONFIG6H @ 0x30000B
   520                           ;	unspecified, using default values
   521                           ;	Configuration Register Write Protection bit
   522                           ;	WRTC = 0x1, unprogrammed default
   523                           ;	Boot Block Write Protection bit
   524                           ;	WRTB = 0x1, unprogrammed default
   525                           ;	Data EEPROM Write Protection bit
   526                           ;	WRTD = 0x1, unprogrammed default
   527   30000B                     	org	3145739
   528   30000B  E0                 	db	224
   529                           
   530                           ;Config register CONFIG7L @ 0x30000C
   531                           ;	unspecified, using default values
   532                           ;	Table Read Protection Block 0
   533                           ;	EBTR0 = 0x1, unprogrammed default
   534                           ;	Table Read Protection Block 1
   535                           ;	EBTR1 = 0x1, unprogrammed default
   536                           ;	Table Read Protection Block 2
   537                           ;	EBTR2 = 0x1, unprogrammed default
   538                           ;	Table Read Protection Block 3
   539                           ;	EBTR3 = 0x1, unprogrammed default
   540   30000C                     	org	3145740
   541   30000C  0F                 	db	15
   542                           
   543                           ;Config register CONFIG7H @ 0x30000D
   544                           ;	unspecified, using default values
   545                           ;	Boot Block Table Read Protection bit
   546                           ;	EBTRB = 0x1, unprogrammed default
   547   30000D                     	org	3145741
   548   30000D  40                 	db	64
   549                           tosu	equ	0xFFF
   550                           tosh	equ	0xFFE
   551                           tosl	equ	0xFFD
   552                           stkptr	equ	0xFFC
   553                           pclatu	equ	0xFFB
   554                           pclath	equ	0xFFA
   555                           pcl	equ	0xFF9
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           prodh	equ	0xFF4
   561                           prodl	equ	0xFF3
   562                           indf0	equ	0xFEF
   563                           postinc0	equ	0xFEE
   564                           postdec0	equ	0xFED
   565                           preinc0	equ	0xFEC
   566                           plusw0	equ	0xFEB
   567                           fsr0h	equ	0xFEA
   568                           fsr0l	equ	0xFE9
   569                           wreg	equ	0xFE8
   570                           indf1	equ	0xFE7
   571                           postinc1	equ	0xFE6
   572                           postdec1	equ	0xFE5
   573                           preinc1	equ	0xFE4
   574                           plusw1	equ	0xFE3
   575                           fsr1h	equ	0xFE2
   576                           fsr1l	equ	0xFE1
   577                           bsr	equ	0xFE0
   578                           indf2	equ	0xFDF
   579                           postinc2	equ	0xFDE
   580                           postdec2	equ	0xFDD
   581                           preinc2	equ	0xFDC
   582                           plusw2	equ	0xFDB
   583                           fsr2h	equ	0xFDA
   584                           fsr2l	equ	0xFD9
   585                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       9       1        9.5%
BITBIGSFRhhhh       3B      0       0      15        0.0%
BITBIGSFRlh         2A      0       0      20        0.0%
BITBIGSFRll         29      0       0      21        0.0%
BITBIGSFRhll        23      0       0      19        0.0%
BITBIGSFRhlhh        1      0       0      17        0.0%
BITBIGSFRhlhl        1      0       0      18        0.0%
BITBIGSFRhhl         1      0       0      16        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      22        0.0%
DATA                 0      0       9      24        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 22 22:44:34 2023

                     u10 7F3A                       u11 7F36                       u20 7F78  
                     u21 7F74                      l740 7EE8                      l750 7F1E  
                    l742 7EF6                      l760 7F3A                      l752 7F22  
                    l744 7F08                      l736 7EDC                      l770 7F9A  
                    l762 7F66                      l754 7F24                      l746 7F1A  
                    l738 7EE2                      l764 7F68                      l772 7F9C  
                    l756 7F28                      l748 7F1C                      l774 7FB4  
                    l766 7F78                      l758 7F2C                      l776 7FC8  
                    l768 7F7C                      l778 7FE4                      _PR2 0FBB  
                    prod 0FF3                     _main 7EDC                     indf2 0FDF  
                   fsr2l 0FD9                     prodl 0FF3                     start 0000  
           ___param_bank 0000                    ?_main 0008                    _T2CON 0FBA  
                  _TRISA 0F92                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95                    _TRISE 0F96                    _value 0001  
                  tablat 0FF5                    status 0FD8          __initialization 7EB4  
           __end_of_main 8000                   ??_main 0008            __activetblptr 0000  
                 _ADCON0 0FC2                   _ADCON2 0FC0                   _ADRESH 0FC4  
                 _ADRESL 0FC3                   _CCPR1L 0FBE                   _CCPR2L 0F67  
                 _ANSELA 0F38                   _ANSELB 0F39                   _ANSELC 0F3A  
                 _ANSELD 0F3B                   _ANSELE 0F3C                   _GODONE 7E11  
                 _an_cnt 0005                   isa$std 0001             __pdataCOMRAM 0006  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7ED6            ___rparam_used 0001  
         __pcstackCOMRAM 0008                  _CCP1CON 0FBD                  _CCP2CON 0F66  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7EB4  
                _an_list 0006                  __ramtop 0600                  __ptext0 7EDC  
   end_of_initialization 7ED6                  postdec2 0FDD                  postinc2 0FDE  
          __pidataCOMRAM 7EB2      start_initialization 7EB4              __pbssCOMRAM 0001  
             _ADCON0bits 0FC2                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000  
