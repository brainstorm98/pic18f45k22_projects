

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat May 27 16:48:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 06/04/2022 GMT
    19                           ; 
    20                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   000280                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _seg_char
    58   000280  3F                 	db	63
    59   000281  06                 	db	6
    60   000282  5B                 	db	91
    61   000283  4F                 	db	79
    62   000284  66                 	db	102
    63   000285  6D                 	db	109
    64   000286  7D                 	db	125
    65   000287  07                 	db	7
    66   000288  7F                 	db	127
    67   000289  6F                 	db	111
    68                           
    69                           ;initializer for _an_list
    70   00028A  0C                 	db	12
    71   00028B  0A                 	db	10
    72   00028C  08                 	db	8
    73   000000                     _ADRESL	set	4035
    74   000000                     _ADRESH	set	4036
    75   000000                     _T0CON	set	4053
    76   000000                     _ADCON0bits	set	4034
    77   000000                     _TMR0IF	set	32658
    78   000000                     _GIE	set	32663
    79   000000                     _GODONE	set	32273
    80   000000                     _ANSELE	set	3900
    81   000000                     _PORTD	set	3971
    82   000000                     _ANSELD	set	3899
    83   000000                     _ANSELC	set	3898
    84   000000                     _ANSELB	set	3897
    85   000000                     _TRISA	set	3986
    86   000000                     _ANSELA	set	3896
    87   000000                     _ADCON2	set	4032
    88   000000                     _TRISE	set	3990
    89   000000                     _TRISD	set	3989
    90   000000                     _TRISC	set	3988
    91   000000                     _TRISB	set	3987
    92   000000                     _PORTE	set	3972
    93   000000                     _ADCON0	set	4034
    94   000000                     _TMR0L	set	4054
    95   000000                     _TMR0IP	set	32650
    96   000000                     _TMR0IE	set	32661
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   00024A                     __pcinit:
   102                           	callstack 0
   103   00024A                     start_initialization:
   104                           	callstack 0
   105   00024A                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Initialize objects allocated to COMRAM (13 bytes)
   109                           ; load TBLPTR registers with __pidataCOMRAM
   110   00024A  0E80               	movlw	low __pidataCOMRAM
   111   00024C  6EF6               	movwf	tblptrl,c
   112   00024E  0E02               	movlw	high __pidataCOMRAM
   113   000250  6EF7               	movwf	tblptrh,c
   114   000252  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   115   000254  6EF8               	movwf	tblptru,c
   116   000256  EE00  F001         	lfsr	0,__pdataCOMRAM
   117   00025A  EE10 F00D          	lfsr	1,13
   118   00025E                     copy_data0:
   119   00025E  0009               	tblrd		*+
   120   000260  CFF5 FFEE          	movff	tablat,postinc0
   121   000264  50E5               	movf	postdec1,w,c
   122   000266  50E1               	movf	fsr1l,w,c
   123   000268  E1FA               	bnz	copy_data0
   124                           
   125                           ; Clear objects allocated to COMRAM (11 bytes)
   126   00026A  EE00  F00E         	lfsr	0,__pbssCOMRAM
   127   00026E  0E0B               	movlw	11
   128   000270                     clear_0:
   129   000270  6AEE               	clrf	postinc0,c
   130   000272  06E8               	decf	wreg,f,c
   131   000274  E1FD               	bnz	clear_0
   132   000276                     end_of_initialization:
   133                           	callstack 0
   134   000276                     __end_of__initialization:
   135                           	callstack 0
   136   000276  901F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   137   000278  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   138   00027A  0100               	movlb	0
   139   00027C  EF48  F000         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMRAM
   142   00000E                     __pbssCOMRAM:
   143                           	callstack 0
   144   00000E                     _value:
   145                           	callstack 0
   146   00000E                     	ds	6
   147   000014                     _digits:
   148                           	callstack 0
   149   000014                     	ds	3
   150   000017                     _an_cnt:
   151                           	callstack 0
   152   000017                     	ds	1
   153   000018                     _dig_cnt:
   154                           	callstack 0
   155   000018                     	ds	1
   156                           
   157                           	psect	dataCOMRAM
   158   000001                     __pdataCOMRAM:
   159                           	callstack 0
   160   000001                     _seg_char:
   161                           	callstack 0
   162   000001                     	ds	10
   163   00000B                     _an_list:
   164                           	callstack 0
   165   00000B                     	ds	3
   166                           
   167                           	psect	cstackCOMRAM
   168   000019                     __pcstackCOMRAM:
   169                           	callstack 0
   170   000019                     ??_isr:
   171                           
   172                           ; 1 bytes @ 0x0
   173   000019                     	ds	4
   174   00001D                     ??_main:
   175                           
   176                           ; 1 bytes @ 0x4
   177   00001D                     	ds	2
   178                           
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   181 ;;
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 25 in file "newmain.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   198 ;;      Params:         0       0       0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0       0       0
   200 ;;      Temps:          2       0       0       0       0       0       0
   201 ;;      Totals:         2       0       0       0       0       0       0
   202 ;;Total ram usage:        2 bytes
   203 ;; Hardware stack levels required when called: 1
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212   000090                     __ptext0:
   213                           	callstack 0
   214   000090                     _main:
   215                           	callstack 30
   216   000090                     
   217                           ;newmain.c: 26:     ADCON0 = 0x00;
   218   000090  0E00               	movlw	0
   219   000092  010F               	movlb	15	; () banked
   220   000094  6F38               	movwf	56,b	;volatile
   221   000096                     
   222                           ; BSR set to: 15
   223                           ;newmain.c: 27: 
   224   000096  6892               	setf	146,c	;volatile
   225                           
   226                           ;newmain.c: 29:     ADCON0bits.ADON = 1;
   227   000098  0E07               	movlw	7
   228   00009A  6F39               	movwf	57,b	;volatile
   229   00009C                     
   230                           ; BSR set to: 15
   231                           ;newmain.c: 30:     GODONE = 1;
   232   00009C  6893               	setf	147,c	;volatile
   233                           
   234                           ;newmain.c: 32:     T0CON = 0xC2;
   235   00009E  0E00               	movlw	0
   236   0000A0  6F3A               	movwf	58,b	;volatile
   237   0000A2                     
   238                           ; BSR set to: 15
   239                           ;newmain.c: 33:     TMR0L = 6;
   240   0000A2  6894               	setf	148,c	;volatile
   241                           
   242                           ;newmain.c: 35:     TMR0IE = 1;
   243   0000A4  0E00               	movlw	0
   244   0000A6  6F3B               	movwf	59,b	;volatile
   245                           
   246                           ;newmain.c: 36:     TMR0IP = 1;
   247   0000A8  0E00               	movlw	0
   248   0000AA  6E95               	movwf	149,c	;volatile
   249                           
   250                           ;newmain.c: 37:     GIE = 1;
   251   0000AC  0E00               	movlw	0
   252   0000AE  6E83               	movwf	131,c	;volatile
   253                           
   254                           ;newmain.c: 39:     while (1) {
   255   0000B0  0E00               	movlw	0
   256   0000B2  6F3C               	movwf	60,b	;volatile
   257                           
   258                           ;newmain.c: 40:         if (!GODONE) {
   259   0000B4  0E00               	movlw	0
   260   0000B6  6E96               	movwf	150,c	;volatile
   261                           
   262                           ;newmain.c: 41:             value[an_cnt] = (ADRESH * 256) + ADRESL;
   263   0000B8  0E07               	movlw	7
   264   0000BA  6E84               	movwf	132,c	;volatile
   265                           
   266                           ;newmain.c: 43:             if (an_cnt >= 3) {
   267   0000BC  0EA1               	movlw	161
   268   0000BE  6EC0               	movwf	192,c	;volatile
   269                           
   270                           ;newmain.c: 44:                 an_cnt = 0;
   271   0000C0  0E00               	movlw	0
   272   0000C2  6EC2               	movwf	194,c	;volatile
   273   0000C4                     
   274                           ; BSR set to: 15
   275                           ;newmain.c: 46:             ADCON0bits.CHS = an_list[an_cnt];
   276   0000C4  C00B  F01D         	movff	_an_list,??_main
   277   0000C8  461D               	rlncf	??_main^0,f,c
   278   0000CA  461D               	rlncf	??_main^0,f,c
   279   0000CC  50C2               	movf	194,w,c	;volatile
   280   0000CE  181D               	xorwf	??_main^0,w,c
   281   0000D0  0B83               	andlw	-125
   282   0000D2  181D               	xorwf	??_main^0,w,c
   283   0000D4  6EC2               	movwf	194,c	;volatile
   284   0000D6                     
   285                           ; BSR set to: 15
   286                           ;newmain.c: 47:             GODONE = 1;
   287   0000D6  80C2               	bsf	194,0,c	;volatile
   288   0000D8                     
   289                           ; BSR set to: 15
   290                           ;newmain.c: 48:         }
   291   0000D8  82C2               	bsf	4034,1,c	;volatile
   292   0000DA                     
   293                           ; BSR set to: 15
   294                           ;newmain.c: 50: 
   295   0000DA  0EC2               	movlw	194
   296   0000DC  6ED5               	movwf	213,c	;volatile
   297   0000DE                     
   298                           ; BSR set to: 15
   299                           ;newmain.c: 51:         if (value[0] >= value[1] && value[0] >= value[2]) {
   300   0000DE  0E06               	movlw	6
   301   0000E0  6ED6               	movwf	214,c	;volatile
   302   0000E2                     
   303                           ; BSR set to: 15
   304                           ;newmain.c: 53:             if (value[1] >= value[2]) {
   305   0000E2  8AF2               	bsf	4082,5,c	;volatile
   306   0000E4                     
   307                           ; BSR set to: 15
   308                           ;newmain.c: 54:                 digits[1] = 2;
   309   0000E4  84F1               	bsf	4081,2,c	;volatile
   310   0000E6                     
   311                           ; BSR set to: 15
   312                           ;newmain.c: 55:                 digits[2] = 3;
   313   0000E6  8EF2               	bsf	4082,7,c	;volatile
   314   0000E8                     l787:
   315                           
   316                           ;newmain.c: 58:                 digits[2] = 2;
   317   0000E8  B2C2               	btfsc	4034,1,c	;volatile
   318   0000EA  EF79  F000         	goto	u11
   319   0000EE  EF7B  F000         	goto	u10
   320   0000F2                     u11:
   321   0000F2  EFAC  F000         	goto	l801
   322   0000F6                     u10:
   323   0000F6                     
   324                           ;newmain.c: 59:             }
   325   0000F6  50C3               	movf	195,w,c	;volatile
   326   0000F8  CFC4 F01D          	movff	4036,??_main	;volatile
   327   0000FC  6A1E               	clrf	(??_main+1)^0,c
   328   0000FE  C01D  F01E         	movff	??_main,??_main+1
   329   000102  6A1D               	clrf	??_main^0,c
   330   000104  261D               	addwf	??_main^0,f,c
   331   000106  0E00               	movlw	0
   332   000108  221E               	addwfc	(??_main+1)^0,f,c
   333   00010A  5017               	movf	_an_cnt^0,w,c
   334   00010C  0D02               	mullw	2
   335   00010E  0E0E               	movlw	low _value
   336   000110  24F3               	addwf	243,w,c
   337   000112  6ED9               	movwf	fsr2l,c
   338   000114  0E00               	movlw	high _value
   339   000116  20F4               	addwfc	prodh,w,c
   340   000118  6EDA               	movwf	fsr2h,c
   341   00011A  C01D  FFDE         	movff	??_main,postinc2
   342   00011E  C01E  FFDD         	movff	??_main+1,postdec2
   343   000122                     
   344                           ;newmain.c: 60:         } else if (value[1] >= value[0] && value[1] >= value[2]) {
   345   000122  2A17               	incf	_an_cnt^0,f,c
   346   000124                     
   347                           ;newmain.c: 61:             digits[0] = 2;
   348   000124  0E02               	movlw	2
   349   000126  6417               	cpfsgt	_an_cnt^0,c
   350   000128  EF98  F000         	goto	u21
   351   00012C  EF9A  F000         	goto	u20
   352   000130                     u21:
   353   000130  EF9C  F000         	goto	l797
   354   000134                     u20:
   355   000134                     
   356                           ;newmain.c: 62:             if (value[1] >= value[2]) {
   357   000134  0E00               	movlw	0
   358   000136  6E17               	movwf	_an_cnt^0,c
   359   000138                     l797:
   360                           
   361                           ;newmain.c: 64:                 digits[2] = 3;
   362   000138  0E0B               	movlw	low _an_list
   363   00013A  2417               	addwf	_an_cnt^0,w,c
   364   00013C  6ED9               	movwf	fsr2l,c
   365   00013E  6ADA               	clrf	fsr2h,c
   366   000140  0E00               	movlw	high _an_list
   367   000142  22DA               	addwfc	fsr2h,f,c
   368   000144  50DF               	movf	indf2,w,c
   369   000146  6E1D               	movwf	??_main^0,c
   370   000148  461D               	rlncf	??_main^0,f,c
   371   00014A  461D               	rlncf	??_main^0,f,c
   372   00014C  50C2               	movf	194,w,c	;volatile
   373   00014E  181D               	xorwf	??_main^0,w,c
   374   000150  0B83               	andlw	-125
   375   000152  181D               	xorwf	??_main^0,w,c
   376   000154  6EC2               	movwf	194,c	;volatile
   377   000156                     
   378                           ;newmain.c: 65:             } else {
   379   000156  82C2               	bsf	4034,1,c	;volatile
   380   000158                     l801:
   381                           
   382                           ;newmain.c: 69:         } else {
   383   000158  5010               	movf	(_value+2)^0,w,c
   384   00015A  5C0E               	subwf	_value^0,w,c
   385   00015C  5011               	movf	(_value+3)^0,w,c
   386   00015E  580F               	subwfb	(_value+1)^0,w,c
   387   000160  A0D8               	btfss	status,0,c
   388   000162  EFB5  F000         	goto	u31
   389   000166  EFB7  F000         	goto	u30
   390   00016A                     u31:
   391   00016A  EFDB  F000         	goto	l813
   392   00016E                     u30:
   393   00016E  5012               	movf	(_value+4)^0,w,c
   394   000170  5C0E               	subwf	_value^0,w,c
   395   000172  5013               	movf	(_value+5)^0,w,c
   396   000174  580F               	subwfb	(_value+1)^0,w,c
   397   000176  A0D8               	btfss	status,0,c
   398   000178  EFC0  F000         	goto	u41
   399   00017C  EFC2  F000         	goto	u40
   400   000180                     u41:
   401   000180  EFDB  F000         	goto	l813
   402   000184                     u40:
   403   000184                     
   404                           ;newmain.c: 70:             digits[0] = 3;
   405   000184  0E01               	movlw	1
   406   000186  6E14               	movwf	_digits^0,c
   407   000188                     
   408                           ;newmain.c: 71:             if (value[0] >= value[1]) {
   409   000188  5012               	movf	(_value+4)^0,w,c
   410   00018A  5C10               	subwf	(_value+2)^0,w,c
   411   00018C  5013               	movf	(_value+5)^0,w,c
   412   00018E  5811               	subwfb	(_value+3)^0,w,c
   413   000190  A0D8               	btfss	status,0,c
   414   000192  EFCD  F000         	goto	u51
   415   000196  EFCF  F000         	goto	u50
   416   00019A                     u51:
   417   00019A  EFD5  F000         	goto	l811
   418   00019E                     u50:
   419   00019E                     
   420                           ;newmain.c: 72:                 digits[1] = 1;
   421   00019E  0E02               	movlw	2
   422   0001A0  6E15               	movwf	(_digits+1)^0,c
   423                           
   424                           ;newmain.c: 73:                 digits[2] = 2;
   425   0001A2  0E03               	movlw	3
   426   0001A4  6E16               	movwf	(_digits+2)^0,c
   427                           
   428                           ;newmain.c: 74:             } else {
   429   0001A6  EF74  F000         	goto	l787
   430   0001AA                     l811:
   431                           
   432                           ;newmain.c: 75:                 digits[1] = 2;
   433   0001AA  0E03               	movlw	3
   434   0001AC  6E15               	movwf	(_digits+1)^0,c
   435                           
   436                           ;newmain.c: 76:                 digits[2] = 1;
   437   0001AE  0E02               	movlw	2
   438   0001B0  6E16               	movwf	(_digits+2)^0,c
   439   0001B2  EF74  F000         	goto	l787
   440   0001B6                     l813:
   441   0001B6  500E               	movf	_value^0,w,c
   442   0001B8  5C10               	subwf	(_value+2)^0,w,c
   443   0001BA  500F               	movf	(_value+1)^0,w,c
   444   0001BC  5811               	subwfb	(_value+3)^0,w,c
   445   0001BE  A0D8               	btfss	status,0,c
   446   0001C0  EFE4  F000         	goto	u61
   447   0001C4  EFE6  F000         	goto	u60
   448   0001C8                     u61:
   449   0001C8  EF0A  F001         	goto	l825
   450   0001CC                     u60:
   451   0001CC  5012               	movf	(_value+4)^0,w,c
   452   0001CE  5C10               	subwf	(_value+2)^0,w,c
   453   0001D0  5013               	movf	(_value+5)^0,w,c
   454   0001D2  5811               	subwfb	(_value+3)^0,w,c
   455   0001D4  A0D8               	btfss	status,0,c
   456   0001D6  EFEF  F000         	goto	u71
   457   0001DA  EFF1  F000         	goto	u70
   458   0001DE                     u71:
   459   0001DE  EF0A  F001         	goto	l825
   460   0001E2                     u70:
   461   0001E2                     
   462                           ;newmain.c: 79:     }
   463   0001E2  0E02               	movlw	2
   464   0001E4  6E14               	movwf	_digits^0,c
   465   0001E6                     
   466                           ;newmain.c: 80:     return;
   467   0001E6  5012               	movf	(_value+4)^0,w,c
   468   0001E8  5C10               	subwf	(_value+2)^0,w,c
   469   0001EA  5013               	movf	(_value+5)^0,w,c
   470   0001EC  5811               	subwfb	(_value+3)^0,w,c
   471   0001EE  A0D8               	btfss	status,0,c
   472   0001F0  EFFC  F000         	goto	u81
   473   0001F4  EFFE  F000         	goto	u80
   474   0001F8                     u81:
   475   0001F8  EF04  F001         	goto	l823
   476   0001FC                     u80:
   477   0001FC                     
   478                           ;newmain.c: 81: }
   479   0001FC  0E01               	movlw	1
   480   0001FE  6E15               	movwf	(_digits+1)^0,c
   481                           
   482                           ;newmain.c: 82: 
   483   000200  0E03               	movlw	3
   484   000202  6E16               	movwf	(_digits+2)^0,c
   485                           
   486                           ;newmain.c: 83: void __attribute__((picinterrupt(("high_priority")))) isr() {
   487   000204  EF74  F000         	goto	l787
   488   000208                     l823:
   489                           
   490                           ;newmain.c: 84:     if (TMR0IF) {
   491   000208  0E03               	movlw	3
   492   00020A  6E15               	movwf	(_digits+1)^0,c
   493                           
   494                           ;newmain.c: 85:         TMR0IF = 0;
   495   00020C  0E01               	movlw	1
   496   00020E  6E16               	movwf	(_digits+2)^0,c
   497   000210  EF74  F000         	goto	l787
   498   000214                     l825:
   499                           
   500                           ;newmain.c: 88:         PORTE = 0x07;
   501   000214  0E03               	movlw	3
   502   000216  6E14               	movwf	_digits^0,c
   503   000218                     
   504                           ;newmain.c: 89:         PORTD = seg_char[digits[dig_cnt]];
   505   000218  5010               	movf	(_value+2)^0,w,c
   506   00021A  5C0E               	subwf	_value^0,w,c
   507   00021C  5011               	movf	(_value+3)^0,w,c
   508   00021E  580F               	subwfb	(_value+1)^0,w,c
   509   000220  A0D8               	btfss	status,0,c
   510   000222  EF15  F001         	goto	u91
   511   000226  EF17  F001         	goto	u90
   512   00022A                     u91:
   513   00022A  EF1D  F001         	goto	l831
   514   00022E                     u90:
   515   00022E                     
   516                           ;newmain.c: 90:         PORTE = ~(0x01 << dig_cnt);
   517   00022E  0E01               	movlw	1
   518   000230  6E15               	movwf	(_digits+1)^0,c
   519                           
   520                           ;newmain.c: 91: 
   521   000232  0E02               	movlw	2
   522   000234  6E16               	movwf	(_digits+2)^0,c
   523                           
   524                           ;newmain.c: 92:         dig_cnt++;
   525   000236  EF74  F000         	goto	l787
   526   00023A                     l831:
   527                           
   528                           ;newmain.c: 93:         if (dig_cnt >= 3) {
   529   00023A  0E02               	movlw	2
   530   00023C  6E15               	movwf	(_digits+1)^0,c
   531                           
   532                           ;newmain.c: 94:             dig_cnt = 0;
   533   00023E  0E01               	movlw	1
   534   000240  6E16               	movwf	(_digits+2)^0,c
   535   000242  EF74  F000         	goto	l787
   536   000246  EF46  F000         	goto	start
   537   00024A                     __end_of_main:
   538                           	callstack 0
   539                           
   540 ;; *************** function _isr *****************
   541 ;; Defined at:
   542 ;;		line 101 in file "newmain.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   556 ;;      Params:         0       0       0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0       0       0
   558 ;;      Temps:          4       0       0       0       0       0       0
   559 ;;      Totals:         4       0       0       0       0       0       0
   560 ;;Total ram usage:        4 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		Interrupt level 2
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	intcode
   570   000008                     __pintcode:
   571                           	callstack 0
   572   000008                     _isr:
   573                           	callstack 30
   574                           
   575                           ;incstack = 0
   576   000008  821F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   577   00000A  CFD9 F01B          	movff	fsr2l,??_isr+2
   578   00000E  CFDA F01C          	movff	fsr2h,??_isr+3
   579   000012  A4F2               	btfss	4082,2,c	;volatile
   580   000014  EF0E  F000         	goto	i2u10_41
   581   000018  EF10  F000         	goto	i2u10_40
   582   00001C                     i2u10_41:
   583   00001C  EF40  F000         	goto	i2l87
   584   000020                     i2u10_40:
   585   000020  94F2               	bcf	4082,2,c	;volatile
   586   000022  0E06               	movlw	6
   587   000024  6ED6               	movwf	214,c	;volatile
   588   000026  0E07               	movlw	7
   589   000028  6E84               	movwf	132,c	;volatile
   590   00002A  0E14               	movlw	low _digits
   591   00002C  2418               	addwf	_dig_cnt^0,w,c
   592   00002E  6ED9               	movwf	fsr2l,c
   593   000030  6ADA               	clrf	fsr2h,c
   594   000032  0E00               	movlw	high _digits
   595   000034  22DA               	addwfc	fsr2h,f,c
   596   000036  50DF               	movf	indf2,w,c
   597   000038  6E19               	movwf	??_isr^0,c
   598   00003A  6A1A               	clrf	(??_isr+1)^0,c
   599   00003C  0E01               	movlw	low _seg_char
   600   00003E  2419               	addwf	??_isr^0,w,c
   601   000040  6ED9               	movwf	fsr2l,c
   602   000042  0E00               	movlw	high _seg_char
   603   000044  201A               	addwfc	(??_isr+1)^0,w,c
   604   000046  6EDA               	movwf	fsr2h,c
   605   000048  50DF               	movf	indf2,w,c
   606   00004A  6E83               	movwf	131,c	;volatile
   607   00004C  C018  F019         	movff	_dig_cnt,??_isr
   608   000050  0E01               	movlw	1
   609   000052  6E1A               	movwf	(??_isr+1)^0,c
   610   000054  2A19               	incf	??_isr^0,f,c
   611   000056  EF2F  F000         	goto	i2u11_44
   612   00005A                     i2u11_45:
   613   00005A  90D8               	bcf	status,0,c
   614   00005C  361A               	rlcf	(??_isr+1)^0,f,c
   615   00005E                     i2u11_44:
   616   00005E  2E19               	decfsz	??_isr^0,f,c
   617   000060  EF2D  F000         	goto	i2u11_45
   618   000064  501A               	movf	(??_isr+1)^0,w,c
   619   000066  0AFF               	xorlw	255
   620   000068  6E84               	movwf	132,c	;volatile
   621   00006A  2A18               	incf	_dig_cnt^0,f,c
   622   00006C  0E02               	movlw	2
   623   00006E  6418               	cpfsgt	_dig_cnt^0,c
   624   000070  EF3C  F000         	goto	i2u12_41
   625   000074  EF3E  F000         	goto	i2u12_40
   626   000078                     i2u12_41:
   627   000078  EF40  F000         	goto	i2l87
   628   00007C                     i2u12_40:
   629   00007C  0E00               	movlw	0
   630   00007E  6E18               	movwf	_dig_cnt^0,c
   631   000080                     i2l87:
   632   000080  C01C  FFDA         	movff	??_isr+3,fsr2h
   633   000084  C01B  FFD9         	movff	??_isr+2,fsr2l
   634   000088  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   635   00008A  0011               	retfie		f
   636   00008C                     __end_of_isr:
   637                           	callstack 0
   638   000000                     
   639                           	psect	rparam
   640   000000                     
   641                           	psect	temp
   642   00001F                     btemp:
   643                           	callstack 0
   644   00001F                     	ds	1
   645   000000                     int$flags	set	btemp
   646   000000                     wtemp8	set	btemp+1
   647   000000                     ttemp5	set	btemp+1
   648   000000                     ttemp6	set	btemp+4
   649   000000                     ttemp7	set	btemp+8
   650                           
   651                           	psect	idloc
   652                           
   653                           ;Config register IDLOC0 @ 0x200000
   654                           ;	unspecified, using default values
   655   200000                     	org	2097152
   656   200000  FF                 	db	255
   657                           
   658                           ;Config register IDLOC1 @ 0x200001
   659                           ;	unspecified, using default values
   660   200001                     	org	2097153
   661   200001  FF                 	db	255
   662                           
   663                           ;Config register IDLOC2 @ 0x200002
   664                           ;	unspecified, using default values
   665   200002                     	org	2097154
   666   200002  FF                 	db	255
   667                           
   668                           ;Config register IDLOC3 @ 0x200003
   669                           ;	unspecified, using default values
   670   200003                     	org	2097155
   671   200003  FF                 	db	255
   672                           
   673                           ;Config register IDLOC4 @ 0x200004
   674                           ;	unspecified, using default values
   675   200004                     	org	2097156
   676   200004  FF                 	db	255
   677                           
   678                           ;Config register IDLOC5 @ 0x200005
   679                           ;	unspecified, using default values
   680   200005                     	org	2097157
   681   200005  FF                 	db	255
   682                           
   683                           ;Config register IDLOC6 @ 0x200006
   684                           ;	unspecified, using default values
   685   200006                     	org	2097158
   686   200006  FF                 	db	255
   687                           
   688                           ;Config register IDLOC7 @ 0x200007
   689                           ;	unspecified, using default values
   690   200007                     	org	2097159
   691   200007  FF                 	db	255
   692                           
   693                           	psect	config
   694                           
   695                           ; Padding undefined space
   696   300000                     	org	3145728
   697   300000  FF                 	db	255
   698                           
   699                           ;Config register CONFIG1H @ 0x300001
   700                           ;	Oscillator Selection bits
   701                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
   702                           ;	4X PLL Enable
   703                           ;	PLLCFG = 0x0, unprogrammed default
   704                           ;	Primary clock enable bit
   705                           ;	PRICLKEN = 0x1, unprogrammed default
   706                           ;	Fail-Safe Clock Monitor Enable bit
   707                           ;	FCMEN = 0x0, unprogrammed default
   708                           ;	Internal/External Oscillator Switchover bit
   709                           ;	IESO = 0x0, unprogrammed default
   710   300001                     	org	3145729
   711   300001  22                 	db	34
   712                           
   713                           ;Config register CONFIG2L @ 0x300002
   714                           ;	unspecified, using default values
   715                           ;	Power-up Timer Enable bit
   716                           ;	PWRTEN = 0x1, unprogrammed default
   717                           ;	Brown-out Reset Enable bits
   718                           ;	BOREN = 0x3, unprogrammed default
   719                           ;	Brown Out Reset Voltage bits
   720                           ;	BORV = 0x3, unprogrammed default
   721   300002                     	org	3145730
   722   300002  1F                 	db	31
   723                           
   724                           ;Config register CONFIG2H @ 0x300003
   725                           ;	Watchdog Timer Enable bits
   726                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   727                           ;	Watchdog Timer Postscale Select bits
   728                           ;	WDTPS = 0xF, unprogrammed default
   729   300003                     	org	3145731
   730   300003  3C                 	db	60
   731                           
   732                           ; Padding undefined space
   733   300004                     	org	3145732
   734   300004  FF                 	db	255
   735                           
   736                           ;Config register CONFIG3H @ 0x300005
   737                           ;	unspecified, using default values
   738                           ;	CCP2 MUX bit
   739                           ;	CCP2MX = 0x1, unprogrammed default
   740                           ;	PORTB A/D Enable bit
   741                           ;	PBADEN = 0x1, unprogrammed default
   742                           ;	P3A/CCP3 Mux bit
   743                           ;	CCP3MX = 0x1, unprogrammed default
   744                           ;	HFINTOSC Fast Start-up
   745                           ;	HFOFST = 0x1, unprogrammed default
   746                           ;	Timer3 Clock input mux bit
   747                           ;	T3CMX = 0x1, unprogrammed default
   748                           ;	ECCP2 B output mux bit
   749                           ;	P2BMX = 0x1, unprogrammed default
   750                           ;	MCLR Pin Enable bit
   751                           ;	MCLRE = 0x1, unprogrammed default
   752   300005                     	org	3145733
   753   300005  BF                 	db	191
   754                           
   755                           ;Config register CONFIG4L @ 0x300006
   756                           ;	unspecified, using default values
   757                           ;	Stack Full/Underflow Reset Enable bit
   758                           ;	STVREN = 0x1, unprogrammed default
   759                           ;	Single-Supply ICSP Enable bit
   760                           ;	LVP = 0x1, unprogrammed default
   761                           ;	Extended Instruction Set Enable bit
   762                           ;	XINST = 0x0, unprogrammed default
   763                           ;	Background Debug
   764                           ;	DEBUG = 0x1, unprogrammed default
   765   300006                     	org	3145734
   766   300006  85                 	db	133
   767                           
   768                           ; Padding undefined space
   769   300007                     	org	3145735
   770   300007  FF                 	db	255
   771                           
   772                           ;Config register CONFIG5L @ 0x300008
   773                           ;	unspecified, using default values
   774                           ;	Code Protection Block 0
   775                           ;	CP0 = 0x1, unprogrammed default
   776                           ;	Code Protection Block 1
   777                           ;	CP1 = 0x1, unprogrammed default
   778                           ;	Code Protection Block 2
   779                           ;	CP2 = 0x1, unprogrammed default
   780                           ;	Code Protection Block 3
   781                           ;	CP3 = 0x1, unprogrammed default
   782   300008                     	org	3145736
   783   300008  0F                 	db	15
   784                           
   785                           ;Config register CONFIG5H @ 0x300009
   786                           ;	unspecified, using default values
   787                           ;	Boot Block Code Protection bit
   788                           ;	CPB = 0x1, unprogrammed default
   789                           ;	Data EEPROM Code Protection bit
   790                           ;	CPD = 0x1, unprogrammed default
   791   300009                     	org	3145737
   792   300009  C0                 	db	192
   793                           
   794                           ;Config register CONFIG6L @ 0x30000A
   795                           ;	unspecified, using default values
   796                           ;	Write Protection Block 0
   797                           ;	WRT0 = 0x1, unprogrammed default
   798                           ;	Write Protection Block 1
   799                           ;	WRT1 = 0x1, unprogrammed default
   800                           ;	Write Protection Block 2
   801                           ;	WRT2 = 0x1, unprogrammed default
   802                           ;	Write Protection Block 3
   803                           ;	WRT3 = 0x1, unprogrammed default
   804   30000A                     	org	3145738
   805   30000A  0F                 	db	15
   806                           
   807                           ;Config register CONFIG6H @ 0x30000B
   808                           ;	unspecified, using default values
   809                           ;	Configuration Register Write Protection bit
   810                           ;	WRTC = 0x1, unprogrammed default
   811                           ;	Boot Block Write Protection bit
   812                           ;	WRTB = 0x1, unprogrammed default
   813                           ;	Data EEPROM Write Protection bit
   814                           ;	WRTD = 0x1, unprogrammed default
   815   30000B                     	org	3145739
   816   30000B  E0                 	db	224
   817                           
   818                           ;Config register CONFIG7L @ 0x30000C
   819                           ;	unspecified, using default values
   820                           ;	Table Read Protection Block 0
   821                           ;	EBTR0 = 0x1, unprogrammed default
   822                           ;	Table Read Protection Block 1
   823                           ;	EBTR1 = 0x1, unprogrammed default
   824                           ;	Table Read Protection Block 2
   825                           ;	EBTR2 = 0x1, unprogrammed default
   826                           ;	Table Read Protection Block 3
   827                           ;	EBTR3 = 0x1, unprogrammed default
   828   30000C                     	org	3145740
   829   30000C  0F                 	db	15
   830                           
   831                           ;Config register CONFIG7H @ 0x30000D
   832                           ;	unspecified, using default values
   833                           ;	Boot Block Table Read Protection bit
   834                           ;	EBTRB = 0x1, unprogrammed default
   835   30000D                     	org	3145741
   836   30000D  40                 	db	64
   837                           tosu	equ	0xFFF
   838                           tosh	equ	0xFFE
   839                           tosl	equ	0xFFD
   840                           stkptr	equ	0xFFC
   841                           pclatu	equ	0xFFB
   842                           pclath	equ	0xFFA
   843                           pcl	equ	0xFF9
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           prodh	equ	0xFF4
   849                           prodl	equ	0xFF3
   850                           indf0	equ	0xFEF
   851                           postinc0	equ	0xFEE
   852                           postdec0	equ	0xFED
   853                           preinc0	equ	0xFEC
   854                           plusw0	equ	0xFEB
   855                           fsr0h	equ	0xFEA
   856                           fsr0l	equ	0xFE9
   857                           wreg	equ	0xFE8
   858                           indf1	equ	0xFE7
   859                           postinc1	equ	0xFE6
   860                           postdec1	equ	0xFE5
   861                           preinc1	equ	0xFE4
   862                           plusw1	equ	0xFE3
   863                           fsr1h	equ	0xFE2
   864                           fsr1l	equ	0xFE1
   865                           bsr	equ	0xFE0
   866                           indf2	equ	0xFDF
   867                           postinc2	equ	0xFDE
   868                           postdec2	equ	0xFDD
   869                           preinc2	equ	0xFDC
   870                           plusw2	equ	0xFDB
   871                           fsr2h	equ	0xFDA
   872                           fsr2l	equ	0xFD9
   873                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      1E       1       31.9%
BITBIGSFRll         46      0       0      21        0.0%
BITBIGSFRhl         29      0       0      19        0.0%
BITBIGSFRhhhhl      1A      0       0      16        0.0%
BITBIGSFRhhhlh      10      0       0      17        0.0%
BITBIGSFRhhhhh       D      0       0      15        0.0%
BITBIGSFRlh          D      0       0      20        0.0%
BITBIGSFRhhl         1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      22        0.0%
DATA                 0      0      1E      24        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat May 27 16:48:18 2023

                     u10 00F6                       u11 00F2                       u20 0134  
                     u21 0130                       u30 016E                       u31 016A  
                     u40 0184                       u41 0180                       u50 019E  
                     u51 019A                       u60 01CC                       u61 01C8  
                     u70 01E2                       u71 01DE                       u80 01FC  
                     u81 01F8                       u90 022E                       u91 022A  
                    l801 0158                      l811 01AA                      l803 016E  
                    l821 01FC                      l805 0184                      l813 01B6  
                    l831 023A                      l823 0208                      l815 01CC  
                    l807 0188                      l817 01E2                      l825 0214  
                    l809 019E                      l827 0218                      l819 01E6  
                    l771 00C4                      l763 0090                      l829 022E  
                    l781 00E2                      l773 00D6                      l765 0096  
                    l791 0122                      l783 00E4                      l775 00D8  
                    l767 009C                      l793 0124                      l785 00E6  
                    l777 00DA                      l769 00A2                      l795 0134  
                    l787 00E8                      l779 00DE                      l797 0138  
                    l789 00F6                      l799 0156                      _GIE 7F97  
                    _isr 0008                      prod 0FF3                      wreg 0FE8  
                   ?_isr 0019                     i2l87 0080                     _main 0090  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 001F                     prodl 0FF3  
                   start 008C             ___param_bank 0000                    ??_isr 0019  
                  ?_main 0019                    _T0CON 0FD5                    i2l841 004C  
                  i2l833 0012                    i2l843 006A                    i2l835 0020  
                  i2l845 006C                    i2l837 0022                    i2l847 007C  
                  i2l839 002A                    _TMR0L 0FD6                    _PORTD 0F83  
                  _PORTE 0F84                    _TRISA 0F92                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95                    _TRISE 0F96  
                  _value 000E                    tablat 0FF5                    ttemp5 0020  
                  ttemp6 0023                    ttemp7 0027                    status 0FD8  
                  wtemp8 0020          __initialization 024A             __end_of_main 024A  
                 ??_main 001D            __activetblptr 0000                   _ADCON0 0FC2  
                 _ADCON2 0FC0                   _ADRESH 0FC4                   _ADRESL 0FC3  
                 _ANSELA 0F38                   _ANSELB 0F39                   _ANSELC 0F3A  
                 _ANSELD 0F3B                   _ANSELE 0F3C                   _GODONE 7E11  
                 _TMR0IE 7F95                   _TMR0IF 7F92                   _TMR0IP 7F8A  
                 _an_cnt 0017                   _digits 0014                   clear_0 0270  
                 isa$std 0001             __pdataCOMRAM 0001                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0276            ___rparam_used 0001           __pcstackCOMRAM 0019  
                i2u10_40 0020                  i2u10_41 001C                  i2u11_44 005E  
                i2u11_45 005A                  i2u12_40 007C                  i2u12_41 0078  
                __Hparam 0000                  __Lparam 0000                  __pcinit 024A  
                _an_list 000B                  _dig_cnt 0018                  __ramtop 0600  
                __ptext0 0090     end_of_initialization 0276                  postdec1 0FE5  
                postdec2 0FDD                  postinc0 0FEE                  postinc2 0FDE  
          __pidataCOMRAM 0280      start_initialization 024A              __end_of_isr 008C  
            __pbssCOMRAM 000E                __pintcode 0008               _ADCON0bits 0FC2  
              copy_data0 025E                 __Hrparam 0000                 __Lrparam 0000  
               _seg_char 0001                 isa$xinst 0000                 int$flags 001F  
               intlevel2 0000  
