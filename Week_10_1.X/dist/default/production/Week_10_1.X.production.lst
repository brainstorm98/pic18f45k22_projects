

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat May 20 19:34:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 06/04/2022 GMT
    20                           ; 
    21                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F45K22 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _PORTBbits	set	3969
    54   000000                     _ANSELB	set	3897
    55   000000                     _PORTB	set	3969
    56   000000                     _TRISB	set	3987
    57                           
    58                           	psect	smallconst
    59   000600                     __psmallconst:
    60                           	callstack 0
    61   000600  00                 	db	0
    62   000601                     STR_1:
    63   000601  20                 	db	32
    64   000602  20                 	db	32
    65   000603  48                 	db	72	;'H'
    66   000604  45                 	db	69	;'E'
    67   000605  4C                 	db	76	;'L'
    68   000606  4C                 	db	76	;'L'
    69   000607  4F                 	db	79	;'O'
    70   000608  20                 	db	32
    71   000609  57                 	db	87	;'W'
    72   00060A  4F                 	db	79	;'O'
    73   00060B  52                 	db	82	;'R'
    74   00060C  4C                 	db	76	;'L'
    75   00060D  44                 	db	68	;'D'
    76   00060E  21                 	db	33
    77   00060F  20                 	db	32
    78   000610  20                 	db	32
    79   000611  00                 	db	0
    80   000612  00                 	db	0	; dummy byte at the end
    81   000000                     
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85   000736                     __pcinit:
    86                           	callstack 0
    87   000736                     start_initialization:
    88                           	callstack 0
    89   000736                     __initialization:
    90                           	callstack 0
    91   000736                     end_of_initialization:
    92                           	callstack 0
    93   000736                     __end_of__initialization:
    94                           	callstack 0
    95   000736  0E00               	movlw	low (__Lsmallconst shr (0+16))
    96   000738  6EF8               	movwf	tblptru,c
    97   00073A  0E06               	movlw	high __Lsmallconst
    98   00073C  6EF7               	movwf	tblptrh,c
    99   00073E  0100               	movlb	0
   100   000740  EF78  F003         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	cstackCOMRAM
   103   000001                     __pcstackCOMRAM:
   104                           	callstack 0
   105   000001                     ??_lcd_write:
   106                           
   107                           ; 1 bytes @ 0x0
   108   000001                     	ds	1
   109   000002                     lcd_write@c:
   110                           	callstack 0
   111                           
   112                           ; 1 bytes @ 0x1
   113   000002                     	ds	1
   114   000003                     ??_lcd_clear:
   115   000003                     lcd_goto@pos:
   116                           	callstack 0
   117   000003                     lcd_puts@s:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x2
   121   000003                     	ds	1
   122   000004                     ??_lcd_init:
   123                           
   124                           ; 1 bytes @ 0x3
   125   000004                     	ds	1
   126   000005                     
   127                           ; 1 bytes @ 0x4
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 19 in file "newmain.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   147 ;;      Params:         0       0       0       0       0       0       0
   148 ;;      Locals:         0       0       0       0       0       0       0
   149 ;;      Temps:          0       0       0       0       0       0       0
   150 ;;      Totals:         0       0       0       0       0       0       0
   151 ;;Total ram usage:        0 bytes
   152 ;; Hardware stack levels required when called: 3
   153 ;; This function calls:
   154 ;;		_lcd_clear
   155 ;;		_lcd_goto
   156 ;;		_lcd_init
   157 ;;		_lcd_puts
   158 ;; This function is called by:
   159 ;;		Startup code after reset
   160 ;; This function uses a non-reentrant model
   161 ;;
   162                           
   163                           	psect	text0
   164   0006F0                     __ptext0:
   165                           	callstack 0
   166   0006F0                     _main:
   167                           	callstack 28
   168   0006F0  0E00               	movlw	0
   169   0006F2  010F               	movlb	15	; () banked
   170   0006F4  6F39               	movwf	57,b	;volatile
   171   0006F6  0EC0               	movlw	192
   172   0006F8  6E93               	movwf	147,c	;volatile
   173   0006FA                     
   174                           ; BSR set to: 15
   175   0006FA  EC0A  F003         	call	_lcd_init	;wreg free
   176   0006FE  EC8E  F003         	call	_lcd_clear	;wreg free
   177   000702  0E00               	movlw	0
   178   000704  ECA2  F003         	call	_lcd_goto
   179   000708  0E01               	movlw	low STR_1
   180   00070A  6E03               	movwf	lcd_puts@s^0,c
   181   00070C  0E06               	movlw	high STR_1
   182   00070E  6E04               	movwf	(lcd_puts@s+1)^0,c
   183   000710  EC5C  F003         	call	_lcd_puts	;wreg free
   184   000714                     l17:
   185   000714  EF8A  F003         	goto	l17
   186   000718  EF00  F000         	goto	start
   187   00071C                     __end_of_main:
   188                           	callstack 0
   189                           
   190 ;; *************** function _lcd_puts *****************
   191 ;; Defined at:
   192 ;;		line 57 in file "LCD.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;  s               2    2[COMRAM] PTR const unsigned char 
   195 ;;		 -> STR_1(17), 
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   207 ;;      Params:         2       0       0       0       0       0       0
   208 ;;      Locals:         0       0       0       0       0       0       0
   209 ;;      Temps:          0       0       0       0       0       0       0
   210 ;;      Totals:         2       0       0       0       0       0       0
   211 ;;Total ram usage:        2 bytes
   212 ;; Hardware stack levels used: 1
   213 ;; Hardware stack levels required when called: 1
   214 ;; This function calls:
   215 ;;		_lcd_write
   216 ;; This function is called by:
   217 ;;		_main
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text1
   222   0006B8                     __ptext1:
   223                           	callstack 0
   224   0006B8                     _lcd_puts:
   225                           	callstack 29
   226   0006B8                     
   227                           ;LCD.c: 57: lcd_puts(const char * s);LCD.c: 58: {;LCD.c: 59:  PORTBbits.RB4 = 1;
   228   0006B8  8881               	bsf	129,4,c	;volatile
   229                           
   230                           ;LCD.c: 60:  while(*s)
   231   0006BA  EF69  F003         	goto	l817
   232   0006BE                     l813:
   233                           
   234                           ;LCD.c: 61:   lcd_write(*s++);
   235   0006BE  C003  FFF6         	movff	lcd_puts@s,tblptrl
   236   0006C2  C004  FFF7         	movff	lcd_puts@s+1,tblptrh
   237   0006C6                     	if	0	;tblptru may be non-zero
   238   0006C6                     	endif
   239   0006C6                     	if	0	;tblptru may be non-zero
   240   0006C6                     	endif
   241   0006C6  0008               	tblrd		*
   242   0006C8  50F5               	movf	tablat,w,c
   243   0006CA  EC3F  F003         	call	_lcd_write
   244   0006CE  4A03               	infsnz	lcd_puts@s^0,f,c
   245   0006D0  2A04               	incf	(lcd_puts@s+1)^0,f,c
   246   0006D2                     l817:
   247                           
   248                           ;LCD.c: 60:  while(*s)
   249   0006D2  C003  FFF6         	movff	lcd_puts@s,tblptrl
   250   0006D6  C004  FFF7         	movff	lcd_puts@s+1,tblptrh
   251   0006DA                     	if	0	;tblptru may be non-zero
   252   0006DA                     	endif
   253   0006DA                     	if	0	;tblptru may be non-zero
   254   0006DA                     	endif
   255   0006DA  0008               	tblrd		*
   256   0006DC  50F5               	movf	tablat,w,c
   257   0006DE  0900               	iorlw	0
   258   0006E0  A4D8               	btfss	status,2,c
   259   0006E2  EF75  F003         	goto	u21
   260   0006E6  EF77  F003         	goto	u20
   261   0006EA                     u21:
   262   0006EA  EF5F  F003         	goto	l813
   263   0006EE                     u20:
   264   0006EE  0012               	return		;funcret
   265   0006F0                     __end_of_lcd_puts:
   266                           	callstack 0
   267                           
   268 ;; *************** function _lcd_init *****************
   269 ;; Defined at:
   270 ;;		line 87 in file "LCD.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  init_value      1    0        unsigned char 
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   284 ;;      Params:         0       0       0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0       0       0
   286 ;;      Temps:          1       0       0       0       0       0       0
   287 ;;      Totals:         1       0       0       0       0       0       0
   288 ;;Total ram usage:        1 bytes
   289 ;; Hardware stack levels used: 1
   290 ;; Hardware stack levels required when called: 2
   291 ;; This function calls:
   292 ;;		_lcd_clear
   293 ;;		_lcd_write
   294 ;; This function is called by:
   295 ;;		_main
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text2
   300   000614                     __ptext2:
   301                           	callstack 0
   302   000614                     _lcd_init:
   303                           	callstack 28
   304   000614                     
   305                           ;LCD.c: 96:  PORTBbits.RB4 = 0;
   306   000614  9881               	bcf	129,4,c	;volatile
   307   000616                     
   308                           ;LCD.c: 97:  PORTBbits.RB5 = 0;
   309   000616  9A81               	bcf	129,5,c	;volatile
   310   000618                     
   311                           ;LCD.c: 99:  _delay((unsigned long)((15)*(8000000/4000.0)));
   312   000618  0E27               	movlw	39
   313   00061A  6E04               	movwf	??_lcd_init^0,c
   314   00061C  0EF5               	movlw	245
   315   00061E                     u37:
   316   00061E  2EE8               	decfsz	wreg,f,c
   317   000620  D7FE               	bra	u37
   318   000622  2E04               	decfsz	??_lcd_init^0,f,c
   319   000624  D7FC               	bra	u37
   320   000626  F000               	nop	
   321   000628                     
   322                           ;LCD.c: 100:  PORTB = (PORTB & 0xF0)+init_value;
   323   000628  5081               	movf	129,w,c	;volatile
   324   00062A  0BF0               	andlw	240
   325   00062C  0F03               	addlw	3
   326   00062E  6E81               	movwf	129,c	;volatile
   327   000630                     
   328                           ;LCD.c: 101:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
   329   000630  8A81               	bsf	129,5,c	;volatile
   330   000632  9A81               	bcf	129,5,c	;volatile
   331   000634                     
   332                           ;LCD.c: 102:  _delay((unsigned long)((5)*(8000000/4000.0)));
   333   000634  0E0D               	movlw	13
   334   000636  6E04               	movwf	??_lcd_init^0,c
   335   000638  0EFC               	movlw	252
   336   00063A                     u47:
   337   00063A  2EE8               	decfsz	wreg,f,c
   338   00063C  D7FE               	bra	u47
   339   00063E  2E04               	decfsz	??_lcd_init^0,f,c
   340   000640  D7FC               	bra	u47
   341   000642                     
   342                           ;LCD.c: 103:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
   343   000642  8A81               	bsf	129,5,c	;volatile
   344   000644  9A81               	bcf	129,5,c	;volatile
   345   000646                     
   346                           ;LCD.c: 104:  _delay((unsigned long)((200)*(8000000/4000000.0)));
   347   000646  0E85               	movlw	133
   348   000648                     u57:
   349   000648  2EE8               	decfsz	wreg,f,c
   350   00064A  D7FE               	bra	u57
   351   00064C  F000               	nop	
   352   00064E                     
   353                           ;LCD.c: 105:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
   354   00064E  8A81               	bsf	129,5,c	;volatile
   355   000650  9A81               	bcf	129,5,c	;volatile
   356   000652                     
   357                           ;LCD.c: 106:  _delay((unsigned long)((200)*(8000000/4000000.0)));
   358   000652  0E85               	movlw	133
   359   000654                     u67:
   360   000654  2EE8               	decfsz	wreg,f,c
   361   000656  D7FE               	bra	u67
   362   000658  F000               	nop	
   363   00065A                     
   364                           ;LCD.c: 107:  PORTB = (PORTB & 0xF0)+2;
   365   00065A  5081               	movf	129,w,c	;volatile
   366   00065C  0BF0               	andlw	240
   367   00065E  0F02               	addlw	2
   368   000660  6E81               	movwf	129,c	;volatile
   369   000662                     
   370                           ;LCD.c: 108:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
   371   000662  8A81               	bsf	129,5,c	;volatile
   372   000664  9A81               	bcf	129,5,c	;volatile
   373   000666                     
   374                           ;LCD.c: 110:  lcd_write(0x28);
   375   000666  0E28               	movlw	40
   376   000668  EC3F  F003         	call	_lcd_write
   377   00066C                     
   378                           ;LCD.c: 111:  lcd_write(0xC);
   379   00066C  0E0C               	movlw	12
   380   00066E  EC3F  F003         	call	_lcd_write
   381   000672                     
   382                           ;LCD.c: 112:  lcd_clear();
   383   000672  EC8E  F003         	call	_lcd_clear	;wreg free
   384   000676                     
   385                           ;LCD.c: 113:  lcd_write(0x6);
   386   000676  0E06               	movlw	6
   387   000678  EC3F  F003         	call	_lcd_write
   388   00067C  0012               	return		;funcret
   389   00067E                     __end_of_lcd_init:
   390                           	callstack 0
   391                           
   392 ;; *************** function _lcd_clear *****************
   393 ;; Defined at:
   394 ;;		line 47 in file "LCD.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   408 ;;      Params:         0       0       0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0       0       0
   410 ;;      Temps:          1       0       0       0       0       0       0
   411 ;;      Totals:         1       0       0       0       0       0       0
   412 ;;Total ram usage:        1 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; Hardware stack levels required when called: 1
   415 ;; This function calls:
   416 ;;		_lcd_write
   417 ;; This function is called by:
   418 ;;		_main
   419 ;;		_lcd_init
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text3
   424   00071C                     __ptext3:
   425                           	callstack 0
   426   00071C                     _lcd_clear:
   427                           	callstack 28
   428   00071C                     
   429                           ;LCD.c: 49:  PORTBbits.RB4 = 0;
   430   00071C  9881               	bcf	129,4,c	;volatile
   431   00071E                     
   432                           ;LCD.c: 50:  lcd_write(0x1);
   433   00071E  0E01               	movlw	1
   434   000720  EC3F  F003         	call	_lcd_write
   435   000724                     
   436                           ;LCD.c: 51:  _delay((unsigned long)((2)*(8000000/4000.0)));
   437   000724  0E06               	movlw	6
   438   000726  6E03               	movwf	??_lcd_clear^0,c
   439   000728  0E30               	movlw	48
   440   00072A                     u77:
   441   00072A  2EE8               	decfsz	wreg,f,c
   442   00072C  D7FE               	bra	u77
   443   00072E  2E03               	decfsz	??_lcd_clear^0,f,c
   444   000730  D7FC               	bra	u77
   445   000732  D000               	nop2	
   446   000734  0012               	return		;funcret
   447   000736                     __end_of_lcd_clear:
   448                           	callstack 0
   449                           
   450 ;; *************** function _lcd_goto *****************
   451 ;; Defined at:
   452 ;;		line 79 in file "LCD.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;  pos             1    wreg     unsigned char 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  pos             1    2[COMRAM] unsigned char 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   466 ;;      Params:         0       0       0       0       0       0       0
   467 ;;      Locals:         1       0       0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0
   469 ;;      Totals:         1       0       0       0       0       0       0
   470 ;;Total ram usage:        1 bytes
   471 ;; Hardware stack levels used: 1
   472 ;; Hardware stack levels required when called: 1
   473 ;; This function calls:
   474 ;;		_lcd_write
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text4
   481   000744                     __ptext4:
   482                           	callstack 0
   483   000744                     _lcd_goto:
   484                           	callstack 29
   485                           
   486                           ;incstack = 0
   487                           ;lcd_goto@pos stored from wreg
   488   000744  6E03               	movwf	lcd_goto@pos^0,c
   489   000746                     
   490                           ;LCD.c: 79: lcd_goto(unsigned char pos);LCD.c: 80: {;LCD.c: 81:  PORTBbits.RB4 = 0;
   491   000746  9881               	bcf	129,4,c	;volatile
   492   000748                     
   493                           ;LCD.c: 82:  lcd_write(0x80+pos);
   494   000748  5003               	movf	lcd_goto@pos^0,w,c
   495   00074A  0F80               	addlw	128
   496   00074C  EC3F  F003         	call	_lcd_write
   497   000750  0012               	return		;funcret
   498   000752                     __end_of_lcd_goto:
   499                           	callstack 0
   500                           
   501 ;; *************** function _lcd_write *****************
   502 ;; Defined at:
   503 ;;		line 33 in file "LCD.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  c               1    wreg     unsigned char 
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  c               1    1[COMRAM] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         0       0       0       0       0       0       0
   518 ;;      Locals:         1       0       0       0       0       0       0
   519 ;;      Temps:          1       0       0       0       0       0       0
   520 ;;      Totals:         2       0       0       0       0       0       0
   521 ;;Total ram usage:        2 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_lcd_clear
   527 ;;		_lcd_puts
   528 ;;		_lcd_goto
   529 ;;		_lcd_init
   530 ;;		_lcd_putch
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text5
   535   00067E                     __ptext5:
   536                           	callstack 0
   537   00067E                     _lcd_write:
   538                           	callstack 29
   539                           
   540                           ;incstack = 0
   541                           ;lcd_write@c stored from wreg
   542   00067E  6E02               	movwf	lcd_write@c^0,c
   543   000680                     
   544                           ;LCD.c: 33: lcd_write(unsigned char c);LCD.c: 34: {;LCD.c: 35:  _delay((unsigned long)((
      +                          40)*(8000000/4000000.0)));
   545   000680  0E1A               	movlw	26
   546   000682                     u87:
   547   000682  2EE8               	decfsz	wreg,f,c
   548   000684  D7FE               	bra	u87
   549   000686  D000               	nop2	
   550   000688                     
   551                           ;LCD.c: 36:  PORTB = (PORTB & 0xF0)+( ( c >> 4 ) & 0x0F );
   552   000688  C002  F001         	movff	lcd_write@c,??_lcd_write
   553   00068C  3A01               	swapf	??_lcd_write^0,f,c
   554   00068E  0E0F               	movlw	15
   555   000690  1601               	andwf	??_lcd_write^0,f,c
   556   000692  0E0F               	movlw	15
   557   000694  1601               	andwf	??_lcd_write^0,f,c
   558   000696  5081               	movf	129,w,c	;volatile
   559   000698  0BF0               	andlw	240
   560   00069A  2401               	addwf	??_lcd_write^0,w,c
   561   00069C  6E81               	movwf	129,c	;volatile
   562   00069E                     
   563                           ;LCD.c: 37:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
   564   00069E  8A81               	bsf	129,5,c	;volatile
   565   0006A0  9A81               	bcf	129,5,c	;volatile
   566   0006A2                     
   567                           ;LCD.c: 38:  PORTB = (PORTB & 0xF0)+( c & 0x0F );
   568   0006A2  C002  F001         	movff	lcd_write@c,??_lcd_write
   569   0006A6  0E0F               	movlw	15
   570   0006A8  1601               	andwf	??_lcd_write^0,f,c
   571   0006AA  5081               	movf	129,w,c	;volatile
   572   0006AC  0BF0               	andlw	240
   573   0006AE  2401               	addwf	??_lcd_write^0,w,c
   574   0006B0  6E81               	movwf	129,c	;volatile
   575   0006B2                     
   576                           ;LCD.c: 39:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
   577   0006B2  8A81               	bsf	129,5,c	;volatile
   578   0006B4  9A81               	bcf	129,5,c	;volatile
   579   0006B6  0012               	return		;funcret
   580   0006B8                     __end_of_lcd_write:
   581                           	callstack 0
   582                           
   583                           	psect	rparam
   584   000000                     
   585                           	psect	idloc
   586                           
   587                           ;Config register IDLOC0 @ 0x200000
   588                           ;	unspecified, using default values
   589   200000                     	org	2097152
   590   200000  FF                 	db	255
   591                           
   592                           ;Config register IDLOC1 @ 0x200001
   593                           ;	unspecified, using default values
   594   200001                     	org	2097153
   595   200001  FF                 	db	255
   596                           
   597                           ;Config register IDLOC2 @ 0x200002
   598                           ;	unspecified, using default values
   599   200002                     	org	2097154
   600   200002  FF                 	db	255
   601                           
   602                           ;Config register IDLOC3 @ 0x200003
   603                           ;	unspecified, using default values
   604   200003                     	org	2097155
   605   200003  FF                 	db	255
   606                           
   607                           ;Config register IDLOC4 @ 0x200004
   608                           ;	unspecified, using default values
   609   200004                     	org	2097156
   610   200004  FF                 	db	255
   611                           
   612                           ;Config register IDLOC5 @ 0x200005
   613                           ;	unspecified, using default values
   614   200005                     	org	2097157
   615   200005  FF                 	db	255
   616                           
   617                           ;Config register IDLOC6 @ 0x200006
   618                           ;	unspecified, using default values
   619   200006                     	org	2097158
   620   200006  FF                 	db	255
   621                           
   622                           ;Config register IDLOC7 @ 0x200007
   623                           ;	unspecified, using default values
   624   200007                     	org	2097159
   625   200007  FF                 	db	255
   626                           
   627                           	psect	config
   628                           
   629                           ; Padding undefined space
   630   300000                     	org	3145728
   631   300000  FF                 	db	255
   632                           
   633                           ;Config register CONFIG1H @ 0x300001
   634                           ;	Oscillator Selection bits
   635                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
   636                           ;	4X PLL Enable
   637                           ;	PLLCFG = 0x0, unprogrammed default
   638                           ;	Primary clock enable bit
   639                           ;	PRICLKEN = 0x1, unprogrammed default
   640                           ;	Fail-Safe Clock Monitor Enable bit
   641                           ;	FCMEN = 0x0, unprogrammed default
   642                           ;	Internal/External Oscillator Switchover bit
   643                           ;	IESO = 0x0, unprogrammed default
   644   300001                     	org	3145729
   645   300001  22                 	db	34
   646                           
   647                           ;Config register CONFIG2L @ 0x300002
   648                           ;	unspecified, using default values
   649                           ;	Power-up Timer Enable bit
   650                           ;	PWRTEN = 0x1, unprogrammed default
   651                           ;	Brown-out Reset Enable bits
   652                           ;	BOREN = 0x3, unprogrammed default
   653                           ;	Brown Out Reset Voltage bits
   654                           ;	BORV = 0x3, unprogrammed default
   655   300002                     	org	3145730
   656   300002  1F                 	db	31
   657                           
   658                           ;Config register CONFIG2H @ 0x300003
   659                           ;	Watchdog Timer Enable bits
   660                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   661                           ;	Watchdog Timer Postscale Select bits
   662                           ;	WDTPS = 0xF, unprogrammed default
   663   300003                     	org	3145731
   664   300003  3C                 	db	60
   665                           
   666                           ; Padding undefined space
   667   300004                     	org	3145732
   668   300004  FF                 	db	255
   669                           
   670                           ;Config register CONFIG3H @ 0x300005
   671                           ;	unspecified, using default values
   672                           ;	CCP2 MUX bit
   673                           ;	CCP2MX = 0x1, unprogrammed default
   674                           ;	PORTB A/D Enable bit
   675                           ;	PBADEN = 0x1, unprogrammed default
   676                           ;	P3A/CCP3 Mux bit
   677                           ;	CCP3MX = 0x1, unprogrammed default
   678                           ;	HFINTOSC Fast Start-up
   679                           ;	HFOFST = 0x1, unprogrammed default
   680                           ;	Timer3 Clock input mux bit
   681                           ;	T3CMX = 0x1, unprogrammed default
   682                           ;	ECCP2 B output mux bit
   683                           ;	P2BMX = 0x1, unprogrammed default
   684                           ;	MCLR Pin Enable bit
   685                           ;	MCLRE = 0x1, unprogrammed default
   686   300005                     	org	3145733
   687   300005  BF                 	db	191
   688                           
   689                           ;Config register CONFIG4L @ 0x300006
   690                           ;	unspecified, using default values
   691                           ;	Stack Full/Underflow Reset Enable bit
   692                           ;	STVREN = 0x1, unprogrammed default
   693                           ;	Single-Supply ICSP Enable bit
   694                           ;	LVP = 0x1, unprogrammed default
   695                           ;	Extended Instruction Set Enable bit
   696                           ;	XINST = 0x0, unprogrammed default
   697                           ;	Background Debug
   698                           ;	DEBUG = 0x1, unprogrammed default
   699   300006                     	org	3145734
   700   300006  85                 	db	133
   701                           
   702                           ; Padding undefined space
   703   300007                     	org	3145735
   704   300007  FF                 	db	255
   705                           
   706                           ;Config register CONFIG5L @ 0x300008
   707                           ;	unspecified, using default values
   708                           ;	Code Protection Block 0
   709                           ;	CP0 = 0x1, unprogrammed default
   710                           ;	Code Protection Block 1
   711                           ;	CP1 = 0x1, unprogrammed default
   712                           ;	Code Protection Block 2
   713                           ;	CP2 = 0x1, unprogrammed default
   714                           ;	Code Protection Block 3
   715                           ;	CP3 = 0x1, unprogrammed default
   716   300008                     	org	3145736
   717   300008  0F                 	db	15
   718                           
   719                           ;Config register CONFIG5H @ 0x300009
   720                           ;	unspecified, using default values
   721                           ;	Boot Block Code Protection bit
   722                           ;	CPB = 0x1, unprogrammed default
   723                           ;	Data EEPROM Code Protection bit
   724                           ;	CPD = 0x1, unprogrammed default
   725   300009                     	org	3145737
   726   300009  C0                 	db	192
   727                           
   728                           ;Config register CONFIG6L @ 0x30000A
   729                           ;	unspecified, using default values
   730                           ;	Write Protection Block 0
   731                           ;	WRT0 = 0x1, unprogrammed default
   732                           ;	Write Protection Block 1
   733                           ;	WRT1 = 0x1, unprogrammed default
   734                           ;	Write Protection Block 2
   735                           ;	WRT2 = 0x1, unprogrammed default
   736                           ;	Write Protection Block 3
   737                           ;	WRT3 = 0x1, unprogrammed default
   738   30000A                     	org	3145738
   739   30000A  0F                 	db	15
   740                           
   741                           ;Config register CONFIG6H @ 0x30000B
   742                           ;	unspecified, using default values
   743                           ;	Configuration Register Write Protection bit
   744                           ;	WRTC = 0x1, unprogrammed default
   745                           ;	Boot Block Write Protection bit
   746                           ;	WRTB = 0x1, unprogrammed default
   747                           ;	Data EEPROM Write Protection bit
   748                           ;	WRTD = 0x1, unprogrammed default
   749   30000B                     	org	3145739
   750   30000B  E0                 	db	224
   751                           
   752                           ;Config register CONFIG7L @ 0x30000C
   753                           ;	unspecified, using default values
   754                           ;	Table Read Protection Block 0
   755                           ;	EBTR0 = 0x1, unprogrammed default
   756                           ;	Table Read Protection Block 1
   757                           ;	EBTR1 = 0x1, unprogrammed default
   758                           ;	Table Read Protection Block 2
   759                           ;	EBTR2 = 0x1, unprogrammed default
   760                           ;	Table Read Protection Block 3
   761                           ;	EBTR3 = 0x1, unprogrammed default
   762   30000C                     	org	3145740
   763   30000C  0F                 	db	15
   764                           
   765                           ;Config register CONFIG7H @ 0x30000D
   766                           ;	unspecified, using default values
   767                           ;	Boot Block Table Read Protection bit
   768                           ;	EBTRB = 0x1, unprogrammed default
   769   30000D                     	org	3145741
   770   30000D  40                 	db	64
   771                           tosu	equ	0xFFF
   772                           tosh	equ	0xFFE
   773                           tosl	equ	0xFFD
   774                           stkptr	equ	0xFFC
   775                           pclatu	equ	0xFFB
   776                           pclath	equ	0xFFA
   777                           pcl	equ	0xFF9
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           prodh	equ	0xFF4
   783                           prodl	equ	0xFF3
   784                           indf0	equ	0xFEF
   785                           postinc0	equ	0xFEE
   786                           postdec0	equ	0xFED
   787                           preinc0	equ	0xFEC
   788                           plusw0	equ	0xFEB
   789                           fsr0h	equ	0xFEA
   790                           fsr0l	equ	0xFE9
   791                           wreg	equ	0xFE8
   792                           indf1	equ	0xFE7
   793                           postinc1	equ	0xFE6
   794                           postdec1	equ	0xFE5
   795                           preinc1	equ	0xFE4
   796                           plusw1	equ	0xFE3
   797                           fsr1h	equ	0xFE2
   798                           fsr1l	equ	0xFE1
   799                           bsr	equ	0xFE0
   800                           indf2	equ	0xFDF
   801                           postinc2	equ	0xFDE
   802                           postdec2	equ	0xFDD
   803                           preinc2	equ	0xFDC
   804                           plusw2	equ	0xFDB
   805                           fsr2h	equ	0xFDA
   806                           fsr2l	equ	0xFD9
   807                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_lcd_init
    _main->_lcd_puts
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_clear
    _lcd_clear->_lcd_write
    _lcd_goto->_lcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     301
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     151
                                              2 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      75
                                              3 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0      30
                                              2 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             1     1      0      45
                                              2 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_clear
     _lcd_write
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_clear
     _lcd_write
   _lcd_puts
     _lcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBIGSFRhh         6C      0       0      15        0.0%
BITBIGSFRhlh        11      0       0      16        0.0%
BITBIGSFRhll        47      0       0      17        0.0%
BITBIGSFRl           1      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
DATA                 0      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat May 20 19:34:45 2023

                     l32 0734                       l17 0714                       l18 0714  
                     l44 0750                       l29 06B6                       l38 06EE  
                     l47 067C                       u20 06EE                       u21 06EA  
                     u37 061E                       u47 063A                       u57 0648  
                     u67 0654                       u77 072A                       u87 0682  
                    l731 06A2                      l723 0680                      l811 06B8  
                    l733 06B2                      l725 0688                      l741 0724  
                    l813 06BE                      l821 06FA                      l735 06B4  
                    l727 069E                      l751 0628                      l743 0614  
                    l815 06CE                      l823 06FE                      l729 06A0  
                    l737 071C                      l761 0644                      l753 0630  
                    l745 0614                      l817 06D2                      l825 0702  
                    l739 071E                      l771 065A                      l763 0646  
                    l755 0632                      l747 0616                      l827 0708  
                    l819 06F0                      l781 0672                      l773 0662  
                    l765 064E                      l757 0634                      l749 0618  
                    l783 0676                      l775 0664                      l767 0650  
                    l759 0642                      l785 0746                      l777 0666  
                    l769 0652                      l787 0748                      l779 066C  
            lcd_goto@pos 0003                      wreg 0FE8                     STR_1 0601  
                   _main 06F0                     start 0000             ___param_bank 0000  
                  ?_main 0001                    _PORTB 0F81                    _TRISB 0F93  
                  tablat 0FF5                    status 0FD8          __initialization 0736  
           __end_of_main 071C                   ??_main 0005            __activetblptr 0001  
                 _ANSELB 0F39         __end_of_lcd_init 067E         __end_of_lcd_goto 0752  
       __end_of_lcd_puts 06F0                   isa$std 0001             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 0736            ___rparam_used 0001  
         __pcstackCOMRAM 0001                ?_lcd_init 0001                ?_lcd_goto 0001  
              ?_lcd_puts 0003                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcd_clear 0736        __end_of_lcd_write 06B8             __psmallconst 0600  
                __pcinit 0736                  __ramtop 0600                  __ptext0 06F0  
                __ptext1 06B8                  __ptext2 0614                  __ptext3 071C  
                __ptext4 0744                  __ptext5 067E               ??_lcd_init 0004  
             ??_lcd_goto 0003               ??_lcd_puts 0005     end_of_initialization 0736  
              _PORTBbits 0F81               lcd_write@c 0002      start_initialization 0736  
              _lcd_clear 071C                _lcd_write 067E              __smallconst 0600  
             ?_lcd_clear 0001               ?_lcd_write 0001                lcd_puts@s 0003  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
               _lcd_init 0614                 _lcd_goto 0744                 _lcd_puts 06B8  
               isa$xinst 0000              ??_lcd_clear 0003              ??_lcd_write 0001  
