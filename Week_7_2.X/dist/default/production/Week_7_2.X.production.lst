

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 24 23:21:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 06/04/2022 GMT
    24                           ; 
    25                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F45K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   000586                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _seg_char
    63   000586  3F                 	db	63
    64   000587  06                 	db	6
    65   000588  5B                 	db	91
    66   000589  4F                 	db	79
    67   00058A  66                 	db	102
    68   00058B  6D                 	db	109
    69   00058C  7D                 	db	125
    70   00058D  07                 	db	7
    71   00058E  7F                 	db	127
    72   00058F  6F                 	db	111
    73   000590  1C                 	db	28
    74   000000                     _ADRESL	set	4035
    75   000000                     _IPR1bits	set	3999
    76   000000                     _T0CON	set	4053
    77   000000                     _ADCON0	set	4034
    78   000000                     _ADCON1	set	4033
    79   000000                     _ADIF	set	31990
    80   000000                     _ADRESH	set	4036
    81   000000                     _TMR0IF	set	32658
    82   000000                     _GODONE	set	32273
    83   000000                     _GIE	set	32663
    84   000000                     _ANSELD	set	3899
    85   000000                     _PORTA	set	3968
    86   000000                     _TRISA	set	3986
    87   000000                     _ANSELA	set	3896
    88   000000                     _TRISD	set	3989
    89   000000                     _PORTD	set	3971
    90   000000                     _ANSELE	set	3900
    91   000000                     _PIE1bits	set	3997
    92   000000                     _ADCON2	set	4032
    93   000000                     _TRISE	set	3990
    94   000000                     _TMR0L	set	4054
    95   000000                     _TMR0IP	set	32650
    96   000000                     _TMR0IE	set	32661
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101   000550                     __pcinit:
   102                           	callstack 0
   103   000550                     start_initialization:
   104                           	callstack 0
   105   000550                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Initialize objects allocated to COMRAM (11 bytes)
   109                           ; load TBLPTR registers with __pidataCOMRAM
   110   000550  0E86               	movlw	low __pidataCOMRAM
   111   000552  6EF6               	movwf	tblptrl,c
   112   000554  0E05               	movlw	high __pidataCOMRAM
   113   000556  6EF7               	movwf	tblptrh,c
   114   000558  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   115   00055A  6EF8               	movwf	tblptru,c
   116   00055C  EE00  F028         	lfsr	0,__pdataCOMRAM
   117   000560  EE10 F00B          	lfsr	1,11
   118   000564                     copy_data0:
   119   000564  0009               	tblrd		*+
   120   000566  CFF5 FFEE          	movff	tablat,postinc0
   121   00056A  50E5               	movf	postdec1,w,c
   122   00056C  50E1               	movf	fsr1l,w,c
   123   00056E  E1FA               	bnz	copy_data0
   124                           
   125                           ; Clear objects allocated to COMRAM (10 bytes)
   126   000570  EE00  F033         	lfsr	0,__pbssCOMRAM
   127   000574  0E0A               	movlw	10
   128   000576                     clear_0:
   129   000576  6AEE               	clrf	postinc0,c
   130   000578  06E8               	decf	wreg,f,c
   131   00057A  E1FD               	bnz	clear_0
   132   00057C                     end_of_initialization:
   133                           	callstack 0
   134   00057C                     __end_of__initialization:
   135                           	callstack 0
   136   00057C  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   137   00057E  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   138   000580  0100               	movlb	0
   139   000582  EFAB  F000         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMRAM
   142   000033                     __pbssCOMRAM:
   143                           	callstack 0
   144   000033                     _digits:
   145                           	callstack 0
   146   000033                     	ds	4
   147   000037                     _value:
   148                           	callstack 0
   149   000037                     	ds	4
   150   00003B                     _conversion_done:
   151                           	callstack 0
   152   00003B                     	ds	1
   153   00003C                     _digit_counter:
   154                           	callstack 0
   155   00003C                     	ds	1
   156                           
   157                           	psect	dataCOMRAM
   158   000028                     __pdataCOMRAM:
   159                           	callstack 0
   160   000028                     _seg_char:
   161                           	callstack 0
   162   000028                     	ds	11
   163                           
   164                           	psect	cstackBANK0
   165   000060                     __pcstackBANK0:
   166                           	callstack 0
   167   000060                     ?___llmod:
   168                           	callstack 0
   169   000060                     ___llmod@dividend:
   170                           	callstack 0
   171                           
   172                           ; 4 bytes @ 0x0
   173   000060                     	ds	4
   174   000064                     ___llmod@divisor:
   175                           	callstack 0
   176                           
   177                           ; 4 bytes @ 0x4
   178   000064                     	ds	4
   179   000068                     ?___lldiv:
   180                           	callstack 0
   181   000068                     ___lldiv@dividend:
   182                           	callstack 0
   183                           
   184                           ; 4 bytes @ 0x8
   185   000068                     	ds	4
   186   00006C                     ___lldiv@divisor:
   187                           	callstack 0
   188                           
   189                           ; 4 bytes @ 0xC
   190   00006C                     	ds	4
   191                           
   192                           	psect	cstackCOMRAM
   193   000001                     __pcstackCOMRAM:
   194                           	callstack 0
   195   000001                     ?___lmul:
   196                           	callstack 0
   197   000001                     ___lmul@multiplier:
   198                           	callstack 0
   199                           
   200                           ; 4 bytes @ 0x0
   201   000001                     	ds	4
   202   000005                     ___lmul@multiplicand:
   203                           	callstack 0
   204                           
   205                           ; 4 bytes @ 0x4
   206   000005                     	ds	4
   207   000009                     ___lmul@product:
   208                           	callstack 0
   209                           
   210                           ; 4 bytes @ 0x8
   211   000009                     	ds	4
   212   00000D                     ?___aldiv:
   213                           	callstack 0
   214   00000D                     ___aldiv@dividend:
   215                           	callstack 0
   216                           
   217                           ; 4 bytes @ 0xC
   218   00000D                     	ds	4
   219   000011                     ___aldiv@divisor:
   220                           	callstack 0
   221                           
   222                           ; 4 bytes @ 0x10
   223   000011                     	ds	4
   224   000015                     ___aldiv@counter:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x14
   228   000015                     	ds	1
   229   000016                     ___aldiv@sign:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x15
   233   000016                     	ds	1
   234   000017                     ___aldiv@quotient:
   235                           	callstack 0
   236                           
   237                           ; 4 bytes @ 0x16
   238   000017                     	ds	4
   239   00001B                     ??_isr:
   240                           
   241                           ; 1 bytes @ 0x1A
   242   00001B                     	ds	7
   243   000022                     ___llmod@counter:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x21
   247   000022                     	ds	1
   248   000023                     ___lldiv@quotient:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0x22
   252   000023                     	ds	4
   253   000027                     ___lldiv@counter:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x26
   257   000027                     	ds	1
   258   000028                     
   259                           ; 1 bytes @ 0x27
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 23 in file "newmain.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   279 ;;      Params:         0       0       0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels required when called: 3
   285 ;; This function calls:
   286 ;;		___lldiv
   287 ;;		___llmod
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294   000156                     __ptext0:
   295                           	callstack 0
   296   000156                     _main:
   297                           	callstack 28
   298   000156                     
   299                           ;newmain.c: 24:     IPR1bits.ADIP = 1;
   300   000156  0E00               	movlw	0
   301   000158  010F               	movlb	15	; () banked
   302   00015A  6F38               	movwf	56,b	;volatile
   303                           
   304                           ;newmain.c: 25:     TMR0IE = 1;
   305   00015C  0EF0               	movlw	240
   306   00015E  6E92               	movwf	146,c	;volatile
   307                           
   308                           ;newmain.c: 26:     TMR0IP = 1;
   309   000160  0E00               	movlw	0
   310   000162  6E80               	movwf	128,c	;volatile
   311                           
   312                           ;newmain.c: 28:     while (1) {
   313   000164  0E00               	movlw	0
   314   000166  6F3B               	movwf	59,b	;volatile
   315                           
   316                           ;newmain.c: 29: 
   317   000168  0E00               	movlw	0
   318   00016A  6E95               	movwf	149,c	;volatile
   319                           
   320                           ;newmain.c: 30: 
   321   00016C  0E00               	movlw	0
   322   00016E  6E83               	movwf	131,c	;volatile
   323                           
   324                           ;newmain.c: 32: 
   325   000170  0E02               	movlw	2
   326   000172  6F3C               	movwf	60,b	;volatile
   327                           
   328                           ;newmain.c: 33:         if (conversion_done == 1) {
   329   000174  0E07               	movlw	7
   330   000176  6E96               	movwf	150,c	;volatile
   331                           
   332                           ;newmain.c: 35:             digits[3] = value / 1000;
   333   000178  0EA1               	movlw	161
   334   00017A  6EC0               	movwf	192,c	;volatile
   335                           
   336                           ;newmain.c: 36:             digits[2] = (value % 1000) / 100;
   337   00017C  0E00               	movlw	0
   338   00017E  6EC1               	movwf	193,c	;volatile
   339                           
   340                           ;newmain.c: 37:             digits[1] = (value % 100) / 10;
   341   000180  0E1B               	movlw	27
   342   000182  6EC2               	movwf	194,c	;volatile
   343                           
   344                           ;newmain.c: 38:             digits[0] = value % 10;
   345   000184  0EC3               	movlw	195
   346   000186  6ED5               	movwf	213,c	;volatile
   347                           
   348                           ;newmain.c: 39:             GODONE = 1;
   349   000188  0E06               	movlw	6
   350   00018A  6ED6               	movwf	214,c	;volatile
   351   00018C                     
   352                           ; BSR set to: 15
   353                           ;newmain.c: 40:         }
   354   00018C  8C9D               	bsf	157,6,c	;volatile
   355   00018E                     
   356                           ; BSR set to: 15
   357                           ;newmain.c: 41:     }
   358   00018E  8C9F               	bsf	159,6,c	;volatile
   359   000190                     
   360                           ; BSR set to: 15
   361                           ;newmain.c: 42:     return;
   362   000190  8AF2               	bsf	4082,5,c	;volatile
   363   000192                     
   364                           ; BSR set to: 15
   365                           ;newmain.c: 43: }
   366   000192  84F1               	bsf	4081,2,c	;volatile
   367   000194                     
   368                           ; BSR set to: 15
   369                           ;newmain.c: 44: 
   370   000194  8EF2               	bsf	4082,7,c	;volatile
   371   000196                     l1089:
   372                           
   373                           ;newmain.c: 50:         if (digit_counter == 0) {
   374   000196  043B               	decf	_conversion_done^0,w,c
   375   000198  A4D8               	btfss	status,2,c
   376   00019A  EFD1  F000         	goto	u511
   377   00019E  EFD3  F000         	goto	u510
   378   0001A2                     u511:
   379   0001A2  EFCB  F000         	goto	l1089
   380   0001A6                     u510:
   381   0001A6                     
   382                           ;newmain.c: 51:             PORTD = seg_char[10];
   383   0001A6  0E00               	movlw	0
   384   0001A8  6E3B               	movwf	_conversion_done^0,c
   385   0001AA                     
   386                           ;newmain.c: 52:         } else {
   387   0001AA  C037  F068         	movff	_value,___lldiv@dividend
   388   0001AE  C038  F069         	movff	_value+1,___lldiv@dividend+1
   389   0001B2  C039  F06A         	movff	_value+2,___lldiv@dividend+2
   390   0001B6  C03A  F06B         	movff	_value+3,___lldiv@dividend+3
   391   0001BA  0EE8               	movlw	232
   392   0001BC  0100               	movlb	0	; () banked
   393   0001BE  6F6C               	movwf	___lldiv@divisor& (0+255),b
   394   0001C0  0E03               	movlw	3
   395   0001C2  6F6D               	movwf	(___lldiv@divisor+1)& (0+255),b
   396   0001C4  0E00               	movlw	0
   397   0001C6  6F6E               	movwf	(___lldiv@divisor+2)& (0+255),b
   398   0001C8  0E00               	movlw	0
   399   0001CA  6F6F               	movwf	(___lldiv@divisor+3)& (0+255),b
   400   0001CC  ECDB  F001         	call	___lldiv	;wreg free
   401   0001D0  0100               	movlb	0	; () banked
   402   0001D2  5168               	movf	?___lldiv& (0+255),w,b
   403   0001D4  6E36               	movwf	(_digits+3)^0,c
   404   0001D6                     
   405                           ; BSR set to: 0
   406                           ;newmain.c: 53:             PORTD = seg_char[digits[digit_counter]] + 0x80 * (digit_coun
      +                          ter == 3);
   407   0001D6  0EE8               	movlw	232
   408   0001D8  6F64               	movwf	___llmod@divisor& (0+255),b
   409   0001DA  0E03               	movlw	3
   410   0001DC  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
   411   0001DE  0E00               	movlw	0
   412   0001E0  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
   413   0001E2  0E00               	movlw	0
   414   0001E4  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
   415   0001E6  C037  F060         	movff	_value,___llmod@dividend
   416   0001EA  C038  F061         	movff	_value+1,___llmod@dividend+1
   417   0001EE  C039  F062         	movff	_value+2,___llmod@dividend+2
   418   0001F2  C03A  F063         	movff	_value+3,___llmod@dividend+3
   419   0001F6  EC2E  F002         	call	___llmod	;wreg free
   420   0001FA  C060  F068         	movff	?___llmod,___lldiv@dividend
   421   0001FE  C061  F069         	movff	?___llmod+1,___lldiv@dividend+1
   422   000202  C062  F06A         	movff	?___llmod+2,___lldiv@dividend+2
   423   000206  C063  F06B         	movff	?___llmod+3,___lldiv@dividend+3
   424   00020A  0E64               	movlw	100
   425   00020C  0100               	movlb	0	; () banked
   426   00020E  6F6C               	movwf	___lldiv@divisor& (0+255),b
   427   000210  0E00               	movlw	0
   428   000212  6F6D               	movwf	(___lldiv@divisor+1)& (0+255),b
   429   000214  0E00               	movlw	0
   430   000216  6F6E               	movwf	(___lldiv@divisor+2)& (0+255),b
   431   000218  0E00               	movlw	0
   432   00021A  6F6F               	movwf	(___lldiv@divisor+3)& (0+255),b
   433   00021C  ECDB  F001         	call	___lldiv	;wreg free
   434   000220  0100               	movlb	0	; () banked
   435   000222  5168               	movf	?___lldiv& (0+255),w,b
   436   000224  6E35               	movwf	(_digits+2)^0,c
   437   000226                     
   438                           ; BSR set to: 0
   439                           ;newmain.c: 54:         }
   440   000226  0E64               	movlw	100
   441   000228  6F64               	movwf	___llmod@divisor& (0+255),b
   442   00022A  0E00               	movlw	0
   443   00022C  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
   444   00022E  0E00               	movlw	0
   445   000230  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
   446   000232  0E00               	movlw	0
   447   000234  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
   448   000236  C037  F060         	movff	_value,___llmod@dividend
   449   00023A  C038  F061         	movff	_value+1,___llmod@dividend+1
   450   00023E  C039  F062         	movff	_value+2,___llmod@dividend+2
   451   000242  C03A  F063         	movff	_value+3,___llmod@dividend+3
   452   000246  EC2E  F002         	call	___llmod	;wreg free
   453   00024A  C060  F068         	movff	?___llmod,___lldiv@dividend
   454   00024E  C061  F069         	movff	?___llmod+1,___lldiv@dividend+1
   455   000252  C062  F06A         	movff	?___llmod+2,___lldiv@dividend+2
   456   000256  C063  F06B         	movff	?___llmod+3,___lldiv@dividend+3
   457   00025A  0E0A               	movlw	10
   458   00025C  0100               	movlb	0	; () banked
   459   00025E  6F6C               	movwf	___lldiv@divisor& (0+255),b
   460   000260  0E00               	movlw	0
   461   000262  6F6D               	movwf	(___lldiv@divisor+1)& (0+255),b
   462   000264  0E00               	movlw	0
   463   000266  6F6E               	movwf	(___lldiv@divisor+2)& (0+255),b
   464   000268  0E00               	movlw	0
   465   00026A  6F6F               	movwf	(___lldiv@divisor+3)& (0+255),b
   466   00026C  ECDB  F001         	call	___lldiv	;wreg free
   467   000270  0100               	movlb	0	; () banked
   468   000272  5168               	movf	?___lldiv& (0+255),w,b
   469   000274  6E34               	movwf	(_digits+1)^0,c
   470   000276                     
   471                           ; BSR set to: 0
   472                           ;newmain.c: 55:         PORTA = 0x01 << digit_counter;
   473   000276  C037  F060         	movff	_value,___llmod@dividend
   474   00027A  C038  F061         	movff	_value+1,___llmod@dividend+1
   475   00027E  C039  F062         	movff	_value+2,___llmod@dividend+2
   476   000282  C03A  F063         	movff	_value+3,___llmod@dividend+3
   477   000286  0E0A               	movlw	10
   478   000288  6F64               	movwf	___llmod@divisor& (0+255),b
   479   00028A  0E00               	movlw	0
   480   00028C  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
   481   00028E  0E00               	movlw	0
   482   000290  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
   483   000292  0E00               	movlw	0
   484   000294  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
   485   000296  EC2E  F002         	call	___llmod	;wreg free
   486   00029A  0100               	movlb	0	; () banked
   487   00029C  5160               	movf	?___llmod& (0+255),w,b
   488   00029E  6E33               	movwf	_digits^0,c
   489   0002A0                     
   490                           ; BSR set to: 0
   491                           ;newmain.c: 56:         digit_counter++;
   492   0002A0  82C2               	bsf	4034,1,c	;volatile
   493   0002A2  EFCB  F000         	goto	l1089
   494   0002A6  EFA9  F000         	goto	start
   495   0002AA                     __end_of_main:
   496                           	callstack 0
   497                           
   498 ;; *************** function ___llmod *****************
   499 ;; Defined at:
   500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llmod.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  dividend        4    0[BANK0 ] unsigned long 
   503 ;;  divisor         4    4[BANK0 ] unsigned long 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  counter         1   33[COMRAM] unsigned char 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  4    0[BANK0 ] unsigned long 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   515 ;;      Params:         0       8       0       0       0       0       0
   516 ;;      Locals:         1       0       0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0
   518 ;;      Totals:         1       8       0       0       0       0       0
   519 ;;Total ram usage:        9 bytes
   520 ;; Hardware stack levels used: 1
   521 ;; Hardware stack levels required when called: 2
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text1
   530   00045C                     __ptext1:
   531                           	callstack 0
   532   00045C                     ___llmod:
   533                           	callstack 28
   534   00045C  0100               	movlb	0	; () banked
   535   00045E  5164               	movf	___llmod@divisor& (0+255),w,b
   536   000460  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
   537   000462  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
   538   000464  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
   539   000466  B4D8               	btfsc	status,2,c
   540   000468  EF38  F002         	goto	u481
   541   00046C  EF3A  F002         	goto	u480
   542   000470                     u481:
   543   000470  EF6A  F002         	goto	l498
   544   000474                     u480:
   545   000474                     
   546                           ; BSR set to: 0
   547   000474  0E01               	movlw	1
   548   000476  6E22               	movwf	___llmod@counter^0,c
   549   000478  EF44  F002         	goto	l1067
   550   00047C                     l1065:
   551                           
   552                           ; BSR set to: 0
   553   00047C  90D8               	bcf	status,0,c
   554   00047E  3764               	rlcf	___llmod@divisor& (0+255),f,b
   555   000480  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
   556   000482  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
   557   000484  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
   558   000486  2A22               	incf	___llmod@counter^0,f,c
   559   000488                     l1067:
   560                           
   561                           ; BSR set to: 0
   562   000488  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
   563   00048A  EF49  F002         	goto	u491
   564   00048E  EF4B  F002         	goto	u490
   565   000492                     u491:
   566   000492  EF3E  F002         	goto	l1065
   567   000496                     u490:
   568   000496                     l1069:
   569                           
   570                           ; BSR set to: 0
   571   000496  5164               	movf	___llmod@divisor& (0+255),w,b
   572   000498  5D60               	subwf	___llmod@dividend& (0+255),w,b
   573   00049A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
   574   00049C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
   575   00049E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
   576   0004A0  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
   577   0004A2  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
   578   0004A4  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
   579   0004A6  A0D8               	btfss	status,0,c
   580   0004A8  EF58  F002         	goto	u501
   581   0004AC  EF5A  F002         	goto	u500
   582   0004B0                     u501:
   583   0004B0  EF62  F002         	goto	l1073
   584   0004B4                     u500:
   585   0004B4                     
   586                           ; BSR set to: 0
   587   0004B4  5164               	movf	___llmod@divisor& (0+255),w,b
   588   0004B6  5F60               	subwf	___llmod@dividend& (0+255),f,b
   589   0004B8  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
   590   0004BA  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
   591   0004BC  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
   592   0004BE  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
   593   0004C0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
   594   0004C2  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
   595   0004C4                     l1073:
   596                           
   597                           ; BSR set to: 0
   598   0004C4  90D8               	bcf	status,0,c
   599   0004C6  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
   600   0004C8  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
   601   0004CA  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
   602   0004CC  3364               	rrcf	___llmod@divisor& (0+255),f,b
   603   0004CE                     
   604                           ; BSR set to: 0
   605   0004CE  2E22               	decfsz	___llmod@counter^0,f,c
   606   0004D0  EF4B  F002         	goto	l1069
   607   0004D4                     l498:
   608                           
   609                           ; BSR set to: 0
   610   0004D4  C060  F060         	movff	___llmod@dividend,?___llmod
   611   0004D8  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
   612   0004DC  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
   613   0004E0  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
   614   0004E4                     
   615                           ; BSR set to: 0
   616   0004E4  0012               	return		;funcret
   617   0004E6                     __end_of___llmod:
   618                           	callstack 0
   619                           
   620 ;; *************** function ___lldiv *****************
   621 ;; Defined at:
   622 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  dividend        4    8[BANK0 ] unsigned long 
   625 ;;  divisor         4   12[BANK0 ] unsigned long 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  quotient        4   34[COMRAM] unsigned long 
   628 ;;  counter         1   38[COMRAM] unsigned char 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  4    8[BANK0 ] unsigned long 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   638 ;;      Params:         0       8       0       0       0       0       0
   639 ;;      Locals:         5       0       0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0       0       0
   641 ;;      Totals:         5       8       0       0       0       0       0
   642 ;;Total ram usage:       13 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; Hardware stack levels required when called: 2
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text2
   653   0003B6                     __ptext2:
   654                           	callstack 0
   655   0003B6                     ___lldiv:
   656                           	callstack 28
   657   0003B6  0E00               	movlw	0
   658   0003B8  6E23               	movwf	___lldiv@quotient^0,c
   659   0003BA  0E00               	movlw	0
   660   0003BC  6E24               	movwf	(___lldiv@quotient+1)^0,c
   661   0003BE  0E00               	movlw	0
   662   0003C0  6E25               	movwf	(___lldiv@quotient+2)^0,c
   663   0003C2  0E00               	movlw	0
   664   0003C4  6E26               	movwf	(___lldiv@quotient+3)^0,c
   665   0003C6  0100               	movlb	0	; () banked
   666   0003C8  516C               	movf	___lldiv@divisor& (0+255),w,b
   667   0003CA  116D               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
   668   0003CC  116E               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
   669   0003CE  116F               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
   670   0003D0  B4D8               	btfsc	status,2,c
   671   0003D2  EFED  F001         	goto	u451
   672   0003D6  EFEF  F001         	goto	u450
   673   0003DA                     u451:
   674   0003DA  EF25  F002         	goto	l105
   675   0003DE                     u450:
   676   0003DE                     
   677                           ; BSR set to: 0
   678   0003DE  0E01               	movlw	1
   679   0003E0  6E27               	movwf	___lldiv@counter^0,c
   680   0003E2  EFF9  F001         	goto	l1047
   681   0003E6                     l1045:
   682                           
   683                           ; BSR set to: 0
   684   0003E6  90D8               	bcf	status,0,c
   685   0003E8  376C               	rlcf	___lldiv@divisor& (0+255),f,b
   686   0003EA  376D               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
   687   0003EC  376E               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
   688   0003EE  376F               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
   689   0003F0  2A27               	incf	___lldiv@counter^0,f,c
   690   0003F2                     l1047:
   691                           
   692                           ; BSR set to: 0
   693   0003F2  AF6F               	btfss	(___lldiv@divisor+3)& (0+255),7,b
   694   0003F4  EFFE  F001         	goto	u461
   695   0003F8  EF00  F002         	goto	u460
   696   0003FC                     u461:
   697   0003FC  EFF3  F001         	goto	l1045
   698   000400                     u460:
   699   000400                     l1049:
   700                           
   701                           ; BSR set to: 0
   702   000400  90D8               	bcf	status,0,c
   703   000402  3623               	rlcf	___lldiv@quotient^0,f,c
   704   000404  3624               	rlcf	(___lldiv@quotient+1)^0,f,c
   705   000406  3625               	rlcf	(___lldiv@quotient+2)^0,f,c
   706   000408  3626               	rlcf	(___lldiv@quotient+3)^0,f,c
   707   00040A                     
   708                           ; BSR set to: 0
   709   00040A  516C               	movf	___lldiv@divisor& (0+255),w,b
   710   00040C  5D68               	subwf	___lldiv@dividend& (0+255),w,b
   711   00040E  516D               	movf	(___lldiv@divisor+1)& (0+255),w,b
   712   000410  5969               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
   713   000412  516E               	movf	(___lldiv@divisor+2)& (0+255),w,b
   714   000414  596A               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
   715   000416  516F               	movf	(___lldiv@divisor+3)& (0+255),w,b
   716   000418  596B               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
   717   00041A  A0D8               	btfss	status,0,c
   718   00041C  EF12  F002         	goto	u471
   719   000420  EF14  F002         	goto	u470
   720   000424                     u471:
   721   000424  EF1D  F002         	goto	l1057
   722   000428                     u470:
   723   000428                     
   724                           ; BSR set to: 0
   725   000428  516C               	movf	___lldiv@divisor& (0+255),w,b
   726   00042A  5F68               	subwf	___lldiv@dividend& (0+255),f,b
   727   00042C  516D               	movf	(___lldiv@divisor+1)& (0+255),w,b
   728   00042E  5B69               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
   729   000430  516E               	movf	(___lldiv@divisor+2)& (0+255),w,b
   730   000432  5B6A               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
   731   000434  516F               	movf	(___lldiv@divisor+3)& (0+255),w,b
   732   000436  5B6B               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
   733   000438                     
   734                           ; BSR set to: 0
   735   000438  8023               	bsf	___lldiv@quotient^0,0,c
   736   00043A                     l1057:
   737                           
   738                           ; BSR set to: 0
   739   00043A  90D8               	bcf	status,0,c
   740   00043C  336F               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
   741   00043E  336E               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
   742   000440  336D               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
   743   000442  336C               	rrcf	___lldiv@divisor& (0+255),f,b
   744   000444                     
   745                           ; BSR set to: 0
   746   000444  2E27               	decfsz	___lldiv@counter^0,f,c
   747   000446  EF00  F002         	goto	l1049
   748   00044A                     l105:
   749                           
   750                           ; BSR set to: 0
   751   00044A  C023  F068         	movff	___lldiv@quotient,?___lldiv
   752   00044E  C024  F069         	movff	___lldiv@quotient+1,?___lldiv+1
   753   000452  C025  F06A         	movff	___lldiv@quotient+2,?___lldiv+2
   754   000456  C026  F06B         	movff	___lldiv@quotient+3,?___lldiv+3
   755   00045A                     
   756                           ; BSR set to: 0
   757   00045A  0012               	return		;funcret
   758   00045C                     __end_of___lldiv:
   759                           	callstack 0
   760                           
   761 ;; *************** function _isr *****************
   762 ;; Defined at:
   763 ;;		line 62 in file "newmain.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   777 ;;      Params:         0       0       0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0
   779 ;;      Temps:          7       0       0       0       0       0       0
   780 ;;      Totals:         7       0       0       0       0       0       0
   781 ;;Total ram usage:        7 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; Hardware stack levels required when called: 1
   784 ;; This function calls:
   785 ;;		___aldiv
   786 ;;		___lmul
   787 ;; This function is called by:
   788 ;;		Interrupt level 2
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	intcode
   793   000008                     __pintcode:
   794                           	callstack 0
   795   000008                     _isr:
   796                           	callstack 28
   797                           
   798                           ; BSR set to: 0
   799                           ;incstack = 0
   800   000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   801   00000A  CFD9 F01E          	movff	fsr2l,??_isr+3
   802   00000E  CFDA F01F          	movff	fsr2h,??_isr+4
   803   000012  CFF3 F020          	movff	prodl,??_isr+5
   804   000016  CFF4 F021          	movff	prodh,??_isr+6
   805   00001A                     
   806                           ;newmain.c: 63:         value = ((long) 5000 * (ADRESH * 256 + ADRESL)) / 1023;
   807   00001A  A4F2               	btfss	4082,2,c	;volatile
   808   00001C  EF12  F000         	goto	i2u38_41
   809   000020  EF14  F000         	goto	i2u38_40
   810   000024                     i2u38_41:
   811   000024  EF5E  F000         	goto	i2l1031
   812   000028                     i2u38_40:
   813   000028                     
   814                           ;newmain.c: 64:         conversion_done = 1;
   815   000028  94F2               	bcf	4082,2,c	;volatile
   816   00002A                     
   817                           ;newmain.c: 65:     }
   818   00002A  0E06               	movlw	6
   819   00002C  6ED6               	movwf	214,c	;volatile
   820                           
   821                           ;newmain.c: 66: }
   822   00002E  0E00               	movlw	0
   823   000030  6E80               	movwf	128,c	;volatile
   824   000032  503C               	movf	_digit_counter^0,w,c
   825   000034  A4D8               	btfss	status,2,c
   826   000036  EF1F  F000         	goto	i2u39_41
   827   00003A  EF21  F000         	goto	i2u39_40
   828   00003E                     i2u39_41:
   829   00003E  EF25  F000         	goto	i2l1021
   830   000042                     i2u39_40:
   831   000042  C032  FF83         	movff	_seg_char+10,3971	;volatile
   832   000046  EF45  F000         	goto	i2l1023
   833   00004A                     i2l1021:
   834   00004A  0E33               	movlw	low _digits
   835   00004C  243C               	addwf	_digit_counter^0,w,c
   836   00004E  6ED9               	movwf	fsr2l,c
   837   000050  6ADA               	clrf	fsr2h,c
   838   000052  0E00               	movlw	high _digits
   839   000054  22DA               	addwfc	fsr2h,f,c
   840   000056  50DF               	movf	indf2,w,c
   841   000058  6E1B               	movwf	??_isr^0,c
   842   00005A  6A1C               	clrf	(??_isr+1)^0,c
   843   00005C  0E28               	movlw	low _seg_char
   844   00005E  241B               	addwf	??_isr^0,w,c
   845   000060  6ED9               	movwf	fsr2l,c
   846   000062  0E00               	movlw	high _seg_char
   847   000064  201C               	addwfc	(??_isr+1)^0,w,c
   848   000066  6EDA               	movwf	fsr2h,c
   849   000068  50DF               	movf	indf2,w,c
   850   00006A  6E1D               	movwf	(??_isr+2)^0,c
   851   00006C  0E03               	movlw	3
   852   00006E  183C               	xorwf	_digit_counter^0,w,c
   853   000070  B4D8               	btfsc	status,2,c
   854   000072  EF3D  F000         	goto	i2u40_41
   855   000076  EF40  F000         	goto	i2u40_40
   856   00007A                     i2u40_41:
   857   00007A  0E01               	movlw	1
   858   00007C  EF41  F000         	goto	i2u41_40
   859   000080                     i2u40_40:
   860   000080  0E00               	movlw	0
   861   000082                     i2u41_40:
   862   000082  0D80               	mullw	-128
   863   000084  50F3               	movf	243,w,c
   864   000086  241D               	addwf	(??_isr+2)^0,w,c
   865   000088  6E83               	movwf	131,c	;volatile
   866   00008A                     i2l1023:
   867   00008A  C03C  F01B         	movff	_digit_counter,??_isr
   868   00008E  0E01               	movlw	1
   869   000090  6E1C               	movwf	(??_isr+1)^0,c
   870   000092  2A1B               	incf	??_isr^0,f,c
   871   000094  EF4E  F000         	goto	i2u42_44
   872   000098                     i2u42_45:
   873   000098  90D8               	bcf	status,0,c
   874   00009A  361C               	rlcf	(??_isr+1)^0,f,c
   875   00009C                     i2u42_44:
   876   00009C  2E1B               	decfsz	??_isr^0,f,c
   877   00009E  EF4C  F000         	goto	i2u42_45
   878   0000A2  501C               	movf	(??_isr+1)^0,w,c
   879   0000A4  6E80               	movwf	128,c	;volatile
   880   0000A6  2A3C               	incf	_digit_counter^0,f,c
   881   0000A8  0E03               	movlw	3
   882   0000AA  643C               	cpfsgt	_digit_counter^0,c
   883   0000AC  EF5A  F000         	goto	i2u43_41
   884   0000B0  EF5C  F000         	goto	i2u43_40
   885   0000B4                     i2u43_41:
   886   0000B4  EF5E  F000         	goto	i2l1031
   887   0000B8                     i2u43_40:
   888   0000B8  0E00               	movlw	0
   889   0000BA  6E3C               	movwf	_digit_counter^0,c
   890   0000BC                     i2l1031:
   891   0000BC  AC9E               	btfss	3998,6,c	;volatile
   892   0000BE  EF63  F000         	goto	i2u44_41
   893   0000C2  EF65  F000         	goto	i2u44_40
   894   0000C6                     i2u44_41:
   895   0000C6  EF9F  F000         	goto	i2l75
   896   0000CA                     i2u44_40:
   897   0000CA  9C9E               	bcf	3998,6,c	;volatile
   898   0000CC  50C3               	movf	195,w,c	;volatile
   899   0000CE  CFC4 F01B          	movff	4036,??_isr	;volatile
   900   0000D2  6A1C               	clrf	(??_isr+1)^0,c
   901   0000D4  C01B  F01C         	movff	??_isr,??_isr+1
   902   0000D8  6A1B               	clrf	??_isr^0,c
   903   0000DA  261B               	addwf	??_isr^0,f,c
   904   0000DC  0E00               	movlw	0
   905   0000DE  221C               	addwfc	(??_isr+1)^0,f,c
   906   0000E0  C01B  F001         	movff	??_isr,___lmul@multiplier
   907   0000E4  C01C  F002         	movff	??_isr+1,___lmul@multiplier+1
   908   0000E8  0E00               	movlw	0
   909   0000EA  BE02               	btfsc	(___lmul@multiplier+1)^0,7,c
   910   0000EC  0EFF               	movlw	-1
   911   0000EE  6E03               	movwf	(___lmul@multiplier+2)^0,c
   912   0000F0  6E04               	movwf	(___lmul@multiplier+3)^0,c
   913   0000F2  0E88               	movlw	136
   914   0000F4  6E05               	movwf	___lmul@multiplicand^0,c
   915   0000F6  0E13               	movlw	19
   916   0000F8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   917   0000FA  0E00               	movlw	0
   918   0000FC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   919   0000FE  0E00               	movlw	0
   920   000100  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   921   000102  EC73  F002         	call	___lmul	;wreg free
   922   000106  C001  F00D         	movff	?___lmul,___aldiv@dividend
   923   00010A  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
   924   00010E  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
   925   000112  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
   926   000116  0EFF               	movlw	255
   927   000118  6E11               	movwf	___aldiv@divisor^0,c
   928   00011A  0E03               	movlw	3
   929   00011C  6E12               	movwf	(___aldiv@divisor+1)^0,c
   930   00011E  0E00               	movlw	0
   931   000120  6E13               	movwf	(___aldiv@divisor+2)^0,c
   932   000122  0E00               	movlw	0
   933   000124  6E14               	movwf	(___aldiv@divisor+3)^0,c
   934   000126  EC55  F001         	call	___aldiv	;wreg free
   935   00012A  C00D  F037         	movff	?___aldiv,_value
   936   00012E  C00E  F038         	movff	?___aldiv+1,_value+1
   937   000132  C00F  F039         	movff	?___aldiv+2,_value+2
   938   000136  C010  F03A         	movff	?___aldiv+3,_value+3
   939   00013A  0E01               	movlw	1
   940   00013C  6E3B               	movwf	_conversion_done^0,c
   941   00013E                     i2l75:
   942   00013E  C021  FFF4         	movff	??_isr+6,prodh
   943   000142  C020  FFF3         	movff	??_isr+5,prodl
   944   000146  C01F  FFDA         	movff	??_isr+4,fsr2h
   945   00014A  C01E  FFD9         	movff	??_isr+3,fsr2l
   946   00014E  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   947   000150  0011               	retfie		f
   948   000152                     __end_of_isr:
   949                           	callstack 0
   950                           
   951 ;; *************** function ___lmul *****************
   952 ;; Defined at:
   953 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  multiplier      4    0[COMRAM] unsigned long 
   956 ;;  multiplicand    4    4[COMRAM] unsigned long 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  product         4    8[COMRAM] unsigned long 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  4    0[COMRAM] unsigned long 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   968 ;;      Params:         8       0       0       0       0       0       0
   969 ;;      Locals:         4       0       0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0
   971 ;;      Totals:        12       0       0       0       0       0       0
   972 ;;Total ram usage:       12 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_isr
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text4
   982   0004E6                     __ptext4:
   983                           	callstack 0
   984   0004E6                     ___lmul:
   985                           	callstack 28
   986   0004E6  0E00               	movlw	0
   987   0004E8  6E09               	movwf	___lmul@product^0,c
   988   0004EA  0E00               	movlw	0
   989   0004EC  6E0A               	movwf	(___lmul@product+1)^0,c
   990   0004EE  0E00               	movlw	0
   991   0004F0  6E0B               	movwf	(___lmul@product+2)^0,c
   992   0004F2  0E00               	movlw	0
   993   0004F4  6E0C               	movwf	(___lmul@product+3)^0,c
   994   0004F6                     i2l897:
   995   0004F6  A001               	btfss	___lmul@multiplier^0,0,c
   996   0004F8  EF80  F002         	goto	i2u23_41
   997   0004FC  EF82  F002         	goto	i2u23_40
   998   000500                     i2u23_41:
   999   000500  EF8A  F002         	goto	i2l901
  1000   000504                     i2u23_40:
  1001   000504  5005               	movf	___lmul@multiplicand^0,w,c
  1002   000506  2609               	addwf	___lmul@product^0,f,c
  1003   000508  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1004   00050A  220A               	addwfc	(___lmul@product+1)^0,f,c
  1005   00050C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1006   00050E  220B               	addwfc	(___lmul@product+2)^0,f,c
  1007   000510  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1008   000512  220C               	addwfc	(___lmul@product+3)^0,f,c
  1009   000514                     i2l901:
  1010   000514  90D8               	bcf	status,0,c
  1011   000516  3605               	rlcf	___lmul@multiplicand^0,f,c
  1012   000518  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1013   00051A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1014   00051C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1015   00051E  90D8               	bcf	status,0,c
  1016   000520  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1017   000522  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1018   000524  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1019   000526  3201               	rrcf	___lmul@multiplier^0,f,c
  1020   000528  5001               	movf	___lmul@multiplier^0,w,c
  1021   00052A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1022   00052C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1023   00052E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1024   000530  A4D8               	btfss	status,2,c
  1025   000532  EF9D  F002         	goto	i2u24_41
  1026   000536  EF9F  F002         	goto	i2u24_40
  1027   00053A                     i2u24_41:
  1028   00053A  EF7B  F002         	goto	i2l897
  1029   00053E                     i2u24_40:
  1030   00053E  C009  F001         	movff	___lmul@product,?___lmul
  1031   000542  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1032   000546  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1033   00054A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1034   00054E  0012               	return		;funcret
  1035   000550                     __end_of___lmul:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function ___aldiv *****************
  1039 ;; Defined at:
  1040 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  dividend        4   12[COMRAM] long 
  1043 ;;  divisor         4   16[COMRAM] long 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  quotient        4   22[COMRAM] long 
  1046 ;;  sign            1   21[COMRAM] unsigned char 
  1047 ;;  counter         1   20[COMRAM] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  4   12[COMRAM] long 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         8       0       0       0       0       0       0
  1058 ;;      Locals:         6       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0
  1060 ;;      Totals:        14       0       0       0       0       0       0
  1061 ;;Total ram usage:       14 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_isr
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text5
  1071   0002AA                     __ptext5:
  1072                           	callstack 0
  1073   0002AA                     ___aldiv:
  1074                           	callstack 28
  1075   0002AA  0E00               	movlw	0
  1076   0002AC  6E16               	movwf	___aldiv@sign^0,c
  1077   0002AE  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  1078   0002B0  EF5E  F001         	goto	i2u28_40
  1079   0002B4  EF5C  F001         	goto	i2u28_41
  1080   0002B8                     i2u28_41:
  1081   0002B8  EF68  F001         	goto	i2l935
  1082   0002BC                     i2u28_40:
  1083   0002BC  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  1084   0002BE  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  1085   0002C0  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  1086   0002C2  6C11               	negf	___aldiv@divisor^0,c
  1087   0002C4  0E00               	movlw	0
  1088   0002C6  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  1089   0002C8  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  1090   0002CA  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  1091   0002CC  0E01               	movlw	1
  1092   0002CE  6E16               	movwf	___aldiv@sign^0,c
  1093   0002D0                     i2l935:
  1094   0002D0  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  1095   0002D2  EF6F  F001         	goto	i2u29_40
  1096   0002D6  EF6D  F001         	goto	i2u29_41
  1097   0002DA                     i2u29_41:
  1098   0002DA  EF79  F001         	goto	i2l941
  1099   0002DE                     i2u29_40:
  1100   0002DE  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  1101   0002E0  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  1102   0002E2  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  1103   0002E4  6C0D               	negf	___aldiv@dividend^0,c
  1104   0002E6  0E00               	movlw	0
  1105   0002E8  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  1106   0002EA  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  1107   0002EC  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  1108   0002EE  0E01               	movlw	1
  1109   0002F0  1A16               	xorwf	___aldiv@sign^0,f,c
  1110   0002F2                     i2l941:
  1111   0002F2  0E00               	movlw	0
  1112   0002F4  6E17               	movwf	___aldiv@quotient^0,c
  1113   0002F6  0E00               	movlw	0
  1114   0002F8  6E18               	movwf	(___aldiv@quotient+1)^0,c
  1115   0002FA  0E00               	movlw	0
  1116   0002FC  6E19               	movwf	(___aldiv@quotient+2)^0,c
  1117   0002FE  0E00               	movlw	0
  1118   000300  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  1119   000302  5011               	movf	___aldiv@divisor^0,w,c
  1120   000304  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  1121   000306  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  1122   000308  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  1123   00030A  B4D8               	btfsc	status,2,c
  1124   00030C  EF8A  F001         	goto	i2u30_41
  1125   000310  EF8C  F001         	goto	i2u30_40
  1126   000314                     i2u30_41:
  1127   000314  EFC2  F001         	goto	i2l963
  1128   000318                     i2u30_40:
  1129   000318  0E01               	movlw	1
  1130   00031A  6E15               	movwf	___aldiv@counter^0,c
  1131   00031C  EF96  F001         	goto	i2l949
  1132   000320                     i2l947:
  1133   000320  90D8               	bcf	status,0,c
  1134   000322  3611               	rlcf	___aldiv@divisor^0,f,c
  1135   000324  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  1136   000326  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  1137   000328  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  1138   00032A  2A15               	incf	___aldiv@counter^0,f,c
  1139   00032C                     i2l949:
  1140   00032C  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  1141   00032E  EF9B  F001         	goto	i2u31_41
  1142   000332  EF9D  F001         	goto	i2u31_40
  1143   000336                     i2u31_41:
  1144   000336  EF90  F001         	goto	i2l947
  1145   00033A                     i2u31_40:
  1146   00033A                     i2l951:
  1147   00033A  90D8               	bcf	status,0,c
  1148   00033C  3617               	rlcf	___aldiv@quotient^0,f,c
  1149   00033E  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  1150   000340  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  1151   000342  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  1152   000344  5011               	movf	___aldiv@divisor^0,w,c
  1153   000346  5C0D               	subwf	___aldiv@dividend^0,w,c
  1154   000348  5012               	movf	(___aldiv@divisor+1)^0,w,c
  1155   00034A  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  1156   00034C  5013               	movf	(___aldiv@divisor+2)^0,w,c
  1157   00034E  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  1158   000350  5014               	movf	(___aldiv@divisor+3)^0,w,c
  1159   000352  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  1160   000354  A0D8               	btfss	status,0,c
  1161   000356  EFAF  F001         	goto	i2u32_41
  1162   00035A  EFB1  F001         	goto	i2u32_40
  1163   00035E                     i2u32_41:
  1164   00035E  EFBA  F001         	goto	i2l959
  1165   000362                     i2u32_40:
  1166   000362  5011               	movf	___aldiv@divisor^0,w,c
  1167   000364  5E0D               	subwf	___aldiv@dividend^0,f,c
  1168   000366  5012               	movf	(___aldiv@divisor+1)^0,w,c
  1169   000368  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  1170   00036A  5013               	movf	(___aldiv@divisor+2)^0,w,c
  1171   00036C  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  1172   00036E  5014               	movf	(___aldiv@divisor+3)^0,w,c
  1173   000370  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  1174   000372  8017               	bsf	___aldiv@quotient^0,0,c
  1175   000374                     i2l959:
  1176   000374  90D8               	bcf	status,0,c
  1177   000376  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  1178   000378  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  1179   00037A  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  1180   00037C  3211               	rrcf	___aldiv@divisor^0,f,c
  1181   00037E  2E15               	decfsz	___aldiv@counter^0,f,c
  1182   000380  EF9D  F001         	goto	i2l951
  1183   000384                     i2l963:
  1184   000384  5016               	movf	___aldiv@sign^0,w,c
  1185   000386  B4D8               	btfsc	status,2,c
  1186   000388  EFC8  F001         	goto	i2u33_41
  1187   00038C  EFCA  F001         	goto	i2u33_40
  1188   000390                     i2u33_41:
  1189   000390  EFD2  F001         	goto	i2l967
  1190   000394                     i2u33_40:
  1191   000394  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  1192   000396  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  1193   000398  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  1194   00039A  6C17               	negf	___aldiv@quotient^0,c
  1195   00039C  0E00               	movlw	0
  1196   00039E  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  1197   0003A0  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  1198   0003A2  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  1199   0003A4                     i2l967:
  1200   0003A4  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  1201   0003A8  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  1202   0003AC  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  1203   0003B0  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  1204   0003B4  0012               	return		;funcret
  1205   0003B6                     __end_of___aldiv:
  1206                           	callstack 0
  1207   000000                     
  1208                           	psect	rparam
  1209   000000                     
  1210                           	psect	temp
  1211   00003D                     btemp:
  1212                           	callstack 0
  1213   00003D                     	ds	1
  1214   000000                     int$flags	set	btemp
  1215   000000                     wtemp8	set	btemp+1
  1216   000000                     ttemp5	set	btemp+1
  1217   000000                     ttemp6	set	btemp+4
  1218   000000                     ttemp7	set	btemp+8
  1219                           
  1220                           	psect	idloc
  1221                           
  1222                           ;Config register IDLOC0 @ 0x200000
  1223                           ;	unspecified, using default values
  1224   200000                     	org	2097152
  1225   200000  FF                 	db	255
  1226                           
  1227                           ;Config register IDLOC1 @ 0x200001
  1228                           ;	unspecified, using default values
  1229   200001                     	org	2097153
  1230   200001  FF                 	db	255
  1231                           
  1232                           ;Config register IDLOC2 @ 0x200002
  1233                           ;	unspecified, using default values
  1234   200002                     	org	2097154
  1235   200002  FF                 	db	255
  1236                           
  1237                           ;Config register IDLOC3 @ 0x200003
  1238                           ;	unspecified, using default values
  1239   200003                     	org	2097155
  1240   200003  FF                 	db	255
  1241                           
  1242                           ;Config register IDLOC4 @ 0x200004
  1243                           ;	unspecified, using default values
  1244   200004                     	org	2097156
  1245   200004  FF                 	db	255
  1246                           
  1247                           ;Config register IDLOC5 @ 0x200005
  1248                           ;	unspecified, using default values
  1249   200005                     	org	2097157
  1250   200005  FF                 	db	255
  1251                           
  1252                           ;Config register IDLOC6 @ 0x200006
  1253                           ;	unspecified, using default values
  1254   200006                     	org	2097158
  1255   200006  FF                 	db	255
  1256                           
  1257                           ;Config register IDLOC7 @ 0x200007
  1258                           ;	unspecified, using default values
  1259   200007                     	org	2097159
  1260   200007  FF                 	db	255
  1261                           
  1262                           	psect	config
  1263                           
  1264                           ; Padding undefined space
  1265   300000                     	org	3145728
  1266   300000  FF                 	db	255
  1267                           
  1268                           ;Config register CONFIG1H @ 0x300001
  1269                           ;	Oscillator Selection bits
  1270                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  1271                           ;	4X PLL Enable
  1272                           ;	PLLCFG = 0x0, unprogrammed default
  1273                           ;	Primary clock enable bit
  1274                           ;	PRICLKEN = 0x1, unprogrammed default
  1275                           ;	Fail-Safe Clock Monitor Enable bit
  1276                           ;	FCMEN = 0x0, unprogrammed default
  1277                           ;	Internal/External Oscillator Switchover bit
  1278                           ;	IESO = 0x0, unprogrammed default
  1279   300001                     	org	3145729
  1280   300001  22                 	db	34
  1281                           
  1282                           ;Config register CONFIG2L @ 0x300002
  1283                           ;	unspecified, using default values
  1284                           ;	Power-up Timer Enable bit
  1285                           ;	PWRTEN = 0x1, unprogrammed default
  1286                           ;	Brown-out Reset Enable bits
  1287                           ;	BOREN = 0x3, unprogrammed default
  1288                           ;	Brown Out Reset Voltage bits
  1289                           ;	BORV = 0x3, unprogrammed default
  1290   300002                     	org	3145730
  1291   300002  1F                 	db	31
  1292                           
  1293                           ;Config register CONFIG2H @ 0x300003
  1294                           ;	Watchdog Timer Enable bits
  1295                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1296                           ;	Watchdog Timer Postscale Select bits
  1297                           ;	WDTPS = 0xF, unprogrammed default
  1298   300003                     	org	3145731
  1299   300003  3C                 	db	60
  1300                           
  1301                           ; Padding undefined space
  1302   300004                     	org	3145732
  1303   300004  FF                 	db	255
  1304                           
  1305                           ;Config register CONFIG3H @ 0x300005
  1306                           ;	unspecified, using default values
  1307                           ;	CCP2 MUX bit
  1308                           ;	CCP2MX = 0x1, unprogrammed default
  1309                           ;	PORTB A/D Enable bit
  1310                           ;	PBADEN = 0x1, unprogrammed default
  1311                           ;	P3A/CCP3 Mux bit
  1312                           ;	CCP3MX = 0x1, unprogrammed default
  1313                           ;	HFINTOSC Fast Start-up
  1314                           ;	HFOFST = 0x1, unprogrammed default
  1315                           ;	Timer3 Clock input mux bit
  1316                           ;	T3CMX = 0x1, unprogrammed default
  1317                           ;	ECCP2 B output mux bit
  1318                           ;	P2BMX = 0x1, unprogrammed default
  1319                           ;	MCLR Pin Enable bit
  1320                           ;	MCLRE = 0x1, unprogrammed default
  1321   300005                     	org	3145733
  1322   300005  BF                 	db	191
  1323                           
  1324                           ;Config register CONFIG4L @ 0x300006
  1325                           ;	unspecified, using default values
  1326                           ;	Stack Full/Underflow Reset Enable bit
  1327                           ;	STVREN = 0x1, unprogrammed default
  1328                           ;	Single-Supply ICSP Enable bit
  1329                           ;	LVP = 0x1, unprogrammed default
  1330                           ;	Extended Instruction Set Enable bit
  1331                           ;	XINST = 0x0, unprogrammed default
  1332                           ;	Background Debug
  1333                           ;	DEBUG = 0x1, unprogrammed default
  1334   300006                     	org	3145734
  1335   300006  85                 	db	133
  1336                           
  1337                           ; Padding undefined space
  1338   300007                     	org	3145735
  1339   300007  FF                 	db	255
  1340                           
  1341                           ;Config register CONFIG5L @ 0x300008
  1342                           ;	unspecified, using default values
  1343                           ;	Code Protection Block 0
  1344                           ;	CP0 = 0x1, unprogrammed default
  1345                           ;	Code Protection Block 1
  1346                           ;	CP1 = 0x1, unprogrammed default
  1347                           ;	Code Protection Block 2
  1348                           ;	CP2 = 0x1, unprogrammed default
  1349                           ;	Code Protection Block 3
  1350                           ;	CP3 = 0x1, unprogrammed default
  1351   300008                     	org	3145736
  1352   300008  0F                 	db	15
  1353                           
  1354                           ;Config register CONFIG5H @ 0x300009
  1355                           ;	unspecified, using default values
  1356                           ;	Boot Block Code Protection bit
  1357                           ;	CPB = 0x1, unprogrammed default
  1358                           ;	Data EEPROM Code Protection bit
  1359                           ;	CPD = 0x1, unprogrammed default
  1360   300009                     	org	3145737
  1361   300009  C0                 	db	192
  1362                           
  1363                           ;Config register CONFIG6L @ 0x30000A
  1364                           ;	unspecified, using default values
  1365                           ;	Write Protection Block 0
  1366                           ;	WRT0 = 0x1, unprogrammed default
  1367                           ;	Write Protection Block 1
  1368                           ;	WRT1 = 0x1, unprogrammed default
  1369                           ;	Write Protection Block 2
  1370                           ;	WRT2 = 0x1, unprogrammed default
  1371                           ;	Write Protection Block 3
  1372                           ;	WRT3 = 0x1, unprogrammed default
  1373   30000A                     	org	3145738
  1374   30000A  0F                 	db	15
  1375                           
  1376                           ;Config register CONFIG6H @ 0x30000B
  1377                           ;	unspecified, using default values
  1378                           ;	Configuration Register Write Protection bit
  1379                           ;	WRTC = 0x1, unprogrammed default
  1380                           ;	Boot Block Write Protection bit
  1381                           ;	WRTB = 0x1, unprogrammed default
  1382                           ;	Data EEPROM Write Protection bit
  1383                           ;	WRTD = 0x1, unprogrammed default
  1384   30000B                     	org	3145739
  1385   30000B  E0                 	db	224
  1386                           
  1387                           ;Config register CONFIG7L @ 0x30000C
  1388                           ;	unspecified, using default values
  1389                           ;	Table Read Protection Block 0
  1390                           ;	EBTR0 = 0x1, unprogrammed default
  1391                           ;	Table Read Protection Block 1
  1392                           ;	EBTR1 = 0x1, unprogrammed default
  1393                           ;	Table Read Protection Block 2
  1394                           ;	EBTR2 = 0x1, unprogrammed default
  1395                           ;	Table Read Protection Block 3
  1396                           ;	EBTR3 = 0x1, unprogrammed default
  1397   30000C                     	org	3145740
  1398   30000C  0F                 	db	15
  1399                           
  1400                           ;Config register CONFIG7H @ 0x30000D
  1401                           ;	unspecified, using default values
  1402                           ;	Boot Block Table Read Protection bit
  1403                           ;	EBTRB = 0x1, unprogrammed default
  1404   30000D                     	org	3145741
  1405   30000D  40                 	db	64
  1406                           tosu	equ	0xFFF
  1407                           tosh	equ	0xFFE
  1408                           tosl	equ	0xFFD
  1409                           stkptr	equ	0xFFC
  1410                           pclatu	equ	0xFFB
  1411                           pclath	equ	0xFFA
  1412                           pcl	equ	0xFF9
  1413                           tblptru	equ	0xFF8
  1414                           tblptrh	equ	0xFF7
  1415                           tblptrl	equ	0xFF6
  1416                           tablat	equ	0xFF5
  1417                           prodh	equ	0xFF4
  1418                           prodl	equ	0xFF3
  1419                           indf0	equ	0xFEF
  1420                           postinc0	equ	0xFEE
  1421                           postdec0	equ	0xFED
  1422                           preinc0	equ	0xFEC
  1423                           plusw0	equ	0xFEB
  1424                           fsr0h	equ	0xFEA
  1425                           fsr0l	equ	0xFE9
  1426                           wreg	equ	0xFE8
  1427                           indf1	equ	0xFE7
  1428                           postinc1	equ	0xFE6
  1429                           postdec1	equ	0xFE5
  1430                           preinc1	equ	0xFE4
  1431                           plusw1	equ	0xFE3
  1432                           fsr1h	equ	0xFE2
  1433                           fsr1l	equ	0xFE1
  1434                           bsr	equ	0xFE0
  1435                           indf2	equ	0xFDF
  1436                           postinc2	equ	0xFDE
  1437                           postdec2	equ	0xFDD
  1438                           preinc2	equ	0xFDC
  1439                           plusw2	equ	0xFDB
  1440                           fsr2h	equ	0xFDA
  1441                           fsr2l	equ	0xFD9
  1442                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      60
    BANK0           160     16      16
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lldiv
    ___lldiv->___llmod

Critical Paths under _isr in COMRAM

    _isr->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv
    ___lldiv->___llmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1553
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     772
                                             33 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     781
                                             34 COMRAM     5     5      0
                                              8 BANK0      8     0      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0     822
                                             26 COMRAM     7     7      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___llmod (ARG)
   ___llmod

 _isr (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     10      10       4       10.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     27      3C       1       63.8%
BITBIGSFRllh        43      0       0      23        0.0%
BITBIGSFRhhlhh      20      0       0      18        0.0%
BITBIGSFRhhhhl      1A      0       0      16        0.0%
BITBIGSFRhhhlh      10      0       0      17        0.0%
BITBIGSFRlhh         E      0       0      21        0.0%
BITBIGSFRhhhhh       D      0       0      15        0.0%
BITBIGSFRhhll        6      0       0      19        0.0%
BITBIGSFRlhl         2      0       0      22        0.0%
BITBIGSFRhl          2      0       0      20        0.0%
BITBIGSFRlll         2      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      25        0.0%
DATA                 0      0      4C      27        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 24 23:21:50 2023

                    l112 045A                      l105 044A                      l505 04E4  
                    l498 04D4                      _GIE 7F97                      u500 04B4  
                    u501 04B0                      u510 01A6                      u511 01A2  
                    u450 03DE                      u451 03DA                      u460 0400  
                    u461 03FC                      u470 0428                      u471 0424  
                    u480 0474                      u481 0470                      u490 0496  
                    u491 0492                      _isr 0008                      wreg 0FE8  
                   l1101 02A0                     l1041 03C6                     l1051 040A  
                   l1043 03DE                     l1053 0428                     l1045 03E6  
                   l1061 045C                     l1055 0438                     l1047 03F2  
                   l1039 03B6                     l1071 04B4                     l1063 0474  
                   l1057 043A                     l1049 0400                     l1073 04C4  
                   l1065 047C                     l1081 018E                     l1059 0444  
                   l1075 04CE                     l1067 0488                     l1091 01A6  
                   l1083 0190                     l1069 0496                     l1093 01AA  
                   l1085 0192                     l1077 0156                     l1095 01D6  
                   l1087 0194                     l1079 018C                     l1097 0226  
                   l1089 0196                     l1099 0276                     _ADIF 7CF6  
                   ?_isr 0001                     i2l90 054E                     i2l75 013E  
                   i2l89 053E                     _main 0156                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   btemp 003D                     prodh 0FF4                     prodl 0FF3  
                   start 0152             ___param_bank 0000                    ??_isr 001B  
        __end_of___aldiv 03B6                    ?_main 0001          __end_of___lldiv 045C  
                  _T0CON 0FD5          __end_of___llmod 04E6                    i2l157 03B4  
                  i2l901 0514                    i2l903 051E                    i2l931 02BC  
                  i2l941 02F2                    i2l933 02CC                    i2l951 033A  
                  i2l943 0302                    i2l935 02D0                    i2l927 02AA  
                  i2l961 037E                    i2l953 0344                    i2l945 0318  
                  i2l937 02DE                    i2l929 02AE                    i2l955 0362  
                  i2l947 0320                    i2l963 0384                    i2l939 02EE  
                  i2l965 0394                    i2l957 0372                    i2l949 032C  
                  i2l967 03A4                    i2l959 0374                    i2l895 04E6  
                  i2l897 04F6                    i2l899 0504                    _TMR0L 0FD6  
                  _PORTA 0F80                    _PORTD 0F83                    _TRISA 0F92  
                  _TRISD 0F95                    _TRISE 0F96      ___lmul@multiplicand 0005  
                  _value 0037                    tablat 0FF5                    ttemp5 003E  
                  ttemp6 0041                    ttemp7 0045                    status 0FD8  
                  wtemp8 003E          __initialization 0550             __end_of_main 02AA  
                 ??_main 0028            __activetblptr 0000                   _ADCON0 0FC2  
                 _ADCON1 0FC1                   _ADCON2 0FC0         ___llmod@dividend 0060  
                 _ADRESH 0FC4                   _ADRESL 0FC3                   _ANSELA 0F38  
                 _ANSELD 0F3B                   _ANSELE 0F3C                   _GODONE 7E11  
                 i2l1021 004A                   i2l1013 001A                   i2l1023 008A  
                 i2l1015 0028                   i2l1031 00BC                   i2l1033 00CA  
                 i2l1025 00A6                   i2l1017 002A                   i2l1035 00CC  
                 i2l1027 00A8                   i2l1019 0042                   i2l1037 013A  
                 i2l1029 00B8                   _TMR0IE 7F95                   _TMR0IF 7F92  
                 _TMR0IP 7F8A                   ___lmul 04E6                ??___aldiv 0015  
              ??___lldiv 0023                ??___llmod 0022                   _digits 0033  
                 clear_0 0576                   isa$std 0001             __pdataCOMRAM 0028  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 057C            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  ?___lmul 0001           ___lmul@product 0009  
        _conversion_done 003B                  i2u30_40 0318                  i2u30_41 0314  
                i2u31_40 033A                  i2u23_40 0504                  i2u31_41 0336  
                i2u23_41 0500                  i2u32_40 0362                  i2u24_40 053E  
                i2u40_40 0080                  i2u32_41 035E                  i2u24_41 053A  
                i2u40_41 007A                  i2u33_40 0394                  i2u41_40 0082  
                i2u33_41 0390                  i2u42_44 009C                  i2u42_45 0098  
                i2u43_40 00B8                  i2u43_41 00B4                  i2u28_40 02BC  
                i2u44_40 00CA                  i2u28_41 02B8                  i2u44_41 00C6  
                i2u29_40 02DE                  i2u29_41 02DA                  i2u38_40 0028  
                i2u38_41 0024                  i2u39_40 0042                  i2u39_41 003E  
                __Hparam 0000                  __Lparam 0000                  ___aldiv 02AA  
                ___lldiv 03B6                  ___llmod 045C                  __pcinit 0550  
                __ramtop 0600                  __ptext0 0156                  __ptext1 045C  
                __ptext2 03B6                  __ptext4 04E6                  __ptext5 02AA  
       ___aldiv@dividend 000D     end_of_initialization 057C          ___lldiv@divisor 006C  
        ___lldiv@counter 0027         ___aldiv@quotient 0017                  postdec1 0FE5  
                postinc0 0FEE           __end_of___lmul 0550            __pidataCOMRAM 0586  
    start_initialization 0550              __end_of_isr 0152          ___llmod@divisor 0064  
        ___llmod@counter 0022                 ??___lmul 0009              __pbssCOMRAM 0033  
          __pcstackBANK0 0060                __pintcode 0008                 ?___aldiv 000D  
               ?___lldiv 0068                 ?___llmod 0060          ___aldiv@divisor 0011  
        ___aldiv@counter 0015                 _IPR1bits 0F9F                 _PIE1bits 0F9D  
          _digit_counter 003C        ___lmul@multiplier 0001                copy_data0 0564  
               __Hrparam 0000                 __Lrparam 0000                 _seg_char 0028  
               isa$xinst 0000                 int$flags 003D                 intlevel2 0000  
       ___lldiv@dividend 0068         ___lldiv@quotient 0023             ___aldiv@sign 0016  
