

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 24 23:16:55 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 06/04/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F45K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   00035E                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _seg_char
    62   00035E  3F                 	db	63
    63   00035F  06                 	db	6
    64   000360  5B                 	db	91
    65   000361  4F                 	db	79
    66   000362  66                 	db	102
    67   000363  6D                 	db	109
    68   000364  7D                 	db	125
    69   000365  07                 	db	7
    70   000366  7F                 	db	127
    71   000367  6F                 	db	111
    72                           
    73                           	psect	nvCOMRAM
    74   00002B                     __pnvCOMRAM:
    75                           	callstack 0
    76   00002B                     _value:
    77                           	callstack 0
    78   00002B                     	ds	2
    79   000000                     _TMR0IF	set	32658
    80   000000                     _GIE	set	32663
    81   000000                     _ANSELD	set	3899
    82   000000                     _PORTA	set	3968
    83   000000                     _TRISA	set	3986
    84   000000                     _ANSELA	set	3896
    85   000000                     _TRISD	set	3989
    86   000000                     _PORTD	set	3971
    87   000000                     _T0CON	set	4053
    88   000000                     _TMR0L	set	4054
    89   000000                     _TMR0IP	set	32650
    90   000000                     _TMR0IE	set	32661
    91                           
    92                           ; #config settings
    93                           
    94                           	psect	cinit
    95   000328                     __pcinit:
    96                           	callstack 0
    97   000328                     start_initialization:
    98                           	callstack 0
    99   000328                     __initialization:
   100                           	callstack 0
   101                           
   102                           ; Initialize objects allocated to COMRAM (10 bytes)
   103                           ; load TBLPTR registers with __pidataCOMRAM
   104   000328  0E5E               	movlw	low __pidataCOMRAM
   105   00032A  6EF6               	movwf	tblptrl,c
   106   00032C  0E03               	movlw	high __pidataCOMRAM
   107   00032E  6EF7               	movwf	tblptrh,c
   108   000330  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   109   000332  6EF8               	movwf	tblptru,c
   110   000334  EE00  F021         	lfsr	0,__pdataCOMRAM
   111   000338  EE10 F00A          	lfsr	1,10
   112   00033C                     copy_data0:
   113   00033C  0009               	tblrd		*+
   114   00033E  CFF5 FFEE          	movff	tablat,postinc0
   115   000342  50E5               	movf	postdec1,w,c
   116   000344  50E1               	movf	fsr1l,w,c
   117   000346  E1FA               	bnz	copy_data0
   118                           
   119                           ; Clear objects allocated to COMRAM (15 bytes)
   120   000348  EE00  F012         	lfsr	0,__pbssCOMRAM
   121   00034C  0E0F               	movlw	15
   122   00034E                     clear_0:
   123   00034E  6AEE               	clrf	postinc0,c
   124   000350  06E8               	decf	wreg,f,c
   125   000352  E1FD               	bnz	clear_0
   126   000354                     end_of_initialization:
   127                           	callstack 0
   128   000354                     __end_of__initialization:
   129                           	callstack 0
   130   000354  902D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131   000356  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132   000358  0100               	movlb	0
   133   00035A  EF64  F000         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136   000012                     __pbssCOMRAM:
   137                           	callstack 0
   138   000012                     _digits:
   139                           	callstack 0
   140   000012                     	ds	10
   141   00001C                     _counter:
   142                           	callstack 0
   143   00001C                     	ds	4
   144   000020                     _digit_counter:
   145                           	callstack 0
   146   000020                     	ds	1
   147                           
   148                           	psect	dataCOMRAM
   149   000021                     __pdataCOMRAM:
   150                           	callstack 0
   151   000021                     _seg_char:
   152                           	callstack 0
   153   000021                     	ds	10
   154                           
   155                           	psect	cstackCOMRAM
   156   000001                     __pcstackCOMRAM:
   157                           	callstack 0
   158   000001                     ??_isr:
   159                           
   160                           ; 1 bytes @ 0x0
   161   000001                     	ds	4
   162   000005                     ?___lwmod:
   163                           	callstack 0
   164   000005                     ?___lldiv:
   165                           	callstack 0
   166   000005                     ___lwmod@dividend:
   167                           	callstack 0
   168   000005                     ___lldiv@dividend:
   169                           	callstack 0
   170                           
   171                           ; 4 bytes @ 0x4
   172   000005                     	ds	2
   173   000007                     ___lwmod@divisor:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x6
   177   000007                     	ds	2
   178   000009                     ___lwmod@counter:
   179                           	callstack 0
   180   000009                     ___lldiv@divisor:
   181                           	callstack 0
   182                           
   183                           ; 4 bytes @ 0x8
   184   000009                     	ds	1
   185   00000A                     ?___lwdiv:
   186                           	callstack 0
   187   00000A                     ___lwdiv@dividend:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x9
   191   00000A                     	ds	2
   192   00000C                     ___lwdiv@divisor:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0xB
   196   00000C                     	ds	1
   197   00000D                     ___lldiv@quotient:
   198                           	callstack 0
   199                           
   200                           ; 4 bytes @ 0xC
   201   00000D                     	ds	1
   202   00000E                     ___lwdiv@quotient:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0xD
   206   00000E                     	ds	2
   207   000010                     ___lwdiv@counter:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0xF
   211   000010                     	ds	1
   212   000011                     ___lldiv@counter:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x10
   216   000011                     	ds	1
   217   000012                     
   218                           ; 1 bytes @ 0x11
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 24 in file "newmain.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   238 ;;      Params:         0       0       0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0
   241 ;;      Totals:         0       0       0       0       0       0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels required when called: 2
   244 ;; This function calls:
   245 ;;		___lldiv
   246 ;;		___lwdiv
   247 ;;		___lwmod
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text0
   254   0000C8                     __ptext0:
   255                           	callstack 0
   256   0000C8                     _main:
   257                           	callstack 29
   258   0000C8                     
   259                           ;newmain.c: 25:     }
   260   0000C8  0E00               	movlw	0
   261   0000CA  010F               	movlb	15	; () banked
   262   0000CC  6F38               	movwf	56,b	;volatile
   263                           
   264                           ;newmain.c: 26:     return;
   265   0000CE  0EF0               	movlw	240
   266   0000D0  6E92               	movwf	146,c	;volatile
   267                           
   268                           ;newmain.c: 27: }
   269   0000D2  0E00               	movlw	0
   270   0000D4  6E80               	movwf	128,c	;volatile
   271                           
   272                           ;newmain.c: 29: void __attribute__((picinterrupt(("high_priority")))) isr() {
   273   0000D6  0E00               	movlw	0
   274   0000D8  6F3B               	movwf	59,b	;volatile
   275                           
   276                           ;newmain.c: 30:     if (TMR0IF) {
   277   0000DA  0E00               	movlw	0
   278   0000DC  6E95               	movwf	149,c	;volatile
   279                           
   280                           ;newmain.c: 31:         TMR0IF = 0;
   281   0000DE  0E00               	movlw	0
   282   0000E0  6E83               	movwf	131,c	;volatile
   283                           
   284                           ;newmain.c: 33:         PORTA = 0x00;
   285   0000E2  0EC3               	movlw	195
   286   0000E4  6ED5               	movwf	213,c	;volatile
   287                           
   288                           ;newmain.c: 34:         PORTD = seg_char[digits[digit_counter]];
   289   0000E6  0E06               	movlw	6
   290   0000E8  6ED6               	movwf	214,c	;volatile
   291   0000EA                     
   292                           ; BSR set to: 15
   293                           ;newmain.c: 35:         PORTA = 0x01 << digit_counter;
   294   0000EA  8AF2               	bsf	4082,5,c	;volatile
   295   0000EC                     
   296                           ; BSR set to: 15
   297                           ;newmain.c: 36:         digit_counter++;
   298   0000EC  84F1               	bsf	4081,2,c	;volatile
   299   0000EE                     
   300                           ; BSR set to: 15
   301                           ;newmain.c: 37:         if (digit_counter >= 4) {
   302   0000EE  8EF2               	bsf	4082,7,c	;volatile
   303   0000F0                     l894:
   304                           
   305                           ;newmain.c: 39:         }
   306   0000F0  C01C  F005         	movff	_counter,___lldiv@dividend
   307   0000F4  C01D  F006         	movff	_counter+1,___lldiv@dividend+1
   308   0000F8  C01E  F007         	movff	_counter+2,___lldiv@dividend+2
   309   0000FC  C01F  F008         	movff	_counter+3,___lldiv@dividend+3
   310   000100  0E32               	movlw	50
   311   000102  6E09               	movwf	___lldiv@divisor^0,c
   312   000104  0E00               	movlw	0
   313   000106  6E0A               	movwf	(___lldiv@divisor+1)^0,c
   314   000108  0E00               	movlw	0
   315   00010A  6E0B               	movwf	(___lldiv@divisor+2)^0,c
   316   00010C  0E00               	movlw	0
   317   00010E  6E0C               	movwf	(___lldiv@divisor+3)^0,c
   318   000110  ECD6  F000         	call	___lldiv	;wreg free
   319   000114  C005  F02B         	movff	?___lldiv,_value
   320   000118  C006  F02C         	movff	?___lldiv+1,_value+1
   321   00011C                     
   322                           ;newmain.c: 40:         counter++;
   323   00011C  C02B  F00A         	movff	_value,___lwdiv@dividend
   324   000120  C02C  F00B         	movff	_value+1,___lwdiv@dividend+1
   325   000124  0E03               	movlw	3
   326   000126  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
   327   000128  0EE8               	movlw	232
   328   00012A  6E0C               	movwf	___lwdiv@divisor^0,c
   329   00012C  EC28  F001         	call	___lwdiv	;wreg free
   330   000130  500A               	movf	?___lwdiv^0,w,c
   331   000132  6E15               	movwf	(_digits+3)^0,c
   332   000134                     
   333                           ;newmain.c: 41:         if (counter > 50 * 10000) {
   334   000134  0E03               	movlw	3
   335   000136  6E08               	movwf	(___lwmod@divisor+1)^0,c
   336   000138  0EE8               	movlw	232
   337   00013A  6E07               	movwf	___lwmod@divisor^0,c
   338   00013C  C02B  F005         	movff	_value,___lwmod@dividend
   339   000140  C02C  F006         	movff	_value+1,___lwmod@dividend+1
   340   000144  EC62  F001         	call	___lwmod	;wreg free
   341   000148  C005  F00A         	movff	?___lwmod,___lwdiv@dividend
   342   00014C  C006  F00B         	movff	?___lwmod+1,___lwdiv@dividend+1
   343   000150  0E00               	movlw	0
   344   000152  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
   345   000154  0E64               	movlw	100
   346   000156  6E0C               	movwf	___lwdiv@divisor^0,c
   347   000158  EC28  F001         	call	___lwdiv	;wreg free
   348   00015C  500A               	movf	?___lwdiv^0,w,c
   349   00015E  6E14               	movwf	(_digits+2)^0,c
   350   000160                     
   351                           ;newmain.c: 42:             counter = 0;
   352   000160  0E00               	movlw	0
   353   000162  6E08               	movwf	(___lwmod@divisor+1)^0,c
   354   000164  0E64               	movlw	100
   355   000166  6E07               	movwf	___lwmod@divisor^0,c
   356   000168  C02B  F005         	movff	_value,___lwmod@dividend
   357   00016C  C02C  F006         	movff	_value+1,___lwmod@dividend+1
   358   000170  EC62  F001         	call	___lwmod	;wreg free
   359   000174  C005  F00A         	movff	?___lwmod,___lwdiv@dividend
   360   000178  C006  F00B         	movff	?___lwmod+1,___lwdiv@dividend+1
   361   00017C  0E00               	movlw	0
   362   00017E  6E0D               	movwf	(___lwdiv@divisor+1)^0,c
   363   000180  0E0A               	movlw	10
   364   000182  6E0C               	movwf	___lwdiv@divisor^0,c
   365   000184  EC28  F001         	call	___lwdiv	;wreg free
   366   000188  500A               	movf	?___lwdiv^0,w,c
   367   00018A  6E13               	movwf	(_digits+1)^0,c
   368   00018C                     
   369                           ;newmain.c: 43:         }
   370   00018C  C02B  F005         	movff	_value,___lwmod@dividend
   371   000190  C02C  F006         	movff	_value+1,___lwmod@dividend+1
   372   000194  0E00               	movlw	0
   373   000196  6E08               	movwf	(___lwmod@divisor+1)^0,c
   374   000198  0E0A               	movlw	10
   375   00019A  6E07               	movwf	___lwmod@divisor^0,c
   376   00019C  EC62  F001         	call	___lwmod	;wreg free
   377   0001A0  5005               	movf	?___lwmod^0,w,c
   378   0001A2  6E12               	movwf	_digits^0,c
   379   0001A4  EF78  F000         	goto	l894
   380   0001A8  EF62  F000         	goto	start
   381   0001AC                     __end_of_main:
   382                           	callstack 0
   383                           
   384 ;; *************** function ___lwmod *****************
   385 ;; Defined at:
   386 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;  dividend        2    4[COMRAM] unsigned int 
   389 ;;  divisor         2    6[COMRAM] unsigned int 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  counter         1    8[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  2    4[COMRAM] unsigned int 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   401 ;;      Params:         4       0       0       0       0       0       0
   402 ;;      Locals:         1       0       0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0
   404 ;;      Totals:         5       0       0       0       0       0       0
   405 ;;Total ram usage:        5 bytes
   406 ;; Hardware stack levels used: 1
   407 ;; Hardware stack levels required when called: 1
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text1
   416   0002C4                     __ptext1:
   417                           	callstack 0
   418   0002C4                     ___lwmod:
   419                           	callstack 29
   420   0002C4  5007               	movf	___lwmod@divisor^0,w,c
   421   0002C6  1008               	iorwf	(___lwmod@divisor+1)^0,w,c
   422   0002C8  B4D8               	btfsc	status,2,c
   423   0002CA  EF69  F001         	goto	u201
   424   0002CE  EF6B  F001         	goto	u200
   425   0002D2                     u201:
   426   0002D2  EF8F  F001         	goto	l554
   427   0002D6                     u200:
   428   0002D6  0E01               	movlw	1
   429   0002D8  6E09               	movwf	___lwmod@counter^0,c
   430   0002DA  EF73  F001         	goto	l876
   431   0002DE                     l874:
   432   0002DE  90D8               	bcf	status,0,c
   433   0002E0  3607               	rlcf	___lwmod@divisor^0,f,c
   434   0002E2  3608               	rlcf	(___lwmod@divisor+1)^0,f,c
   435   0002E4  2A09               	incf	___lwmod@counter^0,f,c
   436   0002E6                     l876:
   437   0002E6  AE08               	btfss	(___lwmod@divisor+1)^0,7,c
   438   0002E8  EF78  F001         	goto	u211
   439   0002EC  EF7A  F001         	goto	u210
   440   0002F0                     u211:
   441   0002F0  EF6F  F001         	goto	l874
   442   0002F4                     u210:
   443   0002F4                     l878:
   444   0002F4  5007               	movf	___lwmod@divisor^0,w,c
   445   0002F6  5C05               	subwf	___lwmod@dividend^0,w,c
   446   0002F8  5008               	movf	(___lwmod@divisor+1)^0,w,c
   447   0002FA  5806               	subwfb	(___lwmod@dividend+1)^0,w,c
   448   0002FC  A0D8               	btfss	status,0,c
   449   0002FE  EF83  F001         	goto	u221
   450   000302  EF85  F001         	goto	u220
   451   000306                     u221:
   452   000306  EF89  F001         	goto	l882
   453   00030A                     u220:
   454   00030A  5007               	movf	___lwmod@divisor^0,w,c
   455   00030C  5E05               	subwf	___lwmod@dividend^0,f,c
   456   00030E  5008               	movf	(___lwmod@divisor+1)^0,w,c
   457   000310  5A06               	subwfb	(___lwmod@dividend+1)^0,f,c
   458   000312                     l882:
   459   000312  90D8               	bcf	status,0,c
   460   000314  3208               	rrcf	(___lwmod@divisor+1)^0,f,c
   461   000316  3207               	rrcf	___lwmod@divisor^0,f,c
   462   000318  2E09               	decfsz	___lwmod@counter^0,f,c
   463   00031A  EF7A  F001         	goto	l878
   464   00031E                     l554:
   465   00031E  C005  F005         	movff	___lwmod@dividend,?___lwmod
   466   000322  C006  F006         	movff	___lwmod@dividend+1,?___lwmod+1
   467   000326  0012               	return		;funcret
   468   000328                     __end_of___lwmod:
   469                           	callstack 0
   470                           
   471 ;; *************** function ___lwdiv *****************
   472 ;; Defined at:
   473 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  dividend        2    9[COMRAM] unsigned int 
   476 ;;  divisor         2   11[COMRAM] unsigned int 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  quotient        2   13[COMRAM] unsigned int 
   479 ;;  counter         1   15[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  2    9[COMRAM] unsigned int 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   489 ;;      Params:         4       0       0       0       0       0       0
   490 ;;      Locals:         3       0       0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0
   492 ;;      Totals:         7       0       0       0       0       0       0
   493 ;;Total ram usage:        7 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text2
   504   000250                     __ptext2:
   505                           	callstack 0
   506   000250                     ___lwdiv:
   507                           	callstack 29
   508   000250  0E00               	movlw	0
   509   000252  6E0F               	movwf	(___lwdiv@quotient+1)^0,c
   510   000254  0E00               	movlw	0
   511   000256  6E0E               	movwf	___lwdiv@quotient^0,c
   512   000258  500C               	movf	___lwdiv@divisor^0,w,c
   513   00025A  100D               	iorwf	(___lwdiv@divisor+1)^0,w,c
   514   00025C  B4D8               	btfsc	status,2,c
   515   00025E  EF33  F001         	goto	u171
   516   000262  EF35  F001         	goto	u170
   517   000266                     u171:
   518   000266  EF5D  F001         	goto	l544
   519   00026A                     u170:
   520   00026A  0E01               	movlw	1
   521   00026C  6E10               	movwf	___lwdiv@counter^0,c
   522   00026E  EF3D  F001         	goto	l856
   523   000272                     l854:
   524   000272  90D8               	bcf	status,0,c
   525   000274  360C               	rlcf	___lwdiv@divisor^0,f,c
   526   000276  360D               	rlcf	(___lwdiv@divisor+1)^0,f,c
   527   000278  2A10               	incf	___lwdiv@counter^0,f,c
   528   00027A                     l856:
   529   00027A  AE0D               	btfss	(___lwdiv@divisor+1)^0,7,c
   530   00027C  EF42  F001         	goto	u181
   531   000280  EF44  F001         	goto	u180
   532   000284                     u181:
   533   000284  EF39  F001         	goto	l854
   534   000288                     u180:
   535   000288                     l858:
   536   000288  90D8               	bcf	status,0,c
   537   00028A  360E               	rlcf	___lwdiv@quotient^0,f,c
   538   00028C  360F               	rlcf	(___lwdiv@quotient+1)^0,f,c
   539   00028E  500C               	movf	___lwdiv@divisor^0,w,c
   540   000290  5C0A               	subwf	___lwdiv@dividend^0,w,c
   541   000292  500D               	movf	(___lwdiv@divisor+1)^0,w,c
   542   000294  580B               	subwfb	(___lwdiv@dividend+1)^0,w,c
   543   000296  A0D8               	btfss	status,0,c
   544   000298  EF50  F001         	goto	u191
   545   00029C  EF52  F001         	goto	u190
   546   0002A0                     u191:
   547   0002A0  EF57  F001         	goto	l866
   548   0002A4                     u190:
   549   0002A4  500C               	movf	___lwdiv@divisor^0,w,c
   550   0002A6  5E0A               	subwf	___lwdiv@dividend^0,f,c
   551   0002A8  500D               	movf	(___lwdiv@divisor+1)^0,w,c
   552   0002AA  5A0B               	subwfb	(___lwdiv@dividend+1)^0,f,c
   553   0002AC  800E               	bsf	___lwdiv@quotient^0,0,c
   554   0002AE                     l866:
   555   0002AE  90D8               	bcf	status,0,c
   556   0002B0  320D               	rrcf	(___lwdiv@divisor+1)^0,f,c
   557   0002B2  320C               	rrcf	___lwdiv@divisor^0,f,c
   558   0002B4  2E10               	decfsz	___lwdiv@counter^0,f,c
   559   0002B6  EF44  F001         	goto	l858
   560   0002BA                     l544:
   561   0002BA  C00E  F00A         	movff	___lwdiv@quotient,?___lwdiv
   562   0002BE  C00F  F00B         	movff	___lwdiv@quotient+1,?___lwdiv+1
   563   0002C2  0012               	return		;funcret
   564   0002C4                     __end_of___lwdiv:
   565                           	callstack 0
   566                           
   567 ;; *************** function ___lldiv *****************
   568 ;; Defined at:
   569 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  dividend        4    4[COMRAM] unsigned long 
   572 ;;  divisor         4    8[COMRAM] unsigned long 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  quotient        4   12[COMRAM] unsigned long 
   575 ;;  counter         1   16[COMRAM] unsigned char 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  4    4[COMRAM] unsigned long 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   585 ;;      Params:         8       0       0       0       0       0       0
   586 ;;      Locals:         5       0       0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0
   588 ;;      Totals:        13       0       0       0       0       0       0
   589 ;;Total ram usage:       13 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text3
   600   0001AC                     __ptext3:
   601                           	callstack 0
   602   0001AC                     ___lldiv:
   603                           	callstack 29
   604   0001AC  0E00               	movlw	0
   605   0001AE  6E0D               	movwf	___lldiv@quotient^0,c
   606   0001B0  0E00               	movlw	0
   607   0001B2  6E0E               	movwf	(___lldiv@quotient+1)^0,c
   608   0001B4  0E00               	movlw	0
   609   0001B6  6E0F               	movwf	(___lldiv@quotient+2)^0,c
   610   0001B8  0E00               	movlw	0
   611   0001BA  6E10               	movwf	(___lldiv@quotient+3)^0,c
   612   0001BC  5009               	movf	___lldiv@divisor^0,w,c
   613   0001BE  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
   614   0001C0  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
   615   0001C2  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
   616   0001C4  B4D8               	btfsc	status,2,c
   617   0001C6  EFE7  F000         	goto	u141
   618   0001CA  EFE9  F000         	goto	u140
   619   0001CE                     u141:
   620   0001CE  EF1F  F001         	goto	l80
   621   0001D2                     u140:
   622   0001D2  0E01               	movlw	1
   623   0001D4  6E11               	movwf	___lldiv@counter^0,c
   624   0001D6  EFF3  F000         	goto	l834
   625   0001DA                     l832:
   626   0001DA  90D8               	bcf	status,0,c
   627   0001DC  3609               	rlcf	___lldiv@divisor^0,f,c
   628   0001DE  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
   629   0001E0  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
   630   0001E2  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
   631   0001E4  2A11               	incf	___lldiv@counter^0,f,c
   632   0001E6                     l834:
   633   0001E6  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
   634   0001E8  EFF8  F000         	goto	u151
   635   0001EC  EFFA  F000         	goto	u150
   636   0001F0                     u151:
   637   0001F0  EFED  F000         	goto	l832
   638   0001F4                     u150:
   639   0001F4                     l836:
   640   0001F4  90D8               	bcf	status,0,c
   641   0001F6  360D               	rlcf	___lldiv@quotient^0,f,c
   642   0001F8  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
   643   0001FA  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
   644   0001FC  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
   645   0001FE  5009               	movf	___lldiv@divisor^0,w,c
   646   000200  5C05               	subwf	___lldiv@dividend^0,w,c
   647   000202  500A               	movf	(___lldiv@divisor+1)^0,w,c
   648   000204  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
   649   000206  500B               	movf	(___lldiv@divisor+2)^0,w,c
   650   000208  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
   651   00020A  500C               	movf	(___lldiv@divisor+3)^0,w,c
   652   00020C  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
   653   00020E  A0D8               	btfss	status,0,c
   654   000210  EF0C  F001         	goto	u161
   655   000214  EF0E  F001         	goto	u160
   656   000218                     u161:
   657   000218  EF17  F001         	goto	l844
   658   00021C                     u160:
   659   00021C  5009               	movf	___lldiv@divisor^0,w,c
   660   00021E  5E05               	subwf	___lldiv@dividend^0,f,c
   661   000220  500A               	movf	(___lldiv@divisor+1)^0,w,c
   662   000222  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
   663   000224  500B               	movf	(___lldiv@divisor+2)^0,w,c
   664   000226  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
   665   000228  500C               	movf	(___lldiv@divisor+3)^0,w,c
   666   00022A  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
   667   00022C  800D               	bsf	___lldiv@quotient^0,0,c
   668   00022E                     l844:
   669   00022E  90D8               	bcf	status,0,c
   670   000230  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
   671   000232  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
   672   000234  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
   673   000236  3209               	rrcf	___lldiv@divisor^0,f,c
   674   000238  2E11               	decfsz	___lldiv@counter^0,f,c
   675   00023A  EFFA  F000         	goto	l836
   676   00023E                     l80:
   677   00023E  C00D  F005         	movff	___lldiv@quotient,?___lldiv
   678   000242  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
   679   000246  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
   680   00024A  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
   681   00024E  0012               	return		;funcret
   682   000250                     __end_of___lldiv:
   683                           	callstack 0
   684                           
   685 ;; *************** function _isr *****************
   686 ;; Defined at:
   687 ;;		line 48 in file "newmain.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   701 ;;      Params:         0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0
   703 ;;      Temps:          4       0       0       0       0       0       0
   704 ;;      Totals:         4       0       0       0       0       0       0
   705 ;;Total ram usage:        4 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		Interrupt level 2
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	intcode
   715   000008                     __pintcode:
   716                           	callstack 0
   717   000008                     _isr:
   718                           	callstack 29
   719                           
   720                           ;incstack = 0
   721   000008  822D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   722   00000A  CFD9 F003          	movff	fsr2l,??_isr+2
   723   00000E  CFDA F004          	movff	fsr2h,??_isr+3
   724   000012  A4F2               	btfss	4082,2,c	;volatile
   725   000014  EF0E  F000         	goto	i2u10_41
   726   000018  EF10  F000         	goto	i2u10_40
   727   00001C                     i2u10_41:
   728   00001C  EF5C  F000         	goto	i2l50
   729   000020                     i2u10_40:
   730   000020  94F2               	bcf	4082,2,c	;volatile
   731   000022  0E06               	movlw	6
   732   000024  6ED6               	movwf	214,c	;volatile
   733   000026  0E00               	movlw	0
   734   000028  6E80               	movwf	128,c	;volatile
   735   00002A  0E12               	movlw	low _digits
   736   00002C  2420               	addwf	_digit_counter^0,w,c
   737   00002E  6ED9               	movwf	fsr2l,c
   738   000030  6ADA               	clrf	fsr2h,c
   739   000032  0E00               	movlw	high _digits
   740   000034  22DA               	addwfc	fsr2h,f,c
   741   000036  50DF               	movf	indf2,w,c
   742   000038  6E01               	movwf	??_isr^0,c
   743   00003A  6A02               	clrf	(??_isr+1)^0,c
   744   00003C  0E21               	movlw	low _seg_char
   745   00003E  2401               	addwf	??_isr^0,w,c
   746   000040  6ED9               	movwf	fsr2l,c
   747   000042  0E00               	movlw	high _seg_char
   748   000044  2002               	addwfc	(??_isr+1)^0,w,c
   749   000046  6EDA               	movwf	fsr2h,c
   750   000048  50DF               	movf	indf2,w,c
   751   00004A  6E83               	movwf	131,c	;volatile
   752   00004C  C020  F001         	movff	_digit_counter,??_isr
   753   000050  0E01               	movlw	1
   754   000052  6E02               	movwf	(??_isr+1)^0,c
   755   000054  2A01               	incf	??_isr^0,f,c
   756   000056  EF2F  F000         	goto	i2u11_44
   757   00005A                     i2u11_45:
   758   00005A  90D8               	bcf	status,0,c
   759   00005C  3602               	rlcf	(??_isr+1)^0,f,c
   760   00005E                     i2u11_44:
   761   00005E  2E01               	decfsz	??_isr^0,f,c
   762   000060  EF2D  F000         	goto	i2u11_45
   763   000064  5002               	movf	(??_isr+1)^0,w,c
   764   000066  6E80               	movwf	128,c	;volatile
   765   000068  2A20               	incf	_digit_counter^0,f,c
   766   00006A  0E03               	movlw	3
   767   00006C  6420               	cpfsgt	_digit_counter^0,c
   768   00006E  EF3B  F000         	goto	i2u12_41
   769   000072  EF3D  F000         	goto	i2u12_40
   770   000076                     i2u12_41:
   771   000076  EF3F  F000         	goto	i2l820
   772   00007A                     i2u12_40:
   773   00007A  0E00               	movlw	0
   774   00007C  6E20               	movwf	_digit_counter^0,c
   775   00007E                     i2l820:
   776   00007E  0E01               	movlw	1
   777   000080  261C               	addwf	_counter^0,f,c
   778   000082  0E00               	movlw	0
   779   000084  221D               	addwfc	(_counter+1)^0,f,c
   780   000086  221E               	addwfc	(_counter+2)^0,f,c
   781   000088  221F               	addwfc	(_counter+3)^0,f,c
   782   00008A  0E21               	movlw	33
   783   00008C  5C1C               	subwf	_counter^0,w,c
   784   00008E  0EA1               	movlw	161
   785   000090  581D               	subwfb	(_counter+1)^0,w,c
   786   000092  0EFF               	movlw	255
   787   000094  581E               	subwfb	(_counter+2)^0,w,c
   788   000096  0EFF               	movlw	255
   789   000098  581F               	subwfb	(_counter+3)^0,w,c
   790   00009A  A0D8               	btfss	status,0,c
   791   00009C  EF52  F000         	goto	i2u13_41
   792   0000A0  EF54  F000         	goto	i2u13_40
   793   0000A4                     i2u13_41:
   794   0000A4  EF5C  F000         	goto	i2l50
   795   0000A8                     i2u13_40:
   796   0000A8  0E00               	movlw	0
   797   0000AA  6E1C               	movwf	_counter^0,c
   798   0000AC  0E00               	movlw	0
   799   0000AE  6E1D               	movwf	(_counter+1)^0,c
   800   0000B0  0E00               	movlw	0
   801   0000B2  6E1E               	movwf	(_counter+2)^0,c
   802   0000B4  0E00               	movlw	0
   803   0000B6  6E1F               	movwf	(_counter+3)^0,c
   804   0000B8                     i2l50:
   805   0000B8  C004  FFDA         	movff	??_isr+3,fsr2h
   806   0000BC  C003  FFD9         	movff	??_isr+2,fsr2l
   807   0000C0  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   808   0000C2  0011               	retfie		f
   809   0000C4                     __end_of_isr:
   810                           	callstack 0
   811   000000                     
   812                           	psect	rparam
   813   000000                     
   814                           	psect	temp
   815   00002D                     btemp:
   816                           	callstack 0
   817   00002D                     	ds	1
   818   000000                     int$flags	set	btemp
   819   000000                     wtemp8	set	btemp+1
   820   000000                     ttemp5	set	btemp+1
   821   000000                     ttemp6	set	btemp+4
   822   000000                     ttemp7	set	btemp+8
   823                           
   824                           	psect	idloc
   825                           
   826                           ;Config register IDLOC0 @ 0x200000
   827                           ;	unspecified, using default values
   828   200000                     	org	2097152
   829   200000  FF                 	db	255
   830                           
   831                           ;Config register IDLOC1 @ 0x200001
   832                           ;	unspecified, using default values
   833   200001                     	org	2097153
   834   200001  FF                 	db	255
   835                           
   836                           ;Config register IDLOC2 @ 0x200002
   837                           ;	unspecified, using default values
   838   200002                     	org	2097154
   839   200002  FF                 	db	255
   840                           
   841                           ;Config register IDLOC3 @ 0x200003
   842                           ;	unspecified, using default values
   843   200003                     	org	2097155
   844   200003  FF                 	db	255
   845                           
   846                           ;Config register IDLOC4 @ 0x200004
   847                           ;	unspecified, using default values
   848   200004                     	org	2097156
   849   200004  FF                 	db	255
   850                           
   851                           ;Config register IDLOC5 @ 0x200005
   852                           ;	unspecified, using default values
   853   200005                     	org	2097157
   854   200005  FF                 	db	255
   855                           
   856                           ;Config register IDLOC6 @ 0x200006
   857                           ;	unspecified, using default values
   858   200006                     	org	2097158
   859   200006  FF                 	db	255
   860                           
   861                           ;Config register IDLOC7 @ 0x200007
   862                           ;	unspecified, using default values
   863   200007                     	org	2097159
   864   200007  FF                 	db	255
   865                           
   866                           	psect	config
   867                           
   868                           ; Padding undefined space
   869   300000                     	org	3145728
   870   300000  FF                 	db	255
   871                           
   872                           ;Config register CONFIG1H @ 0x300001
   873                           ;	Oscillator Selection bits
   874                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
   875                           ;	4X PLL Enable
   876                           ;	PLLCFG = 0x0, unprogrammed default
   877                           ;	Primary clock enable bit
   878                           ;	PRICLKEN = 0x1, unprogrammed default
   879                           ;	Fail-Safe Clock Monitor Enable bit
   880                           ;	FCMEN = 0x0, unprogrammed default
   881                           ;	Internal/External Oscillator Switchover bit
   882                           ;	IESO = 0x0, unprogrammed default
   883   300001                     	org	3145729
   884   300001  22                 	db	34
   885                           
   886                           ;Config register CONFIG2L @ 0x300002
   887                           ;	unspecified, using default values
   888                           ;	Power-up Timer Enable bit
   889                           ;	PWRTEN = 0x1, unprogrammed default
   890                           ;	Brown-out Reset Enable bits
   891                           ;	BOREN = 0x3, unprogrammed default
   892                           ;	Brown Out Reset Voltage bits
   893                           ;	BORV = 0x3, unprogrammed default
   894   300002                     	org	3145730
   895   300002  1F                 	db	31
   896                           
   897                           ;Config register CONFIG2H @ 0x300003
   898                           ;	Watchdog Timer Enable bits
   899                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   900                           ;	Watchdog Timer Postscale Select bits
   901                           ;	WDTPS = 0xF, unprogrammed default
   902   300003                     	org	3145731
   903   300003  3C                 	db	60
   904                           
   905                           ; Padding undefined space
   906   300004                     	org	3145732
   907   300004  FF                 	db	255
   908                           
   909                           ;Config register CONFIG3H @ 0x300005
   910                           ;	unspecified, using default values
   911                           ;	CCP2 MUX bit
   912                           ;	CCP2MX = 0x1, unprogrammed default
   913                           ;	PORTB A/D Enable bit
   914                           ;	PBADEN = 0x1, unprogrammed default
   915                           ;	P3A/CCP3 Mux bit
   916                           ;	CCP3MX = 0x1, unprogrammed default
   917                           ;	HFINTOSC Fast Start-up
   918                           ;	HFOFST = 0x1, unprogrammed default
   919                           ;	Timer3 Clock input mux bit
   920                           ;	T3CMX = 0x1, unprogrammed default
   921                           ;	ECCP2 B output mux bit
   922                           ;	P2BMX = 0x1, unprogrammed default
   923                           ;	MCLR Pin Enable bit
   924                           ;	MCLRE = 0x1, unprogrammed default
   925   300005                     	org	3145733
   926   300005  BF                 	db	191
   927                           
   928                           ;Config register CONFIG4L @ 0x300006
   929                           ;	unspecified, using default values
   930                           ;	Stack Full/Underflow Reset Enable bit
   931                           ;	STVREN = 0x1, unprogrammed default
   932                           ;	Single-Supply ICSP Enable bit
   933                           ;	LVP = 0x1, unprogrammed default
   934                           ;	Extended Instruction Set Enable bit
   935                           ;	XINST = 0x0, unprogrammed default
   936                           ;	Background Debug
   937                           ;	DEBUG = 0x1, unprogrammed default
   938   300006                     	org	3145734
   939   300006  85                 	db	133
   940                           
   941                           ; Padding undefined space
   942   300007                     	org	3145735
   943   300007  FF                 	db	255
   944                           
   945                           ;Config register CONFIG5L @ 0x300008
   946                           ;	unspecified, using default values
   947                           ;	Code Protection Block 0
   948                           ;	CP0 = 0x1, unprogrammed default
   949                           ;	Code Protection Block 1
   950                           ;	CP1 = 0x1, unprogrammed default
   951                           ;	Code Protection Block 2
   952                           ;	CP2 = 0x1, unprogrammed default
   953                           ;	Code Protection Block 3
   954                           ;	CP3 = 0x1, unprogrammed default
   955   300008                     	org	3145736
   956   300008  0F                 	db	15
   957                           
   958                           ;Config register CONFIG5H @ 0x300009
   959                           ;	unspecified, using default values
   960                           ;	Boot Block Code Protection bit
   961                           ;	CPB = 0x1, unprogrammed default
   962                           ;	Data EEPROM Code Protection bit
   963                           ;	CPD = 0x1, unprogrammed default
   964   300009                     	org	3145737
   965   300009  C0                 	db	192
   966                           
   967                           ;Config register CONFIG6L @ 0x30000A
   968                           ;	unspecified, using default values
   969                           ;	Write Protection Block 0
   970                           ;	WRT0 = 0x1, unprogrammed default
   971                           ;	Write Protection Block 1
   972                           ;	WRT1 = 0x1, unprogrammed default
   973                           ;	Write Protection Block 2
   974                           ;	WRT2 = 0x1, unprogrammed default
   975                           ;	Write Protection Block 3
   976                           ;	WRT3 = 0x1, unprogrammed default
   977   30000A                     	org	3145738
   978   30000A  0F                 	db	15
   979                           
   980                           ;Config register CONFIG6H @ 0x30000B
   981                           ;	unspecified, using default values
   982                           ;	Configuration Register Write Protection bit
   983                           ;	WRTC = 0x1, unprogrammed default
   984                           ;	Boot Block Write Protection bit
   985                           ;	WRTB = 0x1, unprogrammed default
   986                           ;	Data EEPROM Write Protection bit
   987                           ;	WRTD = 0x1, unprogrammed default
   988   30000B                     	org	3145739
   989   30000B  E0                 	db	224
   990                           
   991                           ;Config register CONFIG7L @ 0x30000C
   992                           ;	unspecified, using default values
   993                           ;	Table Read Protection Block 0
   994                           ;	EBTR0 = 0x1, unprogrammed default
   995                           ;	Table Read Protection Block 1
   996                           ;	EBTR1 = 0x1, unprogrammed default
   997                           ;	Table Read Protection Block 2
   998                           ;	EBTR2 = 0x1, unprogrammed default
   999                           ;	Table Read Protection Block 3
  1000                           ;	EBTR3 = 0x1, unprogrammed default
  1001   30000C                     	org	3145740
  1002   30000C  0F                 	db	15
  1003                           
  1004                           ;Config register CONFIG7H @ 0x30000D
  1005                           ;	unspecified, using default values
  1006                           ;	Boot Block Table Read Protection bit
  1007                           ;	EBTRB = 0x1, unprogrammed default
  1008   30000D                     	org	3145741
  1009   30000D  40                 	db	64
  1010                           tosu	equ	0xFFF
  1011                           tosh	equ	0xFFE
  1012                           tosl	equ	0xFFD
  1013                           stkptr	equ	0xFFC
  1014                           pclatu	equ	0xFFB
  1015                           pclath	equ	0xFFA
  1016                           pcl	equ	0xFF9
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           prodh	equ	0xFF4
  1022                           prodl	equ	0xFF3
  1023                           indf0	equ	0xFEF
  1024                           postinc0	equ	0xFEE
  1025                           postdec0	equ	0xFED
  1026                           preinc0	equ	0xFEC
  1027                           plusw0	equ	0xFEB
  1028                           fsr0h	equ	0xFEA
  1029                           fsr0l	equ	0xFE9
  1030                           wreg	equ	0xFE8
  1031                           indf1	equ	0xFE7
  1032                           postinc1	equ	0xFE6
  1033                           postdec1	equ	0xFE5
  1034                           preinc1	equ	0xFE4
  1035                           plusw1	equ	0xFE3
  1036                           fsr1h	equ	0xFE2
  1037                           fsr1l	equ	0xFE1
  1038                           bsr	equ	0xFE0
  1039                           indf2	equ	0xFDF
  1040                           postinc2	equ	0xFDE
  1041                           postdec2	equ	0xFDD
  1042                           preinc2	equ	0xFDC
  1043                           plusw2	equ	0xFDB
  1044                           fsr2h	equ	0xFDA
  1045                           fsr2l	equ	0xFD9
  1046                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         15
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lldiv
    ___lwdiv->___lwmod

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1547
                            ___lldiv
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              9 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      2C       1       46.8%
BITBIGSFRllh        44      0       0      21        0.0%
BITBIGSFRhhl        3F      0       0      17        0.0%
BITBIGSFRhhhl       1A      0       0      16        0.0%
BITBIGSFRlhh         E      0       0      19        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRlhl         2      0       0      20        0.0%
BITBIGSFRhl          2      0       0      18        0.0%
BITBIGSFRlll         2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      23        0.0%
DATA                 0      0      2C      25        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 24 23:16:55 2023

                     l80 023E                       l87 024E                      l551 02C2  
                    l544 02BA                      l561 0326                      l554 031E  
                    l900 0160                      l830 01D2                      l902 018C  
                    l840 021C                      l832 01DA                      l842 022C  
                    l834 01E6                      l826 01AC                      l850 0258  
                    l844 022E                      l836 01F4                      l828 01BC  
                    l860 028E                      l852 026A                      l846 0238  
                    l838 01FE                      l862 02A4                      l854 0272  
                    l870 02C4                      l864 02AC                      l856 027A  
                    l848 0250                      l880 030A                      l872 02D6  
                    l866 02AE                      l858 0288                      l882 0312  
                    l874 02DE                      l890 00EC                      l868 02B4  
                    l884 0318                      l876 02E6                      l892 00EE  
                    l878 02F4                      l894 00F0                      l886 00C8  
                    l896 011C                      l888 00EA                      l898 0134  
                    _GIE 7F97                      u200 02D6                      u201 02D2  
                    u210 02F4                      u211 02F0                      u140 01D2  
                    u220 030A                      u141 01CE                      u221 0306  
                    u150 01F4                      u151 01F0                      u160 021C  
                    u161 0218                      u170 026A                      u171 0266  
                    u180 0288                      u181 0284                      u190 02A4  
                    u191 02A0                      _isr 0008                      wreg 0FE8  
                   ?_isr 0001                     i2l50 00B8                     _main 00C8  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 002D                     start 00C4  
           ___param_bank 0000                    ??_isr 0001                    ?_main 0001  
        __end_of___lldiv 0250                    _T0CON 0FD5          __end_of___lwdiv 02C4  
        __end_of___lwmod 0328                    i2l810 002A                    i2l820 007E  
                  i2l812 004C                    i2l804 0012                    i2l822 008A  
                  i2l814 0068                    i2l806 0020                    i2l824 00A8  
                  i2l816 006A                    i2l808 0022                    i2l818 007A  
                  _TMR0L 0FD6                    _PORTA 0F80                    _PORTD 0F83  
                  _TRISA 0F92                    _TRISD 0F95                    _value 002B  
                  tablat 0FF5                    ttemp5 002E                    ttemp6 0031  
                  ttemp7 0035                    status 0FD8                    wtemp8 002E  
        __initialization 0328             __end_of_main 01AC                   ??_main 0012  
          __activetblptr 0000                   _ANSELA 0F38                   _ANSELD 0F3B  
                 _TMR0IE 7F95                   _TMR0IF 7F92                   _TMR0IP 7F8A  
              ??___lldiv 000D                   _digits 0012                ??___lwdiv 000E  
              ??___lwmod 0009                   clear_0 034E                   isa$std 0001  
           __pdataCOMRAM 0021                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0354  
          ___rparam_used 0001           __pcstackCOMRAM 0001               __pnvCOMRAM 002B  
                i2u10_40 0020                  i2u10_41 001C                  i2u11_44 005E  
                i2u11_45 005A                  i2u12_40 007A                  i2u12_41 0076  
                i2u13_40 00A8                  i2u13_41 00A4                  __Hparam 0000  
                __Lparam 0000                  ___lldiv 01AC                  ___lwdiv 0250  
                ___lwmod 02C4                  __pcinit 0328                  __ramtop 0600  
                __ptext0 00C8                  __ptext1 02C4                  __ptext2 0250  
                __ptext3 01AC                  _counter 001C     end_of_initialization 0354  
        ___lldiv@divisor 0009          ___lldiv@counter 0011                  postdec1 0FE5  
                postinc0 0FEE            __pidataCOMRAM 035E      start_initialization 0328  
            __end_of_isr 00C4              __pbssCOMRAM 0012         ___lwdiv@dividend 000A  
              __pintcode 0008                 ?___lldiv 0005                 ?___lwdiv 000A  
               ?___lwmod 0005         ___lwdiv@quotient 000E            _digit_counter 0020  
              copy_data0 033C                 __Hrparam 0000                 __Lrparam 0000  
        ___lwdiv@divisor 000C          ___lwdiv@counter 0010                 _seg_char 0021  
               isa$xinst 0000                 int$flags 002D                 intlevel2 0000  
       ___lwmod@dividend 0005         ___lldiv@dividend 0005         ___lldiv@quotient 000D  
        ___lwmod@divisor 0007          ___lwmod@counter 0009  
